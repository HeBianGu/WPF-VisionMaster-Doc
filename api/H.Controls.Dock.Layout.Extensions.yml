### YamlMime:ManagedReference
items:
- uid: H.Controls.Dock.Layout.Extensions
  commentId: T:H.Controls.Dock.Layout.Extensions
  id: Extensions
  parent: H.Controls.Dock.Layout
  children:
  - H.Controls.Dock.Layout.Extensions.ContainsChildOfType``1(H.Controls.Dock.Layout.ILayoutContainer)
  - H.Controls.Dock.Layout.Extensions.ContainsChildOfType``2(H.Controls.Dock.Layout.ILayoutContainer)
  - H.Controls.Dock.Layout.Extensions.Descendents(H.Controls.Dock.Layout.ILayoutElement)
  - H.Controls.Dock.Layout.Extensions.FindParent``1(H.Controls.Dock.Layout.ILayoutElement)
  - H.Controls.Dock.Layout.Extensions.GetRoot(H.Controls.Dock.Layout.ILayoutElement)
  - H.Controls.Dock.Layout.Extensions.GetSide(H.Controls.Dock.Layout.ILayoutElement)
  - H.Controls.Dock.Layout.Extensions.IsOfType``2(H.Controls.Dock.Layout.ILayoutContainer)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: H.Controls.Dock.Layout.Extensions
  type: Class
  source:
    id: Extensions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Controls\H.Controls.Dock\Layout\Extensions.cs
    startLine: 16
  assemblies:
  - H.Controls.Dock
  namespace: H.Controls.Dock.Layout
  summary: Provides extension methods for WPF specific (Visual Tree) capabilities.
  example: []
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: H.Controls.Dock.Layout.Extensions.Descendents(H.Controls.Dock.Layout.ILayoutElement)
  commentId: M:H.Controls.Dock.Layout.Extensions.Descendents(H.Controls.Dock.Layout.ILayoutElement)
  id: Descendents(H.Controls.Dock.Layout.ILayoutElement)
  isExtensionMethod: true
  parent: H.Controls.Dock.Layout.Extensions
  langs:
  - csharp
  - vb
  name: Descendents(ILayoutElement)
  nameWithType: Extensions.Descendents(ILayoutElement)
  fullName: H.Controls.Dock.Layout.Extensions.Descendents(H.Controls.Dock.Layout.ILayoutElement)
  type: Method
  source:
    id: Descendents
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Controls\H.Controls.Dock\Layout\Extensions.cs
    startLine: 20
  assemblies:
  - H.Controls.Dock
  namespace: H.Controls.Dock.Layout
  syntax:
    content: public static IEnumerable<ILayoutElement> Descendents(this ILayoutElement element)
    parameters:
    - id: element
      type: H.Controls.Dock.Layout.ILayoutElement
    return:
      type: System.Collections.Generic.IEnumerable{H.Controls.Dock.Layout.ILayoutElement}
    content.vb: Public Shared Function Descendents(element As ILayoutElement) As IEnumerable(Of ILayoutElement)
  overload: H.Controls.Dock.Layout.Extensions.Descendents*
- uid: H.Controls.Dock.Layout.Extensions.FindParent``1(H.Controls.Dock.Layout.ILayoutElement)
  commentId: M:H.Controls.Dock.Layout.Extensions.FindParent``1(H.Controls.Dock.Layout.ILayoutElement)
  id: FindParent``1(H.Controls.Dock.Layout.ILayoutElement)
  isExtensionMethod: true
  parent: H.Controls.Dock.Layout.Extensions
  langs:
  - csharp
  - vb
  name: FindParent<T>(ILayoutElement)
  nameWithType: Extensions.FindParent<T>(ILayoutElement)
  fullName: H.Controls.Dock.Layout.Extensions.FindParent<T>(H.Controls.Dock.Layout.ILayoutElement)
  type: Method
  source:
    id: FindParent
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Controls\H.Controls.Dock\Layout\Extensions.cs
    startLine: 31
  assemblies:
  - H.Controls.Dock
  namespace: H.Controls.Dock.Layout
  syntax:
    content: public static T FindParent<T>(this ILayoutElement element)
    parameters:
    - id: element
      type: H.Controls.Dock.Layout.ILayoutElement
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function FindParent(Of T)(element As ILayoutElement) As T
  overload: H.Controls.Dock.Layout.Extensions.FindParent*
  nameWithType.vb: Extensions.FindParent(Of T)(ILayoutElement)
  fullName.vb: H.Controls.Dock.Layout.Extensions.FindParent(Of T)(H.Controls.Dock.Layout.ILayoutElement)
  name.vb: FindParent(Of T)(ILayoutElement)
- uid: H.Controls.Dock.Layout.Extensions.GetRoot(H.Controls.Dock.Layout.ILayoutElement)
  commentId: M:H.Controls.Dock.Layout.Extensions.GetRoot(H.Controls.Dock.Layout.ILayoutElement)
  id: GetRoot(H.Controls.Dock.Layout.ILayoutElement)
  isExtensionMethod: true
  parent: H.Controls.Dock.Layout.Extensions
  langs:
  - csharp
  - vb
  name: GetRoot(ILayoutElement)
  nameWithType: Extensions.GetRoot(ILayoutElement)
  fullName: H.Controls.Dock.Layout.Extensions.GetRoot(H.Controls.Dock.Layout.ILayoutElement)
  type: Method
  source:
    id: GetRoot
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Controls\H.Controls.Dock\Layout\Extensions.cs
    startLine: 39
  assemblies:
  - H.Controls.Dock
  namespace: H.Controls.Dock.Layout
  syntax:
    content: public static ILayoutRoot GetRoot(this ILayoutElement element)
    parameters:
    - id: element
      type: H.Controls.Dock.Layout.ILayoutElement
    return:
      type: H.Controls.Dock.Layout.ILayoutRoot
    content.vb: Public Shared Function GetRoot(element As ILayoutElement) As ILayoutRoot
  overload: H.Controls.Dock.Layout.Extensions.GetRoot*
- uid: H.Controls.Dock.Layout.Extensions.ContainsChildOfType``1(H.Controls.Dock.Layout.ILayoutContainer)
  commentId: M:H.Controls.Dock.Layout.Extensions.ContainsChildOfType``1(H.Controls.Dock.Layout.ILayoutContainer)
  id: ContainsChildOfType``1(H.Controls.Dock.Layout.ILayoutContainer)
  isExtensionMethod: true
  parent: H.Controls.Dock.Layout.Extensions
  langs:
  - csharp
  - vb
  name: ContainsChildOfType<T>(ILayoutContainer)
  nameWithType: Extensions.ContainsChildOfType<T>(ILayoutContainer)
  fullName: H.Controls.Dock.Layout.Extensions.ContainsChildOfType<T>(H.Controls.Dock.Layout.ILayoutContainer)
  type: Method
  source:
    id: ContainsChildOfType
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Controls\H.Controls.Dock\Layout\Extensions.cs
    startLine: 48
  assemblies:
  - H.Controls.Dock
  namespace: H.Controls.Dock.Layout
  syntax:
    content: public static bool ContainsChildOfType<T>(this ILayoutContainer element)
    parameters:
    - id: element
      type: H.Controls.Dock.Layout.ILayoutContainer
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function ContainsChildOfType(Of T)(element As ILayoutContainer) As Boolean
  overload: H.Controls.Dock.Layout.Extensions.ContainsChildOfType*
  nameWithType.vb: Extensions.ContainsChildOfType(Of T)(ILayoutContainer)
  fullName.vb: H.Controls.Dock.Layout.Extensions.ContainsChildOfType(Of T)(H.Controls.Dock.Layout.ILayoutContainer)
  name.vb: ContainsChildOfType(Of T)(ILayoutContainer)
- uid: H.Controls.Dock.Layout.Extensions.ContainsChildOfType``2(H.Controls.Dock.Layout.ILayoutContainer)
  commentId: M:H.Controls.Dock.Layout.Extensions.ContainsChildOfType``2(H.Controls.Dock.Layout.ILayoutContainer)
  id: ContainsChildOfType``2(H.Controls.Dock.Layout.ILayoutContainer)
  isExtensionMethod: true
  parent: H.Controls.Dock.Layout.Extensions
  langs:
  - csharp
  - vb
  name: ContainsChildOfType<T, S>(ILayoutContainer)
  nameWithType: Extensions.ContainsChildOfType<T, S>(ILayoutContainer)
  fullName: H.Controls.Dock.Layout.Extensions.ContainsChildOfType<T, S>(H.Controls.Dock.Layout.ILayoutContainer)
  type: Method
  source:
    id: ContainsChildOfType
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Controls\H.Controls.Dock\Layout\Extensions.cs
    startLine: 55
  assemblies:
  - H.Controls.Dock
  namespace: H.Controls.Dock.Layout
  syntax:
    content: public static bool ContainsChildOfType<T, S>(this ILayoutContainer container)
    parameters:
    - id: container
      type: H.Controls.Dock.Layout.ILayoutContainer
    typeParameters:
    - id: T
    - id: S
    return:
      type: System.Boolean
    content.vb: Public Shared Function ContainsChildOfType(Of T, S)(container As ILayoutContainer) As Boolean
  overload: H.Controls.Dock.Layout.Extensions.ContainsChildOfType*
  nameWithType.vb: Extensions.ContainsChildOfType(Of T, S)(ILayoutContainer)
  fullName.vb: H.Controls.Dock.Layout.Extensions.ContainsChildOfType(Of T, S)(H.Controls.Dock.Layout.ILayoutContainer)
  name.vb: ContainsChildOfType(Of T, S)(ILayoutContainer)
- uid: H.Controls.Dock.Layout.Extensions.IsOfType``2(H.Controls.Dock.Layout.ILayoutContainer)
  commentId: M:H.Controls.Dock.Layout.Extensions.IsOfType``2(H.Controls.Dock.Layout.ILayoutContainer)
  id: IsOfType``2(H.Controls.Dock.Layout.ILayoutContainer)
  isExtensionMethod: true
  parent: H.Controls.Dock.Layout.Extensions
  langs:
  - csharp
  - vb
  name: IsOfType<T, S>(ILayoutContainer)
  nameWithType: Extensions.IsOfType<T, S>(ILayoutContainer)
  fullName: H.Controls.Dock.Layout.Extensions.IsOfType<T, S>(H.Controls.Dock.Layout.ILayoutContainer)
  type: Method
  source:
    id: IsOfType
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Controls\H.Controls.Dock\Layout\Extensions.cs
    startLine: 62
  assemblies:
  - H.Controls.Dock
  namespace: H.Controls.Dock.Layout
  syntax:
    content: public static bool IsOfType<T, S>(this ILayoutContainer container)
    parameters:
    - id: container
      type: H.Controls.Dock.Layout.ILayoutContainer
    typeParameters:
    - id: T
    - id: S
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsOfType(Of T, S)(container As ILayoutContainer) As Boolean
  overload: H.Controls.Dock.Layout.Extensions.IsOfType*
  nameWithType.vb: Extensions.IsOfType(Of T, S)(ILayoutContainer)
  fullName.vb: H.Controls.Dock.Layout.Extensions.IsOfType(Of T, S)(H.Controls.Dock.Layout.ILayoutContainer)
  name.vb: IsOfType(Of T, S)(ILayoutContainer)
- uid: H.Controls.Dock.Layout.Extensions.GetSide(H.Controls.Dock.Layout.ILayoutElement)
  commentId: M:H.Controls.Dock.Layout.Extensions.GetSide(H.Controls.Dock.Layout.ILayoutElement)
  id: GetSide(H.Controls.Dock.Layout.ILayoutElement)
  isExtensionMethod: true
  parent: H.Controls.Dock.Layout.Extensions
  langs:
  - csharp
  - vb
  name: GetSide(ILayoutElement)
  nameWithType: Extensions.GetSide(ILayoutElement)
  fullName: H.Controls.Dock.Layout.Extensions.GetSide(H.Controls.Dock.Layout.ILayoutElement)
  type: Method
  source:
    id: GetSide
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Controls\H.Controls.Dock\Layout\Extensions.cs
    startLine: 64
  assemblies:
  - H.Controls.Dock
  namespace: H.Controls.Dock.Layout
  syntax:
    content: public static AnchorSide GetSide(this ILayoutElement element)
    parameters:
    - id: element
      type: H.Controls.Dock.Layout.ILayoutElement
    return:
      type: H.Controls.Dock.Layout.AnchorSide
    content.vb: Public Shared Function GetSide(element As ILayoutElement) As AnchorSide
  overload: H.Controls.Dock.Layout.Extensions.GetSide*
references:
- uid: H.Controls.Dock.Layout
  commentId: N:H.Controls.Dock.Layout
  href: H.html
  name: H.Controls.Dock.Layout
  nameWithType: H.Controls.Dock.Layout
  fullName: H.Controls.Dock.Layout
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.Dock
    name: Dock
    href: H.Controls.Dock.html
  - name: .
  - uid: H.Controls.Dock.Layout
    name: Layout
    href: H.Controls.Dock.Layout.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.Dock
    name: Dock
    href: H.Controls.Dock.html
  - name: .
  - uid: H.Controls.Dock.Layout
    name: Layout
    href: H.Controls.Dock.Layout.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: H.Controls.Dock.Layout.Extensions.Descendents*
  commentId: Overload:H.Controls.Dock.Layout.Extensions.Descendents
  href: H.Controls.Dock.Layout.Extensions.html#H_Controls_Dock_Layout_Extensions_Descendents_H_Controls_Dock_Layout_ILayoutElement_
  name: Descendents
  nameWithType: Extensions.Descendents
  fullName: H.Controls.Dock.Layout.Extensions.Descendents
- uid: H.Controls.Dock.Layout.ILayoutElement
  commentId: T:H.Controls.Dock.Layout.ILayoutElement
  parent: H.Controls.Dock.Layout
  href: H.Controls.Dock.Layout.ILayoutElement.html
  name: ILayoutElement
  nameWithType: ILayoutElement
  fullName: H.Controls.Dock.Layout.ILayoutElement
- uid: System.Collections.Generic.IEnumerable{H.Controls.Dock.Layout.ILayoutElement}
  commentId: T:System.Collections.Generic.IEnumerable{H.Controls.Dock.Layout.ILayoutElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ILayoutElement>
  nameWithType: IEnumerable<ILayoutElement>
  fullName: System.Collections.Generic.IEnumerable<H.Controls.Dock.Layout.ILayoutElement>
  nameWithType.vb: IEnumerable(Of ILayoutElement)
  fullName.vb: System.Collections.Generic.IEnumerable(Of H.Controls.Dock.Layout.ILayoutElement)
  name.vb: IEnumerable(Of ILayoutElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: H.Controls.Dock.Layout.ILayoutElement
    name: ILayoutElement
    href: H.Controls.Dock.Layout.ILayoutElement.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Controls.Dock.Layout.ILayoutElement
    name: ILayoutElement
    href: H.Controls.Dock.Layout.ILayoutElement.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: H.Controls.Dock.Layout.Extensions.FindParent*
  commentId: Overload:H.Controls.Dock.Layout.Extensions.FindParent
  href: H.Controls.Dock.Layout.Extensions.html#H_Controls_Dock_Layout_Extensions_FindParent__1_H_Controls_Dock_Layout_ILayoutElement_
  name: FindParent
  nameWithType: Extensions.FindParent
  fullName: H.Controls.Dock.Layout.Extensions.FindParent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: H.Controls.Dock.Layout.Extensions.GetRoot*
  commentId: Overload:H.Controls.Dock.Layout.Extensions.GetRoot
  href: H.Controls.Dock.Layout.Extensions.html#H_Controls_Dock_Layout_Extensions_GetRoot_H_Controls_Dock_Layout_ILayoutElement_
  name: GetRoot
  nameWithType: Extensions.GetRoot
  fullName: H.Controls.Dock.Layout.Extensions.GetRoot
- uid: H.Controls.Dock.Layout.ILayoutRoot
  commentId: T:H.Controls.Dock.Layout.ILayoutRoot
  parent: H.Controls.Dock.Layout
  href: H.Controls.Dock.Layout.ILayoutRoot.html
  name: ILayoutRoot
  nameWithType: ILayoutRoot
  fullName: H.Controls.Dock.Layout.ILayoutRoot
- uid: H.Controls.Dock.Layout.Extensions.ContainsChildOfType*
  commentId: Overload:H.Controls.Dock.Layout.Extensions.ContainsChildOfType
  href: H.Controls.Dock.Layout.Extensions.html#H_Controls_Dock_Layout_Extensions_ContainsChildOfType__1_H_Controls_Dock_Layout_ILayoutContainer_
  name: ContainsChildOfType
  nameWithType: Extensions.ContainsChildOfType
  fullName: H.Controls.Dock.Layout.Extensions.ContainsChildOfType
- uid: H.Controls.Dock.Layout.ILayoutContainer
  commentId: T:H.Controls.Dock.Layout.ILayoutContainer
  parent: H.Controls.Dock.Layout
  href: H.Controls.Dock.Layout.ILayoutContainer.html
  name: ILayoutContainer
  nameWithType: ILayoutContainer
  fullName: H.Controls.Dock.Layout.ILayoutContainer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: H.Controls.Dock.Layout.Extensions.IsOfType*
  commentId: Overload:H.Controls.Dock.Layout.Extensions.IsOfType
  href: H.Controls.Dock.Layout.Extensions.html#H_Controls_Dock_Layout_Extensions_IsOfType__2_H_Controls_Dock_Layout_ILayoutContainer_
  name: IsOfType
  nameWithType: Extensions.IsOfType
  fullName: H.Controls.Dock.Layout.Extensions.IsOfType
- uid: H.Controls.Dock.Layout.Extensions.GetSide*
  commentId: Overload:H.Controls.Dock.Layout.Extensions.GetSide
  href: H.Controls.Dock.Layout.Extensions.html#H_Controls_Dock_Layout_Extensions_GetSide_H_Controls_Dock_Layout_ILayoutElement_
  name: GetSide
  nameWithType: Extensions.GetSide
  fullName: H.Controls.Dock.Layout.Extensions.GetSide
- uid: H.Controls.Dock.Layout.AnchorSide
  commentId: T:H.Controls.Dock.Layout.AnchorSide
  parent: H.Controls.Dock.Layout
  href: H.Controls.Dock.Layout.AnchorSide.html
  name: AnchorSide
  nameWithType: AnchorSide
  fullName: H.Controls.Dock.Layout.AnchorSide
