### YamlMime:ManagedReference
items:
- uid: H.DataBases.Share.RepositoryBase`3
  commentId: T:H.DataBases.Share.RepositoryBase`3
  id: RepositoryBase`3
  parent: H.DataBases.Share
  children:
  - H.DataBases.Share.RepositoryBase`3.#ctor(`0)
  - H.DataBases.Share.RepositoryBase`3.Clear(System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.ClearAsync(System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.CreateEqualityExpressionForId(`2)
  - H.DataBases.Share.RepositoryBase`3.DataContext
  - H.DataBases.Share.RepositoryBase`3.Delete(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.Delete(`1,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.DeleteAsync(`1,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.DeleteAsync(`2,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.DeleteByID(`2,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.DeleteByIDAsync(`2,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  - H.DataBases.Share.RepositoryBase`3.GetByIDAsync(`2)
  - H.DataBases.Share.RepositoryBase`3.GetList
  - H.DataBases.Share.RepositoryBase`3.GetList(System.Action{System.Linq.IQueryable{`1}})
  - H.DataBases.Share.RepositoryBase`3.GetList(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  - H.DataBases.Share.RepositoryBase`3.GetList(System.String[])
  - H.DataBases.Share.RepositoryBase`3.GetListAsync
  - H.DataBases.Share.RepositoryBase`3.GetListAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  - H.DataBases.Share.RepositoryBase`3.GetListAsync(System.String[])
  - H.DataBases.Share.RepositoryBase`3.Insert(`1,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.InsertAsync(`1,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.InsertOrUpdateAsync(`1,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.InsertRangeAsync(`1[])
  - H.DataBases.Share.RepositoryBase`3.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
  - H.DataBases.Share.RepositoryBase`3.Save
  - H.DataBases.Share.RepositoryBase`3.SaveAsync
  - H.DataBases.Share.RepositoryBase`3.Update(`1,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3.UpdateAsync(`1,System.Boolean)
  - H.DataBases.Share.RepositoryBase`3._dbContext
  langs:
  - csharp
  - vb
  name: RepositoryBase<TDbContext, TEntity, TPrimaryKey>
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>
  type: Class
  source:
    id: RepositoryBase
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 21
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  syntax:
    content: 'public abstract class RepositoryBase<TDbContext, TEntity, TPrimaryKey> : IRepository<TEntity, TPrimaryKey>, IRepository where TDbContext : DbContext where TEntity : EntityBase<TPrimaryKey>'
    typeParameters:
    - id: TDbContext
    - id: TEntity
    - id: TPrimaryKey
    content.vb: Public MustInherit Class RepositoryBase(Of TDbContext As DbContext, TEntity As EntityBase(Of TPrimaryKey), TPrimaryKey) Implements IRepository(Of TEntity, TPrimaryKey), IRepository
  inheritance:
  - System.Object
  derivedClasses:
  - H.DataBases.Share.DbContextRepository`2
  - H.DataBases.Share.RepositoryBase`2
  - H.DataBases.Share.StringRepositoryBase`1
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  - H.Extensions.DataBase.IRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - H.DataBases.Share.RepositoryBase`3.H.Extensions.Common.ObjectExtension.CloneCast``1(System.Predicate{System.Reflection.PropertyInfo})
  - H.DataBases.Share.RepositoryBase`3.H.Extensions.Common.ObjectExtension.ToEnumerable``1
  - H.DataBases.Share.RepositoryBase`3.H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1
  - H.DataBases.Share.RepositoryBase`3.H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1
  - System.Object.H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.String)
  - System.Object.H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.String)
  - System.Object.H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1
  - System.Object.H.Extensions.Common.ObjectExtension.CloneBy(System.Predicate{System.Reflection.PropertyInfo})
  - System.Object.H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  - System.Object.H.Extensions.Common.ObjectExtension.IsMacth(System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  - System.Object.H.Extensions.Common.ObjectExtension.IsMacth(System.String)
  - System.Object.H.Extensions.Common.ObjectExtension.ModelState(System.Collections.Generic.List{System.String}@)
  - System.Object.H.Extensions.Common.ObjectExtension.ModelStateDeep(System.String@)
  - System.Object.H.Extensions.Common.ObjectExtension.TryChangeType(System.Type,System.Object@)
  - System.Object.H.Extensions.Common.ObjectExtension.TryChangeType``1
  - System.Object.H.Extensions.Common.ObjectExtension.TryChangeType``1({T}@)
  - System.Object.H.Extensions.Common.ObjectExtension.TryConvertToString
  - System.Object.H.Extensions.Common.ObjectExtension.TryConvertToString(System.String@)
  - System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos
  - System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  - System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Text.Json.Utf8JsonWriter)
  - System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Action,System.Windows.Threading.DispatcherPriority)
  - System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  - System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey)
  name.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey)
- uid: H.DataBases.Share.RepositoryBase`3._dbContext
  commentId: F:H.DataBases.Share.RepositoryBase`3._dbContext
  id: _dbContext
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: _dbContext
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>._dbContext
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>._dbContext
  type: Field
  source:
    id: _dbContext
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 24
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  syntax:
    content: protected readonly TDbContext _dbContext
    return:
      type: '{TDbContext}'
    content.vb: Protected ReadOnly _dbContext As TDbContext
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey)._dbContext
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey)._dbContext
- uid: H.DataBases.Share.RepositoryBase`3.DataContext
  commentId: P:H.DataBases.Share.RepositoryBase`3.DataContext
  id: DataContext
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: DataContext
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DataContext
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DataContext
  type: Property
  source:
    id: DataContext
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 26
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  syntax:
    content: public TDbContext DataContext { get; }
    parameters: []
    return:
      type: '{TDbContext}'
    content.vb: Public ReadOnly Property DataContext As TDbContext
  overload: H.DataBases.Share.RepositoryBase`3.DataContext*
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DataContext
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DataContext
- uid: H.DataBases.Share.RepositoryBase`3.#ctor(`0)
  commentId: M:H.DataBases.Share.RepositoryBase`3.#ctor(`0)
  id: '#ctor(`0)'
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: RepositoryBase(TDbContext)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.RepositoryBase(TDbContext)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.RepositoryBase(TDbContext)
  type: Constructor
  source:
    id: .ctor
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 32
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 通过构造函数注入得到数据上下文对象实例
  example: []
  syntax:
    content: public RepositoryBase(TDbContext dbContext)
    parameters:
    - id: dbContext
      type: '{TDbContext}'
      description: ''
    content.vb: Public Sub New(dbContext As TDbContext)
  overload: H.DataBases.Share.RepositoryBase`3.#ctor*
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).New(TDbContext)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).New(TDbContext)
  name.vb: New(TDbContext)
- uid: H.DataBases.Share.RepositoryBase`3.GetListAsync
  commentId: M:H.DataBases.Share.RepositoryBase`3.GetListAsync
  id: GetListAsync
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: GetListAsync()
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetListAsync()
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetListAsync()
  type: Method
  source:
    id: GetListAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 41
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 获取实体集合
  example: []
  syntax:
    content: public Task<List<TEntity>> GetListAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{TEntity}}}
      description: ''
    content.vb: Public Function GetListAsync() As Task(Of List(Of TEntity))
  overload: H.DataBases.Share.RepositoryBase`3.GetListAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetListAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetListAsync()
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetListAsync()
- uid: H.DataBases.Share.RepositoryBase`3.GetList
  commentId: M:H.DataBases.Share.RepositoryBase`3.GetList
  id: GetList
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: GetList()
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList()
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList()
  type: Method
  source:
    id: GetList
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 49
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 获取实体集合
  example: []
  syntax:
    content: public List<TEntity> GetList()
    return:
      type: System.Collections.Generic.List{{TEntity}}
      description: ''
    content.vb: Public Function GetList() As List(Of TEntity)
  overload: H.DataBases.Share.RepositoryBase`3.GetList*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetList
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList()
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList()
- uid: H.DataBases.Share.RepositoryBase`3.GetListAsync(System.String[])
  commentId: M:H.DataBases.Share.RepositoryBase`3.GetListAsync(System.String[])
  id: GetListAsync(System.String[])
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: GetListAsync(params string[])
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetListAsync(params string[])
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetListAsync(params string[])
  type: Method
  source:
    id: GetListAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 58
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 获取实体集合
  example: []
  syntax:
    content: public Task<List<TEntity>> GetListAsync(params string[] includes)
    parameters:
    - id: includes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{TEntity}}}
      description: ''
    content.vb: Public Function GetListAsync(ParamArray includes As String()) As Task(Of List(Of TEntity))
  overload: H.DataBases.Share.RepositoryBase`3.GetListAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetListAsync(System.String[])
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetListAsync(ParamArray String())
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetListAsync(ParamArray String())
  name.vb: GetListAsync(ParamArray String())
- uid: H.DataBases.Share.RepositoryBase`3.GetList(System.String[])
  commentId: M:H.DataBases.Share.RepositoryBase`3.GetList(System.String[])
  id: GetList(System.String[])
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: GetList(params string[])
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList(params string[])
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList(params string[])
  type: Method
  source:
    id: GetList
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 83
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 获取实体集合
  example: []
  syntax:
    content: public List<TEntity> GetList(params string[] includes)
    parameters:
    - id: includes
      type: System.String[]
    return:
      type: System.Collections.Generic.List{{TEntity}}
      description: ''
    content.vb: Public Function GetList(ParamArray includes As String()) As List(Of TEntity)
  overload: H.DataBases.Share.RepositoryBase`3.GetList*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetList(System.String[])
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList(ParamArray String())
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList(ParamArray String())
  name.vb: GetList(ParamArray String())
- uid: H.DataBases.Share.RepositoryBase`3.GetList(System.Action{System.Linq.IQueryable{`1}})
  commentId: M:H.DataBases.Share.RepositoryBase`3.GetList(System.Action{System.Linq.IQueryable{`1}})
  id: GetList(System.Action{System.Linq.IQueryable{`1}})
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: GetList(Action<IQueryable<TEntity>>)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList(Action<IQueryable<TEntity>>)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList(System.Action<System.Linq.IQueryable<TEntity>>)
  type: Method
  source:
    id: GetList
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 108
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 获取实体集合
  example: []
  syntax:
    content: public List<TEntity> GetList(Action<IQueryable<TEntity>> action)
    parameters:
    - id: action
      type: System.Action{System.Linq.IQueryable{{TEntity}}}
    return:
      type: System.Collections.Generic.List{{TEntity}}
      description: ''
    content.vb: Public Function GetList(action As Action(Of IQueryable(Of TEntity))) As List(Of TEntity)
  overload: H.DataBases.Share.RepositoryBase`3.GetList*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetList(System.Action{System.Linq.IQueryable{{TEntity}}})
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList(Action(Of IQueryable(Of TEntity)))
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList(System.Action(Of System.Linq.IQueryable(Of TEntity)))
  name.vb: GetList(Action(Of IQueryable(Of TEntity)))
- uid: H.DataBases.Share.RepositoryBase`3.GetListAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:H.DataBases.Share.RepositoryBase`3.GetListAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  id: GetListAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: GetListAsync(Expression<Func<TEntity, bool>>)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetListAsync(Expression<Func<TEntity, bool>>)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetListAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  type: Method
  source:
    id: GetListAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 120
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 根据lambda表达式条件获取实体集合
  example: []
  syntax:
    content: public Task<List<TEntity>> GetListAsync(Expression<Func<TEntity, bool>> predicate)
    parameters:
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: lambda表达式条件
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{TEntity}}}
      description: ''
    content.vb: Public Function GetListAsync(predicate As Expression(Of Func(Of TEntity, Boolean))) As Task(Of List(Of TEntity))
  overload: H.DataBases.Share.RepositoryBase`3.GetListAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetListAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetListAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetListAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: GetListAsync(Expression(Of Func(Of TEntity, Boolean)))
- uid: H.DataBases.Share.RepositoryBase`3.GetList(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:H.DataBases.Share.RepositoryBase`3.GetList(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  id: GetList(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: GetList(Expression<Func<TEntity, bool>>)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList(Expression<Func<TEntity, bool>>)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  type: Method
  source:
    id: GetList
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 130
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 根据lambda表达式条件获取实体集合
  example: []
  syntax:
    content: public List<TEntity> GetList(Expression<Func<TEntity, bool>> predicate)
    parameters:
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: lambda表达式条件
    return:
      type: System.Collections.Generic.List{{TEntity}}
      description: ''
    content.vb: Public Function GetList(predicate As Expression(Of Func(Of TEntity, Boolean))) As List(Of TEntity)
  overload: H.DataBases.Share.RepositoryBase`3.GetList*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetList(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: GetList(Expression(Of Func(Of TEntity, Boolean)))
- uid: H.DataBases.Share.RepositoryBase`3.GetByIDAsync(`2)
  commentId: M:H.DataBases.Share.RepositoryBase`3.GetByIDAsync(`2)
  id: GetByIDAsync(`2)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: GetByIDAsync(TPrimaryKey)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetByIDAsync(TPrimaryKey)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetByIDAsync(TPrimaryKey)
  type: Method
  source:
    id: GetByIDAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 141
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 根据主键获取实体
  example: []
  syntax:
    content: public Task<TEntity> GetByIDAsync(TPrimaryKey id)
    parameters:
    - id: id
      type: '{TPrimaryKey}'
      description: 实体主键
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
      description: ''
    content.vb: Public Function GetByIDAsync(id As TPrimaryKey) As Task(Of TEntity)
  overload: H.DataBases.Share.RepositoryBase`3.GetByIDAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetByIDAsync({TPrimaryKey})
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetByIDAsync(TPrimaryKey)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetByIDAsync(TPrimaryKey)
- uid: H.DataBases.Share.RepositoryBase`3.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:H.DataBases.Share.RepositoryBase`3.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  id: FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: FirstOrDefaultAsync(Expression<Func<TEntity, bool>>)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(Expression<Func<TEntity, bool>>)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  type: Method
  source:
    id: FirstOrDefaultAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 150
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 根据lambda表达式条件获取单个实体
  example: []
  syntax:
    content: public Task<TEntity> FirstOrDefaultAsync(Expression<Func<TEntity, bool>> predicate)
    parameters:
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: lambda表达式条件
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
      description: ''
    content.vb: Public Function FirstOrDefaultAsync(predicate As Expression(Of Func(Of TEntity, Boolean))) As Task(Of TEntity)
  overload: H.DataBases.Share.RepositoryBase`3.FirstOrDefaultAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)))
- uid: H.DataBases.Share.RepositoryBase`3.InsertAsync(`1,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.InsertAsync(`1,System.Boolean)
  id: InsertAsync(`1,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: InsertAsync(TEntity, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync(TEntity, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync(TEntity, bool)
  type: Method
  source:
    id: InsertAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 161
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 新增实体
  example: []
  syntax:
    content: public Task<int> InsertAsync(TEntity entity, bool autoSave = true)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 实体
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Function InsertAsync(entity As TEntity, autoSave As Boolean = True) As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.InsertAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.InsertAsync({TEntity},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertAsync(TEntity, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertAsync(TEntity, Boolean)
  name.vb: InsertAsync(TEntity, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.InsertRangeAsync(`1[])
  commentId: M:H.DataBases.Share.RepositoryBase`3.InsertRangeAsync(`1[])
  id: InsertRangeAsync(`1[])
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: InsertRangeAsync(params TEntity[])
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertRangeAsync(params TEntity[])
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertRangeAsync(params TEntity[])
  type: Method
  source:
    id: InsertRangeAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 177
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 新增实体
  example: []
  syntax:
    content: public Task<int> InsertRangeAsync(params TEntity[] entity)
    parameters:
    - id: entity
      type: '{TEntity}[]'
      description: 实体
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Function InsertRangeAsync(ParamArray entity As TEntity()) As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.InsertRangeAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.InsertRangeAsync({TEntity}[])
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertRangeAsync(ParamArray TEntity())
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertRangeAsync(ParamArray TEntity())
  name.vb: InsertRangeAsync(ParamArray TEntity())
- uid: H.DataBases.Share.RepositoryBase`3.Insert(`1,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.Insert(`1,System.Boolean)
  id: Insert(`1,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: Insert(TEntity, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Insert(TEntity, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Insert(TEntity, bool)
  type: Method
  source:
    id: Insert
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 191
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 新增实体
  example: []
  syntax:
    content: public int Insert(TEntity entity, bool autoSave = true)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 实体
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function Insert(entity As TEntity, autoSave As Boolean = True) As Integer
  overload: H.DataBases.Share.RepositoryBase`3.Insert*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Insert({TEntity},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Insert(TEntity, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Insert(TEntity, Boolean)
  name.vb: Insert(TEntity, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.UpdateAsync(`1,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.UpdateAsync(`1,System.Boolean)
  id: UpdateAsync(`1,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: UpdateAsync(TEntity, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TEntity, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TEntity, bool)
  type: Method
  source:
    id: UpdateAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 206
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 更新实体
  example: []
  syntax:
    content: public Task<int> UpdateAsync(TEntity entity, bool autoSave = true)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 实体
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function UpdateAsync(entity As TEntity, autoSave As Boolean = True) As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.UpdateAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.UpdateAsync({TEntity},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync(TEntity, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync(TEntity, Boolean)
  name.vb: UpdateAsync(TEntity, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.Update(`1,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.Update(`1,System.Boolean)
  id: Update(`1,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: Update(TEntity, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Update(TEntity, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Update(TEntity, bool)
  type: Method
  source:
    id: Update
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 223
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 更新实体
  example: []
  syntax:
    content: public int Update(TEntity entity, bool autoSave = true)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 实体
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Int32
    content.vb: Public Function Update(entity As TEntity, autoSave As Boolean = True) As Integer
  overload: H.DataBases.Share.RepositoryBase`3.Update*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Update({TEntity},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Update(TEntity, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Update(TEntity, Boolean)
  name.vb: Update(TEntity, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.InsertOrUpdateAsync(`1,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.InsertOrUpdateAsync(`1,System.Boolean)
  id: InsertOrUpdateAsync(`1,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: InsertOrUpdateAsync(TEntity, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, bool)
  type: Method
  source:
    id: InsertOrUpdateAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 247
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 新增或更新实体
  example: []
  syntax:
    content: public Task<int> InsertOrUpdateAsync(TEntity entity, bool autoSave = true)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 实体
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function InsertOrUpdateAsync(entity As TEntity, autoSave As Boolean = True) As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.InsertOrUpdateAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.InsertOrUpdateAsync({TEntity},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, Boolean)
  name.vb: InsertOrUpdateAsync(TEntity, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.DeleteAsync(`1,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.DeleteAsync(`1,System.Boolean)
  id: DeleteAsync(`1,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: DeleteAsync(TEntity, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TEntity, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TEntity, bool)
  type: Method
  source:
    id: DeleteAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 260
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 删除实体
  example: []
  syntax:
    content: public Task<int> DeleteAsync(TEntity entity, bool autoSave = true)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 要删除的实体
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function DeleteAsync(entity As TEntity, autoSave As Boolean = True) As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.DeleteAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.DeleteAsync({TEntity},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(TEntity, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(TEntity, Boolean)
  name.vb: DeleteAsync(TEntity, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.DeleteByIDAsync(`2,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.DeleteByIDAsync(`2,System.Boolean)
  id: DeleteByIDAsync(`2,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: DeleteByIDAsync(TPrimaryKey, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteByIDAsync(TPrimaryKey, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteByIDAsync(TPrimaryKey, bool)
  type: Method
  source:
    id: DeleteByIDAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 274
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 删除实体
  example: []
  syntax:
    content: public Task<int> DeleteByIDAsync(TPrimaryKey id, bool autoSave = true)
    parameters:
    - id: id
      type: '{TPrimaryKey}'
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function DeleteByIDAsync(id As TPrimaryKey, autoSave As Boolean = True) As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.DeleteByIDAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.DeleteByIDAsync({TPrimaryKey},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteByIDAsync(TPrimaryKey, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteByIDAsync(TPrimaryKey, Boolean)
  name.vb: DeleteByIDAsync(TPrimaryKey, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.DeleteByID(`2,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.DeleteByID(`2,System.Boolean)
  id: DeleteByID(`2,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: DeleteByID(TPrimaryKey, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteByID(TPrimaryKey, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteByID(TPrimaryKey, bool)
  type: Method
  source:
    id: DeleteByID
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 289
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 删除实体
  example: []
  syntax:
    content: public int DeleteByID(TPrimaryKey id, bool autoSave = true)
    parameters:
    - id: id
      type: '{TPrimaryKey}'
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Int32
    content.vb: Public Function DeleteByID(id As TPrimaryKey, autoSave As Boolean = True) As Integer
  overload: H.DataBases.Share.RepositoryBase`3.DeleteByID*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.DeleteByID({TPrimaryKey},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteByID(TPrimaryKey, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteByID(TPrimaryKey, Boolean)
  name.vb: DeleteByID(TPrimaryKey, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.Delete(`1,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.Delete(`1,System.Boolean)
  id: Delete(`1,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: Delete(TEntity, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Delete(TEntity, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Delete(TEntity, bool)
  type: Method
  source:
    id: Delete
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 305
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 删除实体
  example: []
  syntax:
    content: public int Delete(TEntity entity, bool autoSave = true)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: 要删除的实体
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Int32
    content.vb: Public Function Delete(entity As TEntity, autoSave As Boolean = True) As Integer
  overload: H.DataBases.Share.RepositoryBase`3.Delete*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Delete({TEntity},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Delete(TEntity, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Delete(TEntity, Boolean)
  name.vb: Delete(TEntity, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.Clear(System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.Clear(System.Boolean)
  id: Clear(System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: Clear(bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Clear(bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Clear(bool)
  type: Method
  source:
    id: Clear
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 320
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 删除实体
  example: []
  syntax:
    content: public int Clear(bool autoSave = true)
    parameters:
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Int32
    content.vb: Public Function Clear(autoSave As Boolean = True) As Integer
  overload: H.DataBases.Share.RepositoryBase`3.Clear*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Clear(System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Clear(Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Clear(Boolean)
  name.vb: Clear(Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.ClearAsync(System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.ClearAsync(System.Boolean)
  id: ClearAsync(System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: ClearAsync(bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.ClearAsync(bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.ClearAsync(bool)
  type: Method
  source:
    id: ClearAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 335
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 删除实体
  example: []
  syntax:
    content: public Task<int> ClearAsync(bool autoSave = true)
    parameters:
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function ClearAsync(autoSave As Boolean = True) As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.ClearAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.ClearAsync(System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).ClearAsync(Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).ClearAsync(Boolean)
  name.vb: ClearAsync(Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.DeleteAsync(`2,System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.DeleteAsync(`2,System.Boolean)
  id: DeleteAsync(`2,System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: DeleteAsync(TPrimaryKey, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TPrimaryKey, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TPrimaryKey, bool)
  type: Method
  source:
    id: DeleteAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 349
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 删除实体
  example: []
  syntax:
    content: public Task<int> DeleteAsync(TPrimaryKey id, bool autoSave = true)
    parameters:
    - id: id
      type: '{TPrimaryKey}'
      description: 实体主键
    - id: autoSave
      type: System.Boolean
      description: 是否立即执行保存
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function DeleteAsync(id As TPrimaryKey, autoSave As Boolean = True) As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.DeleteAsync*
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(TPrimaryKey, Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(TPrimaryKey, Boolean)
  name.vb: DeleteAsync(TPrimaryKey, Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  id: DeleteAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: DeleteAsync(Expression<Func<TEntity, bool>>, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(Expression<Func<TEntity, bool>>, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool)
  type: Method
  source:
    id: DeleteAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 363
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 根据条件删除实体
  example: []
  syntax:
    content: public Task<int> DeleteAsync(Expression<Func<TEntity, bool>> where, bool autoSave = true)
    parameters:
    - id: where
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: lambda表达式
    - id: autoSave
      type: System.Boolean
      description: 是否自动保存
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function DeleteAsync(where As Expression(Of Func(Of TEntity, Boolean)), autoSave As Boolean = True) As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.DeleteAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.DeleteAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Boolean)
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean)
  name.vb: DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.Delete(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  commentId: M:H.DataBases.Share.RepositoryBase`3.Delete(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  id: Delete(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: Delete(Expression<Func<TEntity, bool>>, bool)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Delete(Expression<Func<TEntity, bool>>, bool)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool)
  type: Method
  source:
    id: Delete
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 372
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  syntax:
    content: public int Delete(Expression<Func<TEntity, bool>> where, bool autoSave = true)
    parameters:
    - id: where
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
    - id: autoSave
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function Delete(where As Expression(Of Func(Of TEntity, Boolean)), autoSave As Boolean = True) As Integer
  overload: H.DataBases.Share.RepositoryBase`3.Delete*
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Delete(Expression(Of Func(Of TEntity, Boolean)), Boolean)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Delete(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean)
  name.vb: Delete(Expression(Of Func(Of TEntity, Boolean)), Boolean)
- uid: H.DataBases.Share.RepositoryBase`3.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
  commentId: M:H.DataBases.Share.RepositoryBase`3.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
  id: LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: LoadPageList(int, int, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, object>>)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.LoadPageList(int, int, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, object>>)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.LoadPageList(int, int, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<TEntity, object>>)
  type: Method
  source:
    id: LoadPageList
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 389
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 分页查询
  example: []
  syntax:
    content: public Task<Tuple<List<TEntity>, int>> LoadPageList(int startPage, int pageSize, Expression<Func<TEntity, bool>> where = null, Expression<Func<TEntity, object>> order = null)
    parameters:
    - id: startPage
      type: System.Int32
      description: 页码
    - id: pageSize
      type: System.Int32
      description: 单页数据数
    - id: where
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: 条件
    - id: order
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: 排序
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Collections.Generic.List{{TEntity}},System.Int32}}
      description: ''
    content.vb: Public Function LoadPageList(startPage As Integer, pageSize As Integer, where As Expression(Of Func(Of TEntity, Boolean)) = Nothing, order As Expression(Of Func(Of TEntity, Object)) = Nothing) As Task(Of Tuple(Of List(Of TEntity), Integer))
  overload: H.DataBases.Share.RepositoryBase`3.LoadPageList*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}})
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).LoadPageList(Integer, Integer, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object)))
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).LoadPageList(Integer, Integer, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object)))
  name.vb: LoadPageList(Integer, Integer, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object)))
- uid: H.DataBases.Share.RepositoryBase`3.SaveAsync
  commentId: M:H.DataBases.Share.RepositoryBase`3.SaveAsync
  id: SaveAsync
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: SaveAsync()
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.SaveAsync()
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.SaveAsync()
  type: Method
  source:
    id: SaveAsync
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 414
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 事务性保存
  example: []
  syntax:
    content: public Task<int> SaveAsync()
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function SaveAsync() As Task(Of Integer)
  overload: H.DataBases.Share.RepositoryBase`3.SaveAsync*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.SaveAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).SaveAsync()
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).SaveAsync()
- uid: H.DataBases.Share.RepositoryBase`3.Save
  commentId: M:H.DataBases.Share.RepositoryBase`3.Save
  id: Save
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Save()
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Save()
  type: Method
  source:
    id: Save
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 422
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 事务性保存
  example: []
  syntax:
    content: public int Save()
    return:
      type: System.Int32
    content.vb: Public Function Save() As Integer
  overload: H.DataBases.Share.RepositoryBase`3.Save*
  implements:
  - H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Save
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Save()
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Save()
- uid: H.DataBases.Share.RepositoryBase`3.CreateEqualityExpressionForId(`2)
  commentId: M:H.DataBases.Share.RepositoryBase`3.CreateEqualityExpressionForId(`2)
  id: CreateEqualityExpressionForId(`2)
  parent: H.DataBases.Share.RepositoryBase`3
  langs:
  - csharp
  - vb
  name: CreateEqualityExpressionForId(TPrimaryKey)
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.CreateEqualityExpressionForId(TPrimaryKey)
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.CreateEqualityExpressionForId(TPrimaryKey)
  type: Method
  source:
    id: CreateEqualityExpressionForId
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\DataBases\H.DataBases.Share\Provider\RepositoryBase.cs
    startLine: 432
  assemblies:
  - H.DataBases.Sqlite
  namespace: H.DataBases.Share
  summary: 根据主键构建判断表达式
  example: []
  syntax:
    content: protected static Expression<Func<TEntity, bool>> CreateEqualityExpressionForId(TPrimaryKey id)
    parameters:
    - id: id
      type: '{TPrimaryKey}'
      description: 主键
    return:
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: ''
    content.vb: Protected Shared Function CreateEqualityExpressionForId(id As TPrimaryKey) As Expression(Of Func(Of TEntity, Boolean))
  overload: H.DataBases.Share.RepositoryBase`3.CreateEqualityExpressionForId*
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).CreateEqualityExpressionForId(TPrimaryKey)
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).CreateEqualityExpressionForId(TPrimaryKey)
references:
- uid: H.DataBases.Share
  commentId: N:H.DataBases.Share
  href: H.html
  name: H.DataBases.Share
  nameWithType: H.DataBases.Share
  fullName: H.DataBases.Share
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.DataBases
    name: DataBases
    href: H.DataBases.html
  - name: .
  - uid: H.DataBases.Share
    name: Share
    href: H.DataBases.Share.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.DataBases
    name: DataBases
    href: H.DataBases.html
  - name: .
  - uid: H.DataBases.Share
    name: Share
    href: H.DataBases.Share.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  commentId: T:H.Extensions.DataBase.IRepository{`1,`2}
  parent: H.Extensions.DataBase
  definition: H.Extensions.DataBase.IRepository`2
  href: H.Extensions.DataBase.IRepository-2.html
  name: IRepository<TEntity, TPrimaryKey>
  nameWithType: IRepository<TEntity, TPrimaryKey>
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey)
  name.vb: IRepository(Of TEntity, TPrimaryKey)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2
    name: IRepository
    href: H.Extensions.DataBase.IRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2
    name: IRepository
    href: H.Extensions.DataBase.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
- uid: H.Extensions.DataBase.IRepository
  commentId: T:H.Extensions.DataBase.IRepository
  parent: H.Extensions.DataBase
  href: H.Extensions.DataBase.IRepository.html
  name: IRepository
  nameWithType: IRepository
  fullName: H.Extensions.DataBase.IRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.H.Extensions.Common.ObjectExtension.CloneCast``1(System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:H.Extensions.Common.ObjectExtension.CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneCast__1___0_System_Predicate_System_Reflection_PropertyInfo__
  name: CloneCast<RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(RepositoryBase<TDbContext, TEntity, TPrimaryKey>, Predicate<PropertyInfo>)
  nameWithType: ObjectExtension.CloneCast<RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(RepositoryBase<TDbContext, TEntity, TPrimaryKey>, Predicate<PropertyInfo>)
  fullName: H.Extensions.Common.ObjectExtension.CloneCast<H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>, System.Predicate<System.Reflection.PropertyInfo>)
  nameWithType.vb: ObjectExtension.CloneCast(Of RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(RepositoryBase(Of TDbContext, TEntity, TPrimaryKey), Predicate(Of PropertyInfo))
  fullName.vb: H.Extensions.Common.ObjectExtension.CloneCast(Of H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey), System.Predicate(Of System.Reflection.PropertyInfo))
  name.vb: CloneCast(Of RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(RepositoryBase(Of TDbContext, TEntity, TPrimaryKey), Predicate(Of PropertyInfo))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CloneCast``1(H.DataBases.Share.RepositoryBase{`0,`1,`2},System.Predicate{System.Reflection.PropertyInfo})
    name: CloneCast
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneCast__1___0_System_Predicate_System_Reflection_PropertyInfo__
  - name: <
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: <
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  - name: '>'
  - name: (
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: <
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CloneCast``1(H.DataBases.Share.RepositoryBase{`0,`1,`2},System.Predicate{System.Reflection.PropertyInfo})
    name: CloneCast
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneCast__1___0_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
  - name: )
  - name: (
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.H.Extensions.Common.ObjectExtension.ToEnumerable``1
  commentId: M:H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  name: ToEnumerable<RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(RepositoryBase<TDbContext, TEntity, TPrimaryKey>)
  nameWithType: ObjectExtension.ToEnumerable<RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(RepositoryBase<TDbContext, TEntity, TPrimaryKey>)
  fullName: H.Extensions.Common.ObjectExtension.ToEnumerable<H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>)
  nameWithType.vb: ObjectExtension.ToEnumerable(Of RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))
  fullName.vb: H.Extensions.Common.ObjectExtension.ToEnumerable(Of H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))
  name.vb: ToEnumerable(Of RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(H.DataBases.Share.RepositoryBase{`0,`1,`2})
    name: ToEnumerable
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  - name: <
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: <
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  - name: '>'
  - name: (
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: <
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(H.DataBases.Share.RepositoryBase{`0,`1,`2})
    name: ToEnumerable
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
  - name: )
  - name: (
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1
  commentId: M:H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
  parent: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension
  definition: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
  href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  name: CloneByNewtonsoftJson<RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(RepositoryBase<TDbContext, TEntity, TPrimaryKey>)
  nameWithType: NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson<RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(RepositoryBase<TDbContext, TEntity, TPrimaryKey>)
  fullName: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson<H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>)
  nameWithType.vb: NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson(Of RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))
  fullName.vb: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson(Of H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))
  name.vb: CloneByNewtonsoftJson(Of RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))
  spec.csharp:
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(H.DataBases.Share.RepositoryBase{`0,`1,`2})
    name: CloneByNewtonsoftJson
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  - name: <
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: <
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  - name: '>'
  - name: (
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: <
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(H.DataBases.Share.RepositoryBase{`0,`1,`2})
    name: CloneByNewtonsoftJson
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
  - name: )
  - name: (
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1
  commentId: M:H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
  parent: H.VisionMaster.ResultPresenter.ResultPresenterExtension
  definition: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
  href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  name: ToValueResultPresenter<RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(RepositoryBase<TDbContext, TEntity, TPrimaryKey>)
  nameWithType: ResultPresenterExtension.ToValueResultPresenter<RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(RepositoryBase<TDbContext, TEntity, TPrimaryKey>)
  fullName: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter<H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>>(H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>)
  nameWithType.vb: ResultPresenterExtension.ToValueResultPresenter(Of RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))
  fullName.vb: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter(Of H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))
  name.vb: ToValueResultPresenter(Of RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))(RepositoryBase(Of TDbContext, TEntity, TPrimaryKey))
  spec.csharp:
  - uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(H.DataBases.Share.RepositoryBase{`0,`1,`2})
    name: ToValueResultPresenter
    href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  - name: <
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: <
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  - name: '>'
  - name: (
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: <
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(H.DataBases.Share.RepositoryBase{`0,`1,`2})
    name: ToValueResultPresenter
    href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
  - name: )
  - name: (
  - uid: H.DataBases.Share.RepositoryBase`3
    name: RepositoryBase
    href: H.DataBases.Share.RepositoryBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
  - name: )
- uid: System.Object.H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.String)
  commentId: M:H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
  parent: H.Controls.FilterColumnDataGrid.Extensions
  definition: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
  href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  name: GetPropertyValue(object, string)
  nameWithType: Extensions.GetPropertyValue(object, string)
  fullName: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(object, string)
  nameWithType.vb: Extensions.GetPropertyValue(Object, String)
  fullName.vb: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(Object, String)
  name.vb: GetPropertyValue(Object, String)
  spec.csharp:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.String)
  commentId: M:H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
  parent: H.Controls.FilterColumnDataGrid.Extensions
  definition: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
  href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  name: GetPropertyValue<T>(object, string)
  nameWithType: Extensions.GetPropertyValue<T>(object, string)
  fullName: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue<T>(object, string)
  nameWithType.vb: Extensions.GetPropertyValue(Of T)(Object, String)
  fullName.vb: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(Of T)(Object, String)
  name.vb: GetPropertyValue(Of T)(Object, String)
  spec.csharp:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1
  commentId: M:H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
  parent: H.Controls.Form.Provider.PropertyInfoExtention
  definition: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
  href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  name: ChangeType<T>(object)
  nameWithType: PropertyInfoExtention.ChangeType<T>(object)
  fullName: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType<T>(object)
  nameWithType.vb: PropertyInfoExtention.ChangeType(Of T)(Object)
  fullName.vb: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType(Of T)(Object)
  name.vb: ChangeType(Of T)(Object)
  spec.csharp:
  - uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
    name: ChangeType
    href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
    name: ChangeType
    href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.CloneBy(System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  name: CloneBy(object, Predicate<PropertyInfo>)
  nameWithType: ObjectExtension.CloneBy(object, Predicate<PropertyInfo>)
  fullName: H.Extensions.Common.ObjectExtension.CloneBy(object, System.Predicate<System.Reflection.PropertyInfo>)
  nameWithType.vb: ObjectExtension.CloneBy(Object, Predicate(Of PropertyInfo))
  fullName.vb: H.Extensions.Common.ObjectExtension.CloneBy(Object, System.Predicate(Of System.Reflection.PropertyInfo))
  name.vb: CloneBy(Object, Predicate(Of PropertyInfo))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneBy
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneBy
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  name: CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  nameWithType: ObjectExtension.CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  fullName: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(object, object, System.Predicate<System.Reflection.PropertyInfo>, System.Func<System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, bool>)
  nameWithType.vb: ObjectExtension.CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(Object, Object, System.Predicate(Of System.Reflection.PropertyInfo), System.Func(Of System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, Boolean))
  name.vb: CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
    name: CopyPropertyValueFrom
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
    name: CopyPropertyValueFrom
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.IsMacth(System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  name: IsMacth(object, Func<PropertyInfo, object, bool>)
  nameWithType: ObjectExtension.IsMacth(object, Func<PropertyInfo, object, bool>)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, System.Func<System.Reflection.PropertyInfo, object, bool>)
  nameWithType.vb: ObjectExtension.IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, System.Func(Of System.Reflection.PropertyInfo, Object, Boolean))
  name.vb: IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.IsMacth(System.String)
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  name: IsMacth(object, string)
  nameWithType: ObjectExtension.IsMacth(object, string)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, string)
  nameWithType.vb: ObjectExtension.IsMacth(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, String)
  name.vb: IsMacth(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.ModelState(System.Collections.Generic.List{System.String}@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  name: ModelState(object, out List<string>)
  nameWithType: ObjectExtension.ModelState(object, out List<string>)
  fullName: H.Extensions.Common.ObjectExtension.ModelState(object, out System.Collections.Generic.List<string>)
  nameWithType.vb: ObjectExtension.ModelState(Object, List(Of String))
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelState(Object, System.Collections.Generic.List(Of String))
  name.vb: ModelState(Object, List(Of String))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
    name: ModelState
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
    name: ModelState
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.ModelStateDeep(System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  name: ModelStateDeep(object, out string)
  nameWithType: ObjectExtension.ModelStateDeep(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.ModelStateDeep(object, out string)
  nameWithType.vb: ObjectExtension.ModelStateDeep(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelStateDeep(Object, String)
  name.vb: ModelStateDeep(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
    name: ModelStateDeep
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
    name: ModelStateDeep
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryChangeType(System.Type,System.Object@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  name: TryChangeType(object, Type, out object)
  nameWithType: ObjectExtension.TryChangeType(object, Type, out object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType(object, System.Type, out object)
  nameWithType.vb: ObjectExtension.TryChangeType(Object, Type, Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Object, System.Type, Object)
  name.vb: TryChangeType(Object, Type, Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryChangeType``1
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  name: TryChangeType<T>(object)
  nameWithType: ObjectExtension.TryChangeType<T>(object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object)
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object)
  name.vb: TryChangeType(Of T)(Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryChangeType``1({T}@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  name: TryChangeType<T>(object, out T)
  nameWithType: ObjectExtension.TryChangeType<T>(object, out T)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object, out T)
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object, T)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object, T)
  name.vb: TryChangeType(Of T)(Object, T)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryConvertToString
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  name: TryConvertToString(object)
  nameWithType: ObjectExtension.TryConvertToString(object)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object)
  nameWithType.vb: ObjectExtension.TryConvertToString(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object)
  name.vb: TryConvertToString(Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryConvertToString(System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  name: TryConvertToString(object, out string)
  nameWithType: ObjectExtension.TryConvertToString(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object, out string)
  nameWithType.vb: ObjectExtension.TryConvertToString(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object, String)
  name.vb: TryConvertToString(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
  parent: H.Extensions.TextJsonable.TextJsonableExtensions
  definition: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  name: GetJsonPropertyInfos(object)
  nameWithType: TextJsonableExtensions.GetJsonPropertyInfos(object)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(object)
  nameWithType.vb: TextJsonableExtensions.GetJsonPropertyInfos(Object)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(Object)
  name.vb: GetJsonPropertyInfos(Object)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
    name: GetJsonPropertyInfos
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
    name: GetJsonPropertyInfos
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  parent: H.Extensions.TextJsonable.TextJsonableExtensions
  definition: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  name: WriteJson(object, Utf8JsonWriter, JsonSerializerOptions, bool)
  nameWithType: TextJsonableExtensions.WriteJson(object, Utf8JsonWriter, JsonSerializerOptions, bool)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(object, System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions, bool)
  nameWithType.vb: TextJsonableExtensions.WriteJson(Object, Utf8JsonWriter, JsonSerializerOptions, Boolean)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(Object, System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions, Boolean)
  name.vb: WriteJson(Object, Utf8JsonWriter, JsonSerializerOptions, Boolean)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
    name: WriteJson
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
    name: WriteJson
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Text.Json.Utf8JsonWriter)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
  parent: H.Extensions.TextJsonable.TextJsonableExtensions
  definition: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  name: WriteType(object, Utf8JsonWriter)
  nameWithType: TextJsonableExtensions.WriteType(object, Utf8JsonWriter)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(object, System.Text.Json.Utf8JsonWriter)
  nameWithType.vb: TextJsonableExtensions.WriteType(Object, Utf8JsonWriter)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(Object, System.Text.Json.Utf8JsonWriter)
  name.vb: WriteType(Object, Utf8JsonWriter)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
    name: WriteType
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
    name: WriteType
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: )
- uid: System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.DispatcherExtension
  definition: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.DispatcherExtension
  definition: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, IList, Action<object>, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, IList, Action<object>, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Collections.IList, System.Action<object>, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, IList, Action(Of Object), Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Collections.IList, System.Action(Of Object), System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, IList, Action(Of Object), Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.DispatcherExtension
  definition: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, IList, Func<IList>, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, IList, Func<IList>, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Collections.IList, System.Func<System.Collections.IList>, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, IList, Func(Of IList), Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Collections.IList, System.Func(Of System.Collections.IList), System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, IList, Func(Of IList), Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: H.Extensions.DataBase.IRepository`2
  commentId: T:H.Extensions.DataBase.IRepository`2
  href: H.Extensions.DataBase.IRepository-2.html
  name: IRepository<TEntity, TPrimaryKey>
  nameWithType: IRepository<TEntity, TPrimaryKey>
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey)
  name.vb: IRepository(Of TEntity, TPrimaryKey)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2
    name: IRepository
    href: H.Extensions.DataBase.IRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: '>'
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2
    name: IRepository
    href: H.Extensions.DataBase.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPrimaryKey
  - name: )
- uid: H.Extensions.DataBase
  commentId: N:H.Extensions.DataBase
  href: H.html
  name: H.Extensions.DataBase
  nameWithType: H.Extensions.DataBase
  fullName: H.Extensions.DataBase
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.DataBase
    name: DataBase
    href: H.Extensions.DataBase.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.DataBase
    name: DataBase
    href: H.Extensions.DataBase.html
- uid: H.Extensions.Common.ObjectExtension.CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:H.Extensions.Common.ObjectExtension.CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneCast__1___0_System_Predicate_System_Reflection_PropertyInfo__
  name: CloneCast<T>(T, Predicate<PropertyInfo>)
  nameWithType: ObjectExtension.CloneCast<T>(T, Predicate<PropertyInfo>)
  fullName: H.Extensions.Common.ObjectExtension.CloneCast<T>(T, System.Predicate<System.Reflection.PropertyInfo>)
  nameWithType.vb: ObjectExtension.CloneCast(Of T)(T, Predicate(Of PropertyInfo))
  fullName.vb: H.Extensions.Common.ObjectExtension.CloneCast(Of T)(T, System.Predicate(Of System.Reflection.PropertyInfo))
  name.vb: CloneCast(Of T)(T, Predicate(Of PropertyInfo))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneCast
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneCast__1___0_System_Predicate_System_Reflection_PropertyInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneCast
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneCast__1___0_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: )
- uid: H.Extensions.Common.ObjectExtension
  commentId: T:H.Extensions.Common.ObjectExtension
  parent: H.Extensions.Common
  href: H.Extensions.Common.ObjectExtension.html
  name: ObjectExtension
  nameWithType: ObjectExtension
  fullName: H.Extensions.Common.ObjectExtension
- uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  commentId: M:H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  name: ToEnumerable<T>(T)
  nameWithType: ObjectExtension.ToEnumerable<T>(T)
  fullName: H.Extensions.Common.ObjectExtension.ToEnumerable<T>(T)
  nameWithType.vb: ObjectExtension.ToEnumerable(Of T)(T)
  fullName.vb: H.Extensions.Common.ObjectExtension.ToEnumerable(Of T)(T)
  name.vb: ToEnumerable(Of T)(T)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
    name: ToEnumerable
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
    name: ToEnumerable
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
  commentId: M:H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
  href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  name: CloneByNewtonsoftJson<T>(T)
  nameWithType: NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson<T>(T)
  fullName: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson<T>(T)
  nameWithType.vb: NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson(Of T)(T)
  fullName.vb: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson(Of T)(T)
  name.vb: CloneByNewtonsoftJson(Of T)(T)
  spec.csharp:
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
    name: CloneByNewtonsoftJson
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
    name: CloneByNewtonsoftJson
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension
  commentId: T:H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension
  parent: H.Extensions.NewtonsoftJson
  href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html
  name: NewtonsoftJsonSerializerServiceExtension
  nameWithType: NewtonsoftJsonSerializerServiceExtension
  fullName: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension
- uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
  commentId: M:H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
  href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  name: ToValueResultPresenter<T>(T)
  nameWithType: ResultPresenterExtension.ToValueResultPresenter<T>(T)
  fullName: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter<T>(T)
  nameWithType.vb: ResultPresenterExtension.ToValueResultPresenter(Of T)(T)
  fullName.vb: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter(Of T)(T)
  name.vb: ToValueResultPresenter(Of T)(T)
  spec.csharp:
  - uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
    name: ToValueResultPresenter
    href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
    name: ToValueResultPresenter
    href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension
  commentId: T:H.VisionMaster.ResultPresenter.ResultPresenterExtension
  parent: H.VisionMaster.ResultPresenter
  href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html
  name: ResultPresenterExtension
  nameWithType: ResultPresenterExtension
  fullName: H.VisionMaster.ResultPresenter.ResultPresenterExtension
- uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
  commentId: M:H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
  isExternal: true
  href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  name: GetPropertyValue(object, string)
  nameWithType: Extensions.GetPropertyValue(object, string)
  fullName: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(object, string)
  nameWithType.vb: Extensions.GetPropertyValue(Object, String)
  fullName.vb: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(Object, String)
  name.vb: GetPropertyValue(Object, String)
  spec.csharp:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Controls.FilterColumnDataGrid.Extensions
  commentId: T:H.Controls.FilterColumnDataGrid.Extensions
  parent: H.Controls.FilterColumnDataGrid
  href: H.Controls.FilterColumnDataGrid.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: H.Controls.FilterColumnDataGrid.Extensions
- uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
  commentId: M:H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
  isExternal: true
  href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  name: GetPropertyValue<T>(object, string)
  nameWithType: Extensions.GetPropertyValue<T>(object, string)
  fullName: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue<T>(object, string)
  nameWithType.vb: Extensions.GetPropertyValue(Of T)(Object, String)
  fullName.vb: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(Of T)(Object, String)
  name.vb: GetPropertyValue(Of T)(Object, String)
  spec.csharp:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
  commentId: M:H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
  isExternal: true
  href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  name: ChangeType<T>(object)
  nameWithType: PropertyInfoExtention.ChangeType<T>(object)
  fullName: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType<T>(object)
  nameWithType.vb: PropertyInfoExtention.ChangeType(Of T)(Object)
  fullName.vb: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType(Of T)(Object)
  name.vb: ChangeType(Of T)(Object)
  spec.csharp:
  - uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
    name: ChangeType
    href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
    name: ChangeType
    href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Controls.Form.Provider.PropertyInfoExtention
  commentId: T:H.Controls.Form.Provider.PropertyInfoExtention
  parent: H.Controls.Form.Provider
  href: H.Controls.Form.Provider.PropertyInfoExtention.html
  name: PropertyInfoExtention
  nameWithType: PropertyInfoExtention
  fullName: H.Controls.Form.Provider.PropertyInfoExtention
- uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  name: CloneBy(object, Predicate<PropertyInfo>)
  nameWithType: ObjectExtension.CloneBy(object, Predicate<PropertyInfo>)
  fullName: H.Extensions.Common.ObjectExtension.CloneBy(object, System.Predicate<System.Reflection.PropertyInfo>)
  nameWithType.vb: ObjectExtension.CloneBy(Object, Predicate(Of PropertyInfo))
  fullName.vb: H.Extensions.Common.ObjectExtension.CloneBy(Object, System.Predicate(Of System.Reflection.PropertyInfo))
  name.vb: CloneBy(Object, Predicate(Of PropertyInfo))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneBy
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneBy
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: )
- uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  name: CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  nameWithType: ObjectExtension.CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  fullName: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(object, object, System.Predicate<System.Reflection.PropertyInfo>, System.Func<System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, bool>)
  nameWithType.vb: ObjectExtension.CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(Object, Object, System.Predicate(Of System.Reflection.PropertyInfo), System.Func(Of System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, Boolean))
  name.vb: CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
    name: CopyPropertyValueFrom
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
    name: CopyPropertyValueFrom
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  name: IsMacth(object, Func<PropertyInfo, object, bool>)
  nameWithType: ObjectExtension.IsMacth(object, Func<PropertyInfo, object, bool>)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, System.Func<System.Reflection.PropertyInfo, object, bool>)
  nameWithType.vb: ObjectExtension.IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, System.Func(Of System.Reflection.PropertyInfo, Object, Boolean))
  name.vb: IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  name: IsMacth(object, string)
  nameWithType: ObjectExtension.IsMacth(object, string)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, string)
  nameWithType.vb: ObjectExtension.IsMacth(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, String)
  name.vb: IsMacth(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  name: ModelState(object, out List<string>)
  nameWithType: ObjectExtension.ModelState(object, out List<string>)
  fullName: H.Extensions.Common.ObjectExtension.ModelState(object, out System.Collections.Generic.List<string>)
  nameWithType.vb: ObjectExtension.ModelState(Object, List(Of String))
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelState(Object, System.Collections.Generic.List(Of String))
  name.vb: ModelState(Object, List(Of String))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
    name: ModelState
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
    name: ModelState
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  name: ModelStateDeep(object, out string)
  nameWithType: ObjectExtension.ModelStateDeep(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.ModelStateDeep(object, out string)
  nameWithType.vb: ObjectExtension.ModelStateDeep(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelStateDeep(Object, String)
  name.vb: ModelStateDeep(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
    name: ModelStateDeep
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
    name: ModelStateDeep
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  name: TryChangeType(object, Type, out object)
  nameWithType: ObjectExtension.TryChangeType(object, Type, out object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType(object, System.Type, out object)
  nameWithType.vb: ObjectExtension.TryChangeType(Object, Type, Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Object, System.Type, Object)
  name.vb: TryChangeType(Object, Type, Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  name: TryChangeType<T>(object)
  nameWithType: ObjectExtension.TryChangeType<T>(object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object)
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object)
  name.vb: TryChangeType(Of T)(Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  name: TryChangeType<T>(object, out T)
  nameWithType: ObjectExtension.TryChangeType<T>(object, out T)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object, out T)
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object, T)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object, T)
  name.vb: TryChangeType(Of T)(Object, T)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  name: TryConvertToString(object)
  nameWithType: ObjectExtension.TryConvertToString(object)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object)
  nameWithType.vb: ObjectExtension.TryConvertToString(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object)
  name.vb: TryConvertToString(Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  name: TryConvertToString(object, out string)
  nameWithType: ObjectExtension.TryConvertToString(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object, out string)
  nameWithType.vb: ObjectExtension.TryConvertToString(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object, String)
  name.vb: TryConvertToString(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
  isExternal: true
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  name: GetJsonPropertyInfos(object)
  nameWithType: TextJsonableExtensions.GetJsonPropertyInfos(object)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(object)
  nameWithType.vb: TextJsonableExtensions.GetJsonPropertyInfos(Object)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(Object)
  name.vb: GetJsonPropertyInfos(Object)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
    name: GetJsonPropertyInfos
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
    name: GetJsonPropertyInfos
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.TextJsonable.TextJsonableExtensions
  commentId: T:H.Extensions.TextJsonable.TextJsonableExtensions
  parent: H.Extensions.TextJsonable
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html
  name: TextJsonableExtensions
  nameWithType: TextJsonableExtensions
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions
- uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  isExternal: true
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  name: WriteJson(object, Utf8JsonWriter, JsonSerializerOptions, bool)
  nameWithType: TextJsonableExtensions.WriteJson(object, Utf8JsonWriter, JsonSerializerOptions, bool)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(object, System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions, bool)
  nameWithType.vb: TextJsonableExtensions.WriteJson(Object, Utf8JsonWriter, JsonSerializerOptions, Boolean)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(Object, System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions, Boolean)
  name.vb: WriteJson(Object, Utf8JsonWriter, JsonSerializerOptions, Boolean)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
    name: WriteJson
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
    name: WriteJson
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
  isExternal: true
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  name: WriteType(object, Utf8JsonWriter)
  nameWithType: TextJsonableExtensions.WriteType(object, Utf8JsonWriter)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(object, System.Text.Json.Utf8JsonWriter)
  nameWithType.vb: TextJsonableExtensions.WriteType(Object, Utf8JsonWriter)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(Object, System.Text.Json.Utf8JsonWriter)
  name.vb: WriteType(Object, Utf8JsonWriter)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
    name: WriteType
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
    name: WriteType
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: )
- uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
  isExternal: true
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System.Windows.Threading.DispatcherExtension
  commentId: T:System.Windows.Threading.DispatcherExtension
  parent: System.Windows.Threading
  href: System.Windows.Threading.DispatcherExtension.html
  name: DispatcherExtension
  nameWithType: DispatcherExtension
  fullName: System.Windows.Threading.DispatcherExtension
- uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  isExternal: true
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, IList, Action<object>, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, IList, Action<object>, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Collections.IList, System.Action<object>, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, IList, Action(Of Object), Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Collections.IList, System.Action(Of Object), System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, IList, Action(Of Object), Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  isExternal: true
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, IList, Func<IList>, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, IList, Func<IList>, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Collections.IList, System.Func<System.Collections.IList>, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, IList, Func(Of IList), Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Collections.IList, System.Func(Of System.Collections.IList), System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, IList, Func(Of IList), Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: H.Extensions.Common
  commentId: N:H.Extensions.Common
  href: H.html
  name: H.Extensions.Common
  nameWithType: H.Extensions.Common
  fullName: H.Extensions.Common
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Common
    name: Common
    href: H.Extensions.Common.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Common
    name: Common
    href: H.Extensions.Common.html
- uid: H.Extensions.NewtonsoftJson
  commentId: N:H.Extensions.NewtonsoftJson
  href: H.html
  name: H.Extensions.NewtonsoftJson
  nameWithType: H.Extensions.NewtonsoftJson
  fullName: H.Extensions.NewtonsoftJson
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.NewtonsoftJson
    name: NewtonsoftJson
    href: H.Extensions.NewtonsoftJson.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.NewtonsoftJson
    name: NewtonsoftJson
    href: H.Extensions.NewtonsoftJson.html
- uid: H.VisionMaster.ResultPresenter
  commentId: N:H.VisionMaster.ResultPresenter
  href: H.html
  name: H.VisionMaster.ResultPresenter
  nameWithType: H.VisionMaster.ResultPresenter
  fullName: H.VisionMaster.ResultPresenter
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.VisionMaster
    name: VisionMaster
    href: H.VisionMaster.html
  - name: .
  - uid: H.VisionMaster.ResultPresenter
    name: ResultPresenter
    href: H.VisionMaster.ResultPresenter.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.VisionMaster
    name: VisionMaster
    href: H.VisionMaster.html
  - name: .
  - uid: H.VisionMaster.ResultPresenter
    name: ResultPresenter
    href: H.VisionMaster.ResultPresenter.html
- uid: H.Controls.FilterColumnDataGrid
  commentId: N:H.Controls.FilterColumnDataGrid
  href: H.html
  name: H.Controls.FilterColumnDataGrid
  nameWithType: H.Controls.FilterColumnDataGrid
  fullName: H.Controls.FilterColumnDataGrid
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.FilterColumnDataGrid
    name: FilterColumnDataGrid
    href: H.Controls.FilterColumnDataGrid.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.FilterColumnDataGrid
    name: FilterColumnDataGrid
    href: H.Controls.FilterColumnDataGrid.html
- uid: H.Controls.Form.Provider
  commentId: N:H.Controls.Form.Provider
  href: H.html
  name: H.Controls.Form.Provider
  nameWithType: H.Controls.Form.Provider
  fullName: H.Controls.Form.Provider
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.Form
    name: Form
    href: H.Controls.Form.html
  - name: .
  - uid: H.Controls.Form.Provider
    name: Provider
    href: H.Controls.Form.Provider.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.Form
    name: Form
    href: H.Controls.Form.html
  - name: .
  - uid: H.Controls.Form.Provider
    name: Provider
    href: H.Controls.Form.Provider.html
- uid: H.Extensions.TextJsonable
  commentId: N:H.Extensions.TextJsonable
  href: H.html
  name: H.Extensions.TextJsonable
  nameWithType: H.Extensions.TextJsonable
  fullName: H.Extensions.TextJsonable
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.TextJsonable
    name: TextJsonable
    href: H.Extensions.TextJsonable.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.TextJsonable
    name: TextJsonable
    href: H.Extensions.TextJsonable.html
- uid: System.Windows.Threading
  commentId: N:System.Windows.Threading
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Threading
  nameWithType: System.Windows.Threading
  fullName: System.Windows.Threading
  spec.csharp:
  - uid: System
    name: System
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Threading
    name: Threading
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading
  spec.vb:
  - uid: System
    name: System
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Threading
    name: Threading
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading
- uid: '{TDbContext}'
  commentId: '!:TDbContext'
  definition: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: H.DataBases.Share.RepositoryBase`3.DataContext*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.DataContext
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_DataContext
  name: DataContext
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DataContext
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DataContext
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DataContext
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DataContext
- uid: H.DataBases.Share.RepositoryBase`3.#ctor*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.#ctor
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3__ctor__0_
  name: RepositoryBase
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.RepositoryBase
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.RepositoryBase
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).New
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).New
  name.vb: New
- uid: H.DataBases.Share.RepositoryBase`3.GetListAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.GetListAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_GetListAsync
  name: GetListAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetListAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetListAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetListAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetListAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetListAsync
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.GetListAsync
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.GetListAsync
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync
  name: GetListAsync()
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetListAsync()
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetListAsync()
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetListAsync()
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetListAsync()
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetListAsync
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync
  - name: (
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetListAsync
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{{TEntity}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{`1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<TEntity>>
  nameWithType: Task<List<TEntity>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<TEntity>>
  nameWithType.vb: Task(Of List(Of TEntity))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of TEntity))
  name.vb: Task(Of List(Of TEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.GetListAsync
  commentId: M:H.Extensions.DataBase.IRepository`2.GetListAsync
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync
  name: GetListAsync()
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetListAsync()
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetListAsync()
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetListAsync()
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetListAsync()
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.GetListAsync
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync
  - name: (
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.GetListAsync
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: H.DataBases.Share.RepositoryBase`3.GetList*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.GetList
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_GetList
  name: GetList
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetList
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetList
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetList
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.GetList
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.GetList
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList
  name: GetList()
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetList()
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetList()
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetList()
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetList()
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetList
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList
  - name: (
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetList
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList
  - name: (
  - name: )
- uid: System.Collections.Generic.List{{TEntity}}
  commentId: T:System.Collections.Generic.List{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TEntity>
  nameWithType: List<TEntity>
  fullName: System.Collections.Generic.List<TEntity>
  nameWithType.vb: List(Of TEntity)
  fullName.vb: System.Collections.Generic.List(Of TEntity)
  name.vb: List(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.GetList
  commentId: M:H.Extensions.DataBase.IRepository`2.GetList
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList
  name: GetList()
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetList()
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetList()
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetList()
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetList()
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.GetList
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList
  - name: (
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.GetList
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetListAsync(System.String[])
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.GetListAsync(System.String[])
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.GetListAsync(System.String[])
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_String___
  name: GetListAsync(params string[])
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetListAsync(params string[])
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetListAsync(params string[])
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetListAsync(ParamArray String())
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetListAsync(ParamArray String())
  name.vb: GetListAsync(ParamArray String())
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetListAsync(System.String[])
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_String___
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetListAsync(System.String[])
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_String___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.GetListAsync(System.String[])
  commentId: M:H.Extensions.DataBase.IRepository`2.GetListAsync(System.String[])
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_String___
  name: GetListAsync(params string[])
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetListAsync(params string[])
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetListAsync(params string[])
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetListAsync(ParamArray String())
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetListAsync(ParamArray String())
  name.vb: GetListAsync(ParamArray String())
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.GetListAsync(System.String[])
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_String___
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.GetListAsync(System.String[])
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_String___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetList(System.String[])
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.GetList(System.String[])
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.GetList(System.String[])
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_String___
  name: GetList(params string[])
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetList(params string[])
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetList(params string[])
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetList(ParamArray String())
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetList(ParamArray String())
  name.vb: GetList(ParamArray String())
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetList(System.String[])
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_String___
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetList(System.String[])
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_String___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.GetList(System.String[])
  commentId: M:H.Extensions.DataBase.IRepository`2.GetList(System.String[])
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_String___
  name: GetList(params string[])
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetList(params string[])
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetList(params string[])
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetList(ParamArray String())
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetList(ParamArray String())
  name.vb: GetList(ParamArray String())
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.GetList(System.String[])
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_String___
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.GetList(System.String[])
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_String___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetList(System.Action{System.Linq.IQueryable{{TEntity}}})
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.GetList(System.Action{System.Linq.IQueryable{`1}})
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.GetList(System.Action{System.Linq.IQueryable{`0}})
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Action_System_Linq_IQueryable__0___
  name: GetList(Action<IQueryable<TEntity>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetList(Action<IQueryable<TEntity>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetList(System.Action<System.Linq.IQueryable<TEntity>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetList(Action(Of IQueryable(Of TEntity)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetList(System.Action(Of System.Linq.IQueryable(Of TEntity)))
  name.vb: GetList(Action(Of IQueryable(Of TEntity)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetList(System.Action{System.Linq.IQueryable{`1}})
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Action_System_Linq_IQueryable__0___
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetList(System.Action{System.Linq.IQueryable{`1}})
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Action_System_Linq_IQueryable__0___
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: )
- uid: System.Action{System.Linq.IQueryable{{TEntity}}}
  commentId: T:System.Action{System.Linq.IQueryable{`1}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IQueryable<TEntity>>
  nameWithType: Action<IQueryable<TEntity>>
  fullName: System.Action<System.Linq.IQueryable<TEntity>>
  nameWithType.vb: Action(Of IQueryable(Of TEntity))
  fullName.vb: System.Action(Of System.Linq.IQueryable(Of TEntity))
  name.vb: Action(Of IQueryable(Of TEntity))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.GetList(System.Action{System.Linq.IQueryable{`0}})
  commentId: M:H.Extensions.DataBase.IRepository`2.GetList(System.Action{System.Linq.IQueryable{`0}})
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Action_System_Linq_IQueryable__0___
  name: GetList(Action<IQueryable<TEntity>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetList(Action<IQueryable<TEntity>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetList(System.Action<System.Linq.IQueryable<TEntity>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetList(Action(Of IQueryable(Of TEntity)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetList(System.Action(Of System.Linq.IQueryable(Of TEntity)))
  name.vb: GetList(Action(Of IQueryable(Of TEntity)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.GetList(System.Action{System.Linq.IQueryable{`0}})
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Action_System_Linq_IQueryable__0___
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.GetList(System.Action{System.Linq.IQueryable{`0}})
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Action_System_Linq_IQueryable__0___
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetListAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.GetListAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.GetListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: GetListAsync(Expression<Func<TEntity, bool>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetListAsync(Expression<Func<TEntity, bool>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetListAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetListAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetListAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: GetListAsync(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetListAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetListAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, bool>>
  nameWithType: Expression<Func<TEntity, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, bool>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean))
  name.vb: Expression(Of Func(Of TEntity, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.GetListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:H.Extensions.DataBase.IRepository`2.GetListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: GetListAsync(Expression<Func<TEntity, bool>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetListAsync(Expression<Func<TEntity, bool>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetListAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetListAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetListAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: GetListAsync(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.GetListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.GetListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetListAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetListAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetList(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.GetList(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.GetList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: GetList(Expression<Func<TEntity, bool>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetList(Expression<Func<TEntity, bool>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetList(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetList(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetList(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: GetList(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetList(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetList(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.GetList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:H.Extensions.DataBase.IRepository`2.GetList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: GetList(Expression<Func<TEntity, bool>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetList(Expression<Func<TEntity, bool>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetList(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetList(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetList(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: GetList(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.GetList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.GetList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetList_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.GetByIDAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.GetByIDAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_GetByIDAsync__2_
  name: GetByIDAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetByIDAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.GetByIDAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetByIDAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).GetByIDAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.GetByIDAsync({TPrimaryKey})
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.GetByIDAsync(`2)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.GetByIDAsync(`1)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetByIDAsync__1_
  name: GetByIDAsync(TPrimaryKey)
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetByIDAsync(TPrimaryKey)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetByIDAsync(TPrimaryKey)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetByIDAsync(TPrimaryKey)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetByIDAsync(TPrimaryKey)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetByIDAsync(`2)
    name: GetByIDAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetByIDAsync__1_
  - name: (
  - name: TPrimaryKey
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.GetByIDAsync(`2)
    name: GetByIDAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetByIDAsync__1_
  - name: (
  - name: TPrimaryKey
  - name: )
- uid: '{TPrimaryKey}'
  commentId: '!:TPrimaryKey'
  definition: TPrimaryKey
  name: TPrimaryKey
  nameWithType: TPrimaryKey
  fullName: TPrimaryKey
- uid: System.Threading.Tasks.Task{{TEntity}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TEntity>
  nameWithType: Task<TEntity>
  fullName: System.Threading.Tasks.Task<TEntity>
  nameWithType.vb: Task(Of TEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TEntity)
  name.vb: Task(Of TEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.GetByIDAsync(`1)
  commentId: M:H.Extensions.DataBase.IRepository`2.GetByIDAsync(`1)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetByIDAsync__1_
  name: GetByIDAsync(TPrimaryKey)
  nameWithType: IRepository<TEntity, TPrimaryKey>.GetByIDAsync(TPrimaryKey)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.GetByIDAsync(TPrimaryKey)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).GetByIDAsync(TPrimaryKey)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).GetByIDAsync(TPrimaryKey)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.GetByIDAsync(`1)
    name: GetByIDAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetByIDAsync__1_
  - name: (
  - name: TPrimaryKey
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.GetByIDAsync(`1)
    name: GetByIDAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_GetByIDAsync__1_
  - name: (
  - name: TPrimaryKey
  - name: )
- uid: TPrimaryKey
  name: TPrimaryKey
  nameWithType: TPrimaryKey
  fullName: TPrimaryKey
- uid: H.DataBases.Share.RepositoryBase`3.FirstOrDefaultAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.FirstOrDefaultAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_FirstOrDefaultAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: FirstOrDefaultAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_FirstOrDefaultAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: FirstOrDefaultAsync(Expression<Func<TEntity, bool>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.FirstOrDefaultAsync(Expression<Func<TEntity, bool>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.FirstOrDefaultAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).FirstOrDefaultAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: FirstOrDefaultAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_FirstOrDefaultAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: FirstOrDefaultAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_FirstOrDefaultAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:H.Extensions.DataBase.IRepository`2.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_FirstOrDefaultAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: FirstOrDefaultAsync(Expression<Func<TEntity, bool>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.FirstOrDefaultAsync(Expression<Func<TEntity, bool>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.FirstOrDefaultAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).FirstOrDefaultAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: FirstOrDefaultAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_FirstOrDefaultAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: FirstOrDefaultAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_FirstOrDefaultAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.InsertAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.InsertAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_InsertAsync__1_System_Boolean_
  name: InsertAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.InsertAsync({TEntity},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.InsertAsync(`1,System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.InsertAsync(`0,System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertAsync__0_System_Boolean_
  name: InsertAsync(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.InsertAsync(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.InsertAsync(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).InsertAsync(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).InsertAsync(TEntity, Boolean)
  name.vb: InsertAsync(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.InsertAsync(`1,System.Boolean)
    name: InsertAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.InsertAsync(`1,System.Boolean)
    name: InsertAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.InsertAsync(`0,System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.InsertAsync(`0,System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertAsync__0_System_Boolean_
  name: InsertAsync(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.InsertAsync(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.InsertAsync(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).InsertAsync(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).InsertAsync(TEntity, Boolean)
  name.vb: InsertAsync(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.InsertAsync(`0,System.Boolean)
    name: InsertAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.InsertAsync(`0,System.Boolean)
    name: InsertAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: H.DataBases.Share.RepositoryBase`3.InsertRangeAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.InsertRangeAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_InsertRangeAsync__1___
  name: InsertRangeAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertRangeAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertRangeAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertRangeAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertRangeAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.InsertRangeAsync({TEntity}[])
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.InsertRangeAsync(`1[])
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.InsertRangeAsync(`0[])
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertRangeAsync__0___
  name: InsertRangeAsync(params TEntity[])
  nameWithType: IRepository<TEntity, TPrimaryKey>.InsertRangeAsync(params TEntity[])
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.InsertRangeAsync(params TEntity[])
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).InsertRangeAsync(ParamArray TEntity())
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).InsertRangeAsync(ParamArray TEntity())
  name.vb: InsertRangeAsync(ParamArray TEntity())
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.InsertRangeAsync(`1[])
    name: InsertRangeAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertRangeAsync__0___
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.InsertRangeAsync(`1[])
    name: InsertRangeAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertRangeAsync__0___
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: '{TEntity}[]'
  isExternal: true
  name: TEntity[]
  nameWithType: TEntity[]
  fullName: TEntity[]
  nameWithType.vb: TEntity()
  fullName.vb: TEntity()
  name.vb: TEntity()
  spec.csharp:
  - name: TEntity
  - name: '['
  - name: ']'
  spec.vb:
  - name: TEntity
  - name: (
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.InsertRangeAsync(`0[])
  commentId: M:H.Extensions.DataBase.IRepository`2.InsertRangeAsync(`0[])
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertRangeAsync__0___
  name: InsertRangeAsync(params TEntity[])
  nameWithType: IRepository<TEntity, TPrimaryKey>.InsertRangeAsync(params TEntity[])
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.InsertRangeAsync(params TEntity[])
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).InsertRangeAsync(ParamArray TEntity())
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).InsertRangeAsync(ParamArray TEntity())
  name.vb: InsertRangeAsync(ParamArray TEntity())
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.InsertRangeAsync(`0[])
    name: InsertRangeAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertRangeAsync__0___
  - name: (
  - name: params
  - name: " "
  - name: TEntity
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.InsertRangeAsync(`0[])
    name: InsertRangeAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertRangeAsync__0___
  - name: (
  - name: ParamArray
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.Insert*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.Insert
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_Insert__1_System_Boolean_
  name: Insert
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Insert
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Insert
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Insert
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Insert
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Insert({TEntity},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.Insert(`1,System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.Insert(`0,System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Insert__0_System_Boolean_
  name: Insert(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.Insert(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Insert(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Insert(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Insert(TEntity, Boolean)
  name.vb: Insert(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Insert(`1,System.Boolean)
    name: Insert
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Insert__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Insert(`1,System.Boolean)
    name: Insert
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Insert__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: H.Extensions.DataBase.IRepository`2.Insert(`0,System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.Insert(`0,System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Insert__0_System_Boolean_
  name: Insert(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.Insert(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Insert(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Insert(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Insert(TEntity, Boolean)
  name.vb: Insert(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.Insert(`0,System.Boolean)
    name: Insert
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Insert__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.Insert(`0,System.Boolean)
    name: Insert
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Insert__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.UpdateAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.UpdateAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_UpdateAsync__1_System_Boolean_
  name: UpdateAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.UpdateAsync({TEntity},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.UpdateAsync(`1,System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.UpdateAsync(`0,System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_UpdateAsync__0_System_Boolean_
  name: UpdateAsync(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.UpdateAsync(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.UpdateAsync(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).UpdateAsync(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).UpdateAsync(TEntity, Boolean)
  name.vb: UpdateAsync(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.UpdateAsync(`1,System.Boolean)
    name: UpdateAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_UpdateAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.UpdateAsync(`1,System.Boolean)
    name: UpdateAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_UpdateAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.UpdateAsync(`0,System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.UpdateAsync(`0,System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_UpdateAsync__0_System_Boolean_
  name: UpdateAsync(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.UpdateAsync(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.UpdateAsync(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).UpdateAsync(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).UpdateAsync(TEntity, Boolean)
  name.vb: UpdateAsync(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.UpdateAsync(`0,System.Boolean)
    name: UpdateAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_UpdateAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.UpdateAsync(`0,System.Boolean)
    name: UpdateAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_UpdateAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.Update*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.Update
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_Update__1_System_Boolean_
  name: Update
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Update
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Update
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Update
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Update
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Update({TEntity},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.Update(`1,System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.Update(`0,System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Update__0_System_Boolean_
  name: Update(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.Update(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Update(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Update(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Update(TEntity, Boolean)
  name.vb: Update(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Update(`1,System.Boolean)
    name: Update
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Update__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Update(`1,System.Boolean)
    name: Update
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Update__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.Update(`0,System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.Update(`0,System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Update__0_System_Boolean_
  name: Update(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.Update(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Update(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Update(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Update(TEntity, Boolean)
  name.vb: Update(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.Update(`0,System.Boolean)
    name: Update
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Update__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.Update(`0,System.Boolean)
    name: Update
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Update__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.InsertOrUpdateAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.InsertOrUpdateAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_InsertOrUpdateAsync__1_System_Boolean_
  name: InsertOrUpdateAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.InsertOrUpdateAsync({TEntity},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.InsertOrUpdateAsync(`1,System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.InsertOrUpdateAsync(`0,System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertOrUpdateAsync__0_System_Boolean_
  name: InsertOrUpdateAsync(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, Boolean)
  name.vb: InsertOrUpdateAsync(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.InsertOrUpdateAsync(`1,System.Boolean)
    name: InsertOrUpdateAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertOrUpdateAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.InsertOrUpdateAsync(`1,System.Boolean)
    name: InsertOrUpdateAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertOrUpdateAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.InsertOrUpdateAsync(`0,System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.InsertOrUpdateAsync(`0,System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertOrUpdateAsync__0_System_Boolean_
  name: InsertOrUpdateAsync(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, Boolean)
  name.vb: InsertOrUpdateAsync(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.InsertOrUpdateAsync(`0,System.Boolean)
    name: InsertOrUpdateAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertOrUpdateAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.InsertOrUpdateAsync(`0,System.Boolean)
    name: InsertOrUpdateAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_InsertOrUpdateAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.DeleteAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.DeleteAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_DeleteAsync__1_System_Boolean_
  name: DeleteAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.DeleteAsync({TEntity},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.DeleteAsync(`1,System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.DeleteAsync(`0,System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync__0_System_Boolean_
  name: DeleteAsync(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.DeleteAsync(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.DeleteAsync(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).DeleteAsync(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).DeleteAsync(TEntity, Boolean)
  name.vb: DeleteAsync(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.DeleteAsync(`1,System.Boolean)
    name: DeleteAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.DeleteAsync(`1,System.Boolean)
    name: DeleteAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.DeleteAsync(`0,System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.DeleteAsync(`0,System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync__0_System_Boolean_
  name: DeleteAsync(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.DeleteAsync(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.DeleteAsync(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).DeleteAsync(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).DeleteAsync(TEntity, Boolean)
  name.vb: DeleteAsync(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.DeleteAsync(`0,System.Boolean)
    name: DeleteAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.DeleteAsync(`0,System.Boolean)
    name: DeleteAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.DeleteByIDAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.DeleteByIDAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_DeleteByIDAsync__2_System_Boolean_
  name: DeleteByIDAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteByIDAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteByIDAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteByIDAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteByIDAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.DeleteByIDAsync({TPrimaryKey},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.DeleteByIDAsync(`2,System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.DeleteByIDAsync(`1,System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByIDAsync__1_System_Boolean_
  name: DeleteByIDAsync(TPrimaryKey, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.DeleteByIDAsync(TPrimaryKey, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.DeleteByIDAsync(TPrimaryKey, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).DeleteByIDAsync(TPrimaryKey, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).DeleteByIDAsync(TPrimaryKey, Boolean)
  name.vb: DeleteByIDAsync(TPrimaryKey, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.DeleteByIDAsync(`2,System.Boolean)
    name: DeleteByIDAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByIDAsync__1_System_Boolean_
  - name: (
  - name: TPrimaryKey
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.DeleteByIDAsync(`2,System.Boolean)
    name: DeleteByIDAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByIDAsync__1_System_Boolean_
  - name: (
  - name: TPrimaryKey
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.DeleteByIDAsync(`1,System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.DeleteByIDAsync(`1,System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByIDAsync__1_System_Boolean_
  name: DeleteByIDAsync(TPrimaryKey, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.DeleteByIDAsync(TPrimaryKey, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.DeleteByIDAsync(TPrimaryKey, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).DeleteByIDAsync(TPrimaryKey, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).DeleteByIDAsync(TPrimaryKey, Boolean)
  name.vb: DeleteByIDAsync(TPrimaryKey, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.DeleteByIDAsync(`1,System.Boolean)
    name: DeleteByIDAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByIDAsync__1_System_Boolean_
  - name: (
  - name: TPrimaryKey
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.DeleteByIDAsync(`1,System.Boolean)
    name: DeleteByIDAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByIDAsync__1_System_Boolean_
  - name: (
  - name: TPrimaryKey
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.DeleteByID*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.DeleteByID
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_DeleteByID__2_System_Boolean_
  name: DeleteByID
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteByID
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.DeleteByID
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteByID
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).DeleteByID
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.DeleteByID({TPrimaryKey},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.DeleteByID(`2,System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.DeleteByID(`1,System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByID__1_System_Boolean_
  name: DeleteByID(TPrimaryKey, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.DeleteByID(TPrimaryKey, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.DeleteByID(TPrimaryKey, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).DeleteByID(TPrimaryKey, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).DeleteByID(TPrimaryKey, Boolean)
  name.vb: DeleteByID(TPrimaryKey, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.DeleteByID(`2,System.Boolean)
    name: DeleteByID
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByID__1_System_Boolean_
  - name: (
  - name: TPrimaryKey
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.DeleteByID(`2,System.Boolean)
    name: DeleteByID
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByID__1_System_Boolean_
  - name: (
  - name: TPrimaryKey
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.DeleteByID(`1,System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.DeleteByID(`1,System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByID__1_System_Boolean_
  name: DeleteByID(TPrimaryKey, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.DeleteByID(TPrimaryKey, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.DeleteByID(TPrimaryKey, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).DeleteByID(TPrimaryKey, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).DeleteByID(TPrimaryKey, Boolean)
  name.vb: DeleteByID(TPrimaryKey, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.DeleteByID(`1,System.Boolean)
    name: DeleteByID
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByID__1_System_Boolean_
  - name: (
  - name: TPrimaryKey
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.DeleteByID(`1,System.Boolean)
    name: DeleteByID
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteByID__1_System_Boolean_
  - name: (
  - name: TPrimaryKey
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.Delete*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.Delete
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_Delete__1_System_Boolean_
  name: Delete
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Delete
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Delete
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Delete
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Delete
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Delete({TEntity},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.Delete(`1,System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.Delete(`0,System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Delete__0_System_Boolean_
  name: Delete(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.Delete(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Delete(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Delete(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Delete(TEntity, Boolean)
  name.vb: Delete(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Delete(`1,System.Boolean)
    name: Delete
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Delete__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Delete(`1,System.Boolean)
    name: Delete
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Delete__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.Delete(`0,System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.Delete(`0,System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Delete__0_System_Boolean_
  name: Delete(TEntity, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.Delete(TEntity, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Delete(TEntity, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Delete(TEntity, Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Delete(TEntity, Boolean)
  name.vb: Delete(TEntity, Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.Delete(`0,System.Boolean)
    name: Delete
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Delete__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.Delete(`0,System.Boolean)
    name: Delete
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Delete__0_System_Boolean_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.Clear*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.Clear
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_Clear_System_Boolean_
  name: Clear
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Clear
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Clear
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Clear
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Clear
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Clear(System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.Clear(System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.Clear(System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Clear_System_Boolean_
  name: Clear(bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.Clear(bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Clear(bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Clear(Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Clear(Boolean)
  name.vb: Clear(Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Clear(System.Boolean)
    name: Clear
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Clear(System.Boolean)
    name: Clear
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.Clear(System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.Clear(System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Clear_System_Boolean_
  name: Clear(bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.Clear(bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Clear(bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Clear(Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Clear(Boolean)
  name.vb: Clear(Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.Clear(System.Boolean)
    name: Clear
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.Clear(System.Boolean)
    name: Clear
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.ClearAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.ClearAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_ClearAsync_System_Boolean_
  name: ClearAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.ClearAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.ClearAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).ClearAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).ClearAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.ClearAsync(System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.ClearAsync(System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.ClearAsync(System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_ClearAsync_System_Boolean_
  name: ClearAsync(bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.ClearAsync(bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.ClearAsync(bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).ClearAsync(Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).ClearAsync(Boolean)
  name.vb: ClearAsync(Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.ClearAsync(System.Boolean)
    name: ClearAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_ClearAsync_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.ClearAsync(System.Boolean)
    name: ClearAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_ClearAsync_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.ClearAsync(System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.ClearAsync(System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_ClearAsync_System_Boolean_
  name: ClearAsync(bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.ClearAsync(bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.ClearAsync(bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).ClearAsync(Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).ClearAsync(Boolean)
  name.vb: ClearAsync(Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.ClearAsync(System.Boolean)
    name: ClearAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_ClearAsync_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.ClearAsync(System.Boolean)
    name: ClearAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_ClearAsync_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.DeleteAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  name: DeleteAsync(Expression<Func<TEntity, bool>>, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.DeleteAsync(Expression<Func<TEntity, bool>>, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).DeleteAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean)
  name.vb: DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
    name: DeleteAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
    name: DeleteAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  commentId: M:H.Extensions.DataBase.IRepository`2.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  name: DeleteAsync(Expression<Func<TEntity, bool>>, bool)
  nameWithType: IRepository<TEntity, TPrimaryKey>.DeleteAsync(Expression<Func<TEntity, bool>>, bool)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), Boolean)
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).DeleteAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean)
  name.vb: DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), Boolean)
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
    name: DeleteAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
    name: DeleteAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_DeleteAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.LoadPageList*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.LoadPageList
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_LoadPageList_System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func__1_System_Object___
  name: LoadPageList
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.LoadPageList
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.LoadPageList
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).LoadPageList
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).LoadPageList
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}})
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_LoadPageList_System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0_System_Object___
  name: LoadPageList(int, int, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, object>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.LoadPageList(int, int, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, object>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.LoadPageList(int, int, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<TEntity, object>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).LoadPageList(Integer, Integer, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).LoadPageList(Integer, Integer, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object)))
  name.vb: LoadPageList(Integer, Integer, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
    name: LoadPageList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_LoadPageList_System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0_System_Object___
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}})
    name: LoadPageList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_LoadPageList_System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0_System_Object___
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`1,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, object>>
  nameWithType: Expression<Func<TEntity, object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, object>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object))
  name.vb: Expression(Of Func(Of TEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{System.Tuple{System.Collections.Generic.List{{TEntity}},System.Int32}}
  commentId: T:System.Threading.Tasks.Task{System.Tuple{System.Collections.Generic.List{`1},System.Int32}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Tuple<List<TEntity>, int>>
  nameWithType: Task<Tuple<List<TEntity>, int>>
  fullName: System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<TEntity>, int>>
  nameWithType.vb: Task(Of Tuple(Of List(Of TEntity), Integer))
  fullName.vb: System.Threading.Tasks.Task(Of System.Tuple(Of System.Collections.Generic.List(Of TEntity), Integer))
  name.vb: Task(Of Tuple(Of List(Of TEntity), Integer))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:H.Extensions.DataBase.IRepository`2.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  isExternal: true
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_LoadPageList_System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0_System_Object___
  name: LoadPageList(int, int, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, object>>)
  nameWithType: IRepository<TEntity, TPrimaryKey>.LoadPageList(int, int, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, object>>)
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.LoadPageList(int, int, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<TEntity, object>>)
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).LoadPageList(Integer, Integer, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object)))
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).LoadPageList(Integer, Integer, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object)))
  name.vb: LoadPageList(Integer, Integer, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object)))
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
    name: LoadPageList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_LoadPageList_System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0_System_Object___
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.LoadPageList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
    name: LoadPageList
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_LoadPageList_System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0_System_Object___
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.SaveAsync*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.SaveAsync
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_SaveAsync
  name: SaveAsync
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.SaveAsync
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.SaveAsync
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).SaveAsync
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).SaveAsync
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.SaveAsync
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.SaveAsync
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.SaveAsync
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_SaveAsync
  name: SaveAsync()
  nameWithType: IRepository<TEntity, TPrimaryKey>.SaveAsync()
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.SaveAsync()
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).SaveAsync()
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).SaveAsync()
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.SaveAsync
    name: SaveAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_SaveAsync
  - name: (
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.SaveAsync
    name: SaveAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_SaveAsync
  - name: (
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.SaveAsync
  commentId: M:H.Extensions.DataBase.IRepository`2.SaveAsync
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_SaveAsync
  name: SaveAsync()
  nameWithType: IRepository<TEntity, TPrimaryKey>.SaveAsync()
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.SaveAsync()
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).SaveAsync()
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).SaveAsync()
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.SaveAsync
    name: SaveAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_SaveAsync
  - name: (
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.SaveAsync
    name: SaveAsync
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_SaveAsync
  - name: (
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.Save*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.Save
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_Save
  name: Save
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Save
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.Save
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Save
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).Save
- uid: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}.Save
  commentId: M:H.Extensions.DataBase.IRepository{`1,`2}.Save
  parent: H.Extensions.DataBase.IRepository{{TEntity},{TPrimaryKey}}
  definition: H.Extensions.DataBase.IRepository`2.Save
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Save
  name: Save()
  nameWithType: IRepository<TEntity, TPrimaryKey>.Save()
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Save()
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Save()
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Save()
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Save
    name: Save
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Save
  - name: (
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository{`1,`2}.Save
    name: Save
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Save
  - name: (
  - name: )
- uid: H.Extensions.DataBase.IRepository`2.Save
  commentId: M:H.Extensions.DataBase.IRepository`2.Save
  href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Save
  name: Save()
  nameWithType: IRepository<TEntity, TPrimaryKey>.Save()
  fullName: H.Extensions.DataBase.IRepository<TEntity, TPrimaryKey>.Save()
  nameWithType.vb: IRepository(Of TEntity, TPrimaryKey).Save()
  fullName.vb: H.Extensions.DataBase.IRepository(Of TEntity, TPrimaryKey).Save()
  spec.csharp:
  - uid: H.Extensions.DataBase.IRepository`2.Save
    name: Save
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Save
  - name: (
  - name: )
  spec.vb:
  - uid: H.Extensions.DataBase.IRepository`2.Save
    name: Save
    href: H.Extensions.DataBase.IRepository-2.html#H_Extensions_DataBase_IRepository_2_Save
  - name: (
  - name: )
- uid: H.DataBases.Share.RepositoryBase`3.CreateEqualityExpressionForId*
  commentId: Overload:H.DataBases.Share.RepositoryBase`3.CreateEqualityExpressionForId
  href: H.DataBases.Share.RepositoryBase-3.html#H_DataBases_Share_RepositoryBase_3_CreateEqualityExpressionForId__2_
  name: CreateEqualityExpressionForId
  nameWithType: RepositoryBase<TDbContext, TEntity, TPrimaryKey>.CreateEqualityExpressionForId
  fullName: H.DataBases.Share.RepositoryBase<TDbContext, TEntity, TPrimaryKey>.CreateEqualityExpressionForId
  nameWithType.vb: RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).CreateEqualityExpressionForId
  fullName.vb: H.DataBases.Share.RepositoryBase(Of TDbContext, TEntity, TPrimaryKey).CreateEqualityExpressionForId
