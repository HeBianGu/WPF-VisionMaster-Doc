### YamlMime:ManagedReference
items:
- uid: H.Extensions.Common.ObjectExtension
  commentId: T:H.Extensions.Common.ObjectExtension
  id: ObjectExtension
  parent: H.Extensions.Common
  children:
  - H.Extensions.Common.ObjectExtension.Addtem(System.Collections.IEnumerable)
  - H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  - H.Extensions.Common.ObjectExtension.CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
  - H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  - H.Extensions.Common.ObjectExtension.GetAttributeValue``2(System.Type,System.Func{``0,``1})
  - H.Extensions.Common.ObjectExtension.GetDisplayName(System.Type)
  - H.Extensions.Common.ObjectExtension.GetGenericArgumentType(System.Collections.IEnumerable)
  - H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  - H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  - H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  - H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  - H.Extensions.Common.ObjectExtension.ToByTypeConverter``1(System.String)
  - H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  - H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  - H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  - H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  - H.Extensions.Common.ObjectExtension.TryConvertFromString(System.Type,System.String,System.String@)
  - H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  - H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  - H.Extensions.Common.ObjectExtension.TryCreateInstance(System.Type,System.Object@)
  - H.Extensions.Common.ObjectExtension.TryCreateItem(System.Collections.IEnumerable,System.Object@)
  langs:
  - csharp
  - vb
  name: ObjectExtension
  nameWithType: ObjectExtension
  fullName: H.Extensions.Common.ObjectExtension
  type: Class
  source:
    id: ObjectExtension
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 17
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static class ObjectExtension
    content.vb: Public Module ObjectExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: H.Extensions.Common.ObjectExtension.TryCreateInstance(System.Type,System.Object@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryCreateInstance(System.Type,System.Object@)
  id: TryCreateInstance(System.Type,System.Object@)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: TryCreateInstance(Type, out object)
  nameWithType: ObjectExtension.TryCreateInstance(Type, out object)
  fullName: H.Extensions.Common.ObjectExtension.TryCreateInstance(System.Type, out object)
  type: Method
  source:
    id: TryCreateInstance
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 25
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  summary: 尝试用构造函数递归创建实例
  example: []
  syntax:
    content: public static bool TryCreateInstance(this Type type, out object instance)
    parameters:
    - id: type
      type: System.Type
      description: ''
    - id: instance
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryCreateInstance(type As Type, instance As Object) As Boolean
  overload: H.Extensions.Common.ObjectExtension.TryCreateInstance*
  nameWithType.vb: ObjectExtension.TryCreateInstance(Type, Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryCreateInstance(System.Type, Object)
  name.vb: TryCreateInstance(Type, Object)
- uid: H.Extensions.Common.ObjectExtension.TryCreateItem(System.Collections.IEnumerable,System.Object@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryCreateItem(System.Collections.IEnumerable,System.Object@)
  id: TryCreateItem(System.Collections.IEnumerable,System.Object@)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: TryCreateItem(IEnumerable, out object)
  nameWithType: ObjectExtension.TryCreateItem(IEnumerable, out object)
  fullName: H.Extensions.Common.ObjectExtension.TryCreateItem(System.Collections.IEnumerable, out object)
  type: Method
  source:
    id: TryCreateItem
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 65
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  summary: 创建泛型集合的实例
  example: []
  syntax:
    content: public static bool TryCreateItem(this IEnumerable enumerable, out object instance)
    parameters:
    - id: enumerable
      type: System.Collections.IEnumerable
      description: ''
    - id: instance
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryCreateItem(enumerable As IEnumerable, instance As Object) As Boolean
  overload: H.Extensions.Common.ObjectExtension.TryCreateItem*
  nameWithType.vb: ObjectExtension.TryCreateItem(IEnumerable, Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryCreateItem(System.Collections.IEnumerable, Object)
  name.vb: TryCreateItem(IEnumerable, Object)
- uid: H.Extensions.Common.ObjectExtension.GetGenericArgumentType(System.Collections.IEnumerable)
  commentId: M:H.Extensions.Common.ObjectExtension.GetGenericArgumentType(System.Collections.IEnumerable)
  id: GetGenericArgumentType(System.Collections.IEnumerable)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: GetGenericArgumentType(IEnumerable)
  nameWithType: ObjectExtension.GetGenericArgumentType(IEnumerable)
  fullName: H.Extensions.Common.ObjectExtension.GetGenericArgumentType(System.Collections.IEnumerable)
  type: Method
  source:
    id: GetGenericArgumentType
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 95
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  summary: 创建泛型集合的类型
  example: []
  syntax:
    content: public static Type GetGenericArgumentType(this IEnumerable enumerable)
    parameters:
    - id: enumerable
      type: System.Collections.IEnumerable
      description: ''
    return:
      type: System.Type
      description: ''
    content.vb: Public Shared Function GetGenericArgumentType(enumerable As IEnumerable) As Type
  overload: H.Extensions.Common.ObjectExtension.GetGenericArgumentType*
- uid: H.Extensions.Common.ObjectExtension.Addtem(System.Collections.IEnumerable)
  commentId: M:H.Extensions.Common.ObjectExtension.Addtem(System.Collections.IEnumerable)
  id: Addtem(System.Collections.IEnumerable)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: Addtem(IEnumerable)
  nameWithType: ObjectExtension.Addtem(IEnumerable)
  fullName: H.Extensions.Common.ObjectExtension.Addtem(System.Collections.IEnumerable)
  type: Method
  source:
    id: Addtem
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 114
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  summary: 创建泛型集合的实例
  example: []
  syntax:
    content: public static object Addtem(this IEnumerable enumerable)
    parameters:
    - id: enumerable
      type: System.Collections.IEnumerable
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Shared Function Addtem(enumerable As IEnumerable) As Object
  overload: H.Extensions.Common.ObjectExtension.Addtem*
- uid: H.Extensions.Common.ObjectExtension.TryConvertFromString(System.Type,System.String,System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertFromString(System.Type,System.String,System.String@)
  id: TryConvertFromString(System.Type,System.String,System.String@)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: TryConvertFromString(Type, string, out string)
  nameWithType: ObjectExtension.TryConvertFromString(Type, string, out string)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertFromString(System.Type, string, out string)
  type: Method
  source:
    id: TryConvertFromString
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 128
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static object TryConvertFromString(this Type type, string txt, out string error)
    parameters:
    - id: type
      type: System.Type
    - id: txt
      type: System.String
    - id: error
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function TryConvertFromString(type As Type, txt As String, [error] As String) As Object
  overload: H.Extensions.Common.ObjectExtension.TryConvertFromString*
  nameWithType.vb: ObjectExtension.TryConvertFromString(Type, String, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertFromString(System.Type, String, String)
  name.vb: TryConvertFromString(Type, String, String)
- uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  id: TryConvertToString(System.Object)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: TryConvertToString(object)
  nameWithType: ObjectExtension.TryConvertToString(object)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object)
  type: Method
  source:
    id: TryConvertToString
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 157
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static string TryConvertToString(this object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.String
    content.vb: Public Shared Function TryConvertToString(obj As Object) As String
  overload: H.Extensions.Common.ObjectExtension.TryConvertToString*
  nameWithType.vb: ObjectExtension.TryConvertToString(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object)
  name.vb: TryConvertToString(Object)
- uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  id: TryConvertToString(System.Object,System.String@)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: TryConvertToString(object, out string)
  nameWithType: ObjectExtension.TryConvertToString(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object, out string)
  type: Method
  source:
    id: TryConvertToString
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 161
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static string TryConvertToString(this object obj, out string error)
    parameters:
    - id: obj
      type: System.Object
    - id: error
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function TryConvertToString(obj As Object, [error] As String) As String
  overload: H.Extensions.Common.ObjectExtension.TryConvertToString*
  nameWithType.vb: ObjectExtension.TryConvertToString(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object, String)
  name.vb: TryConvertToString(Object, String)
- uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  id: ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: ModelState(object, out List<string>)
  nameWithType: ObjectExtension.ModelState(object, out List<string>)
  fullName: H.Extensions.Common.ObjectExtension.ModelState(object, out System.Collections.Generic.List<string>)
  type: Method
  source:
    id: ModelState
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 188
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  summary: 模型有效信息验证
  example: []
  syntax:
    content: public static bool ModelState(this object obj, out List<string> errors)
    parameters:
    - id: obj
      type: System.Object
    - id: errors
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.Boolean
    content.vb: Public Shared Function ModelState(obj As Object, errors As List(Of String)) As Boolean
  overload: H.Extensions.Common.ObjectExtension.ModelState*
  nameWithType.vb: ObjectExtension.ModelState(Object, List(Of String))
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelState(Object, System.Collections.Generic.List(Of String))
  name.vb: ModelState(Object, List(Of String))
- uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  id: ModelStateDeep(System.Object,System.String@)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: ModelStateDeep(object, out string)
  nameWithType: ObjectExtension.ModelStateDeep(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.ModelStateDeep(object, out string)
  type: Method
  source:
    id: ModelStateDeep
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 214
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  summary: 模型有效信息验证
  example: []
  syntax:
    content: public static bool ModelStateDeep(this object obj, out string error)
    parameters:
    - id: obj
      type: System.Object
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function ModelStateDeep(obj As Object, [error] As String) As Boolean
  overload: H.Extensions.Common.ObjectExtension.ModelStateDeep*
  nameWithType.vb: ObjectExtension.ModelStateDeep(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelStateDeep(Object, String)
  name.vb: ModelStateDeep(Object, String)
- uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  id: IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: IsMacth(object, Func<PropertyInfo, object, bool>)
  nameWithType: ObjectExtension.IsMacth(object, Func<PropertyInfo, object, bool>)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, System.Func<System.Reflection.PropertyInfo, object, bool>)
  type: Method
  source:
    id: IsMacth
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 278
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static bool IsMacth(this object obj, Func<PropertyInfo, object, bool> match)
    parameters:
    - id: obj
      type: System.Object
    - id: match
      type: System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean}
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsMacth(obj As Object, match As Func(Of PropertyInfo, Object, Boolean)) As Boolean
  overload: H.Extensions.Common.ObjectExtension.IsMacth*
  nameWithType.vb: ObjectExtension.IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, System.Func(Of System.Reflection.PropertyInfo, Object, Boolean))
  name.vb: IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
- uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  id: IsMacth(System.Object,System.String)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: IsMacth(object, string)
  nameWithType: ObjectExtension.IsMacth(object, string)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, string)
  type: Method
  source:
    id: IsMacth
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 292
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static bool IsMacth(this object obj, string searchText)
    parameters:
    - id: obj
      type: System.Object
    - id: searchText
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsMacth(obj As Object, searchText As String) As Boolean
  overload: H.Extensions.Common.ObjectExtension.IsMacth*
  nameWithType.vb: ObjectExtension.IsMacth(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, String)
  name.vb: IsMacth(Object, String)
- uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  id: TryChangeType``1(System.Object)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: TryChangeType<T>(object)
  nameWithType: ObjectExtension.TryChangeType<T>(object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object)
  type: Method
  source:
    id: TryChangeType
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 312
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static T TryChangeType<T>(this object obj)
    parameters:
    - id: obj
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function TryChangeType(Of T)(obj As Object) As T
  overload: H.Extensions.Common.ObjectExtension.TryChangeType*
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object)
  name.vb: TryChangeType(Of T)(Object)
- uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  id: TryChangeType``1(System.Object,``0@)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: TryChangeType<T>(object, out T)
  nameWithType: ObjectExtension.TryChangeType<T>(object, out T)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object, out T)
  type: Method
  source:
    id: TryChangeType
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 317
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static bool TryChangeType<T>(this object obj, out T result)
    parameters:
    - id: obj
      type: System.Object
    - id: result
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryChangeType(Of T)(obj As Object, result As T) As Boolean
  overload: H.Extensions.Common.ObjectExtension.TryChangeType*
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object, T)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object, T)
  name.vb: TryChangeType(Of T)(Object, T)
- uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  id: TryChangeType(System.Object,System.Type,System.Object@)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: TryChangeType(object, Type, out object)
  nameWithType: ObjectExtension.TryChangeType(object, Type, out object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType(object, System.Type, out object)
  type: Method
  source:
    id: TryChangeType
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 330
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static bool TryChangeType(this object obj, Type rType, out object result)
    parameters:
    - id: obj
      type: System.Object
    - id: rType
      type: System.Type
    - id: result
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryChangeType(obj As Object, rType As Type, result As Object) As Boolean
  overload: H.Extensions.Common.ObjectExtension.TryChangeType*
  nameWithType.vb: ObjectExtension.TryChangeType(Object, Type, Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Object, System.Type, Object)
  name.vb: TryChangeType(Object, Type, Object)
- uid: H.Extensions.Common.ObjectExtension.GetDisplayName(System.Type)
  commentId: M:H.Extensions.Common.ObjectExtension.GetDisplayName(System.Type)
  id: GetDisplayName(System.Type)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: GetDisplayName(Type)
  nameWithType: ObjectExtension.GetDisplayName(Type)
  fullName: H.Extensions.Common.ObjectExtension.GetDisplayName(System.Type)
  type: Method
  source:
    id: GetDisplayName
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 358
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static string GetDisplayName(this Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.String
    content.vb: Public Shared Function GetDisplayName(type As Type) As String
  overload: H.Extensions.Common.ObjectExtension.GetDisplayName*
- uid: H.Extensions.Common.ObjectExtension.GetAttributeValue``2(System.Type,System.Func{``0,``1})
  commentId: M:H.Extensions.Common.ObjectExtension.GetAttributeValue``2(System.Type,System.Func{``0,``1})
  id: GetAttributeValue``2(System.Type,System.Func{``0,``1})
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: GetAttributeValue<T, R>(Type, Func<T, R>)
  nameWithType: ObjectExtension.GetAttributeValue<T, R>(Type, Func<T, R>)
  fullName: H.Extensions.Common.ObjectExtension.GetAttributeValue<T, R>(System.Type, System.Func<T, R>)
  type: Method
  source:
    id: GetAttributeValue
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 363
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: 'public static R GetAttributeValue<T, R>(this Type type, Func<T, R> func) where T : Attribute'
    parameters:
    - id: type
      type: System.Type
    - id: func
      type: System.Func{{T},{R}}
    typeParameters:
    - id: T
    - id: R
    return:
      type: '{R}'
    content.vb: Public Shared Function GetAttributeValue(Of T As Attribute, R)(type As Type, func As Func(Of T, R)) As R
  overload: H.Extensions.Common.ObjectExtension.GetAttributeValue*
  nameWithType.vb: ObjectExtension.GetAttributeValue(Of T, R)(Type, Func(Of T, R))
  fullName.vb: H.Extensions.Common.ObjectExtension.GetAttributeValue(Of T, R)(System.Type, System.Func(Of T, R))
  name.vb: GetAttributeValue(Of T, R)(Type, Func(Of T, R))
- uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  id: CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: CloneBy(object, Predicate<PropertyInfo>)
  nameWithType: ObjectExtension.CloneBy(object, Predicate<PropertyInfo>)
  fullName: H.Extensions.Common.ObjectExtension.CloneBy(object, System.Predicate<System.Reflection.PropertyInfo>)
  type: Method
  source:
    id: CloneBy
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 371
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static object CloneBy(this object t, Predicate<PropertyInfo> predicate = null)
    parameters:
    - id: t
      type: System.Object
    - id: predicate
      type: System.Predicate{System.Reflection.PropertyInfo}
    return:
      type: System.Object
    content.vb: Public Shared Function CloneBy(t As Object, predicate As Predicate(Of PropertyInfo) = Nothing) As Object
  overload: H.Extensions.Common.ObjectExtension.CloneBy*
  nameWithType.vb: ObjectExtension.CloneBy(Object, Predicate(Of PropertyInfo))
  fullName.vb: H.Extensions.Common.ObjectExtension.CloneBy(Object, System.Predicate(Of System.Reflection.PropertyInfo))
  name.vb: CloneBy(Object, Predicate(Of PropertyInfo))
- uid: H.Extensions.Common.ObjectExtension.CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:H.Extensions.Common.ObjectExtension.CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
  id: CloneCast``1(``0,System.Predicate{System.Reflection.PropertyInfo})
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: CloneCast<T>(T, Predicate<PropertyInfo>)
  nameWithType: ObjectExtension.CloneCast<T>(T, Predicate<PropertyInfo>)
  fullName: H.Extensions.Common.ObjectExtension.CloneCast<T>(T, System.Predicate<System.Reflection.PropertyInfo>)
  type: Method
  source:
    id: CloneCast
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 419
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: 'public static T CloneCast<T>(this T t, Predicate<PropertyInfo> predicate = null) where T : class'
    parameters:
    - id: t
      type: '{T}'
    - id: predicate
      type: System.Predicate{System.Reflection.PropertyInfo}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function CloneCast(Of T As Class)(t As T, predicate As Predicate(Of PropertyInfo) = Nothing) As T
  overload: H.Extensions.Common.ObjectExtension.CloneCast*
  nameWithType.vb: ObjectExtension.CloneCast(Of T)(T, Predicate(Of PropertyInfo))
  fullName.vb: H.Extensions.Common.ObjectExtension.CloneCast(Of T)(T, System.Predicate(Of System.Reflection.PropertyInfo))
  name.vb: CloneCast(Of T)(T, Predicate(Of PropertyInfo))
- uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  id: CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  nameWithType: ObjectExtension.CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  fullName: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(object, object, System.Predicate<System.Reflection.PropertyInfo>, System.Func<System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, bool>)
  type: Method
  source:
    id: CopyPropertyValueFrom
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 429
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static void CopyPropertyValueFrom(this object to, object from, Predicate<PropertyInfo> predicate = null, Func<PropertyInfo, PropertyInfo, bool> firstOrDefault = null)
    parameters:
    - id: to
      type: System.Object
    - id: from
      type: System.Object
    - id: predicate
      type: System.Predicate{System.Reflection.PropertyInfo}
    - id: firstOrDefault
      type: System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean}
    content.vb: Public Shared Sub CopyPropertyValueFrom([to] As Object, from As Object, predicate As Predicate(Of PropertyInfo) = Nothing, firstOrDefault As Func(Of PropertyInfo, PropertyInfo, Boolean) = Nothing)
  overload: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom*
  nameWithType.vb: ObjectExtension.CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(Object, Object, System.Predicate(Of System.Reflection.PropertyInfo), System.Func(Of System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, Boolean))
  name.vb: CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
- uid: H.Extensions.Common.ObjectExtension.ToByTypeConverter``1(System.String)
  commentId: M:H.Extensions.Common.ObjectExtension.ToByTypeConverter``1(System.String)
  id: ToByTypeConverter``1(System.String)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: ToByTypeConverter<T>(string)
  nameWithType: ObjectExtension.ToByTypeConverter<T>(string)
  fullName: H.Extensions.Common.ObjectExtension.ToByTypeConverter<T>(string)
  type: Method
  source:
    id: ToByTypeConverter
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 477
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static T ToByTypeConverter<T>(this string str)
    parameters:
    - id: str
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function ToByTypeConverter(Of T)(str As String) As T
  overload: H.Extensions.Common.ObjectExtension.ToByTypeConverter*
  nameWithType.vb: ObjectExtension.ToByTypeConverter(Of T)(String)
  fullName.vb: H.Extensions.Common.ObjectExtension.ToByTypeConverter(Of T)(String)
  name.vb: ToByTypeConverter(Of T)(String)
- uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  commentId: M:H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  id: ToEnumerable``1(``0)
  isExtensionMethod: true
  parent: H.Extensions.Common.ObjectExtension
  langs:
  - csharp
  - vb
  name: ToEnumerable<T>(T)
  nameWithType: ObjectExtension.ToEnumerable<T>(T)
  fullName: H.Extensions.Common.ObjectExtension.ToEnumerable<T>(T)
  type: Method
  source:
    id: ToEnumerable
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extension.Object.cs
    startLine: 483
  assemblies:
  - H.Extensions.Common
  namespace: H.Extensions.Common
  syntax:
    content: public static IEnumerable<T> ToEnumerable<T>(this T t)
    parameters:
    - id: t
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function ToEnumerable(Of T)(t As T) As IEnumerable(Of T)
  overload: H.Extensions.Common.ObjectExtension.ToEnumerable*
  nameWithType.vb: ObjectExtension.ToEnumerable(Of T)(T)
  fullName.vb: H.Extensions.Common.ObjectExtension.ToEnumerable(Of T)(T)
  name.vb: ToEnumerable(Of T)(T)
references:
- uid: H.Extensions.Common
  commentId: N:H.Extensions.Common
  href: H.html
  name: H.Extensions.Common
  nameWithType: H.Extensions.Common
  fullName: H.Extensions.Common
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Common
    name: Common
    href: H.Extensions.Common.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Common
    name: Common
    href: H.Extensions.Common.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: H.Extensions.Common.ObjectExtension.TryCreateInstance*
  commentId: Overload:H.Extensions.Common.ObjectExtension.TryCreateInstance
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryCreateInstance_System_Type_System_Object__
  name: TryCreateInstance
  nameWithType: ObjectExtension.TryCreateInstance
  fullName: H.Extensions.Common.ObjectExtension.TryCreateInstance
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: H.Extensions.Common.ObjectExtension.TryCreateItem*
  commentId: Overload:H.Extensions.Common.ObjectExtension.TryCreateItem
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryCreateItem_System_Collections_IEnumerable_System_Object__
  name: TryCreateItem
  nameWithType: ObjectExtension.TryCreateItem
  fullName: H.Extensions.Common.ObjectExtension.TryCreateItem
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: H.Extensions.Common.ObjectExtension.GetGenericArgumentType*
  commentId: Overload:H.Extensions.Common.ObjectExtension.GetGenericArgumentType
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_GetGenericArgumentType_System_Collections_IEnumerable_
  name: GetGenericArgumentType
  nameWithType: ObjectExtension.GetGenericArgumentType
  fullName: H.Extensions.Common.ObjectExtension.GetGenericArgumentType
- uid: H.Extensions.Common.ObjectExtension.Addtem*
  commentId: Overload:H.Extensions.Common.ObjectExtension.Addtem
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_Addtem_System_Collections_IEnumerable_
  name: Addtem
  nameWithType: ObjectExtension.Addtem
  fullName: H.Extensions.Common.ObjectExtension.Addtem
- uid: H.Extensions.Common.ObjectExtension.TryConvertFromString*
  commentId: Overload:H.Extensions.Common.ObjectExtension.TryConvertFromString
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertFromString_System_Type_System_String_System_String__
  name: TryConvertFromString
  nameWithType: ObjectExtension.TryConvertFromString
  fullName: H.Extensions.Common.ObjectExtension.TryConvertFromString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: H.Extensions.Common.ObjectExtension.TryConvertToString*
  commentId: Overload:H.Extensions.Common.ObjectExtension.TryConvertToString
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  name: TryConvertToString
  nameWithType: ObjectExtension.TryConvertToString
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString
- uid: H.Extensions.Common.ObjectExtension.ModelState*
  commentId: Overload:H.Extensions.Common.ObjectExtension.ModelState
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  name: ModelState
  nameWithType: ObjectExtension.ModelState
  fullName: H.Extensions.Common.ObjectExtension.ModelState
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: H.Extensions.Common.ObjectExtension.ModelStateDeep*
  commentId: Overload:H.Extensions.Common.ObjectExtension.ModelStateDeep
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  name: ModelStateDeep
  nameWithType: ObjectExtension.ModelStateDeep
  fullName: H.Extensions.Common.ObjectExtension.ModelStateDeep
- uid: H.Extensions.Common.ObjectExtension.IsMacth*
  commentId: Overload:H.Extensions.Common.ObjectExtension.IsMacth
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  name: IsMacth
  nameWithType: ObjectExtension.IsMacth
  fullName: H.Extensions.Common.ObjectExtension.IsMacth
- uid: System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean}
  commentId: T:System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<PropertyInfo, object, bool>
  nameWithType: Func<PropertyInfo, object, bool>
  fullName: System.Func<System.Reflection.PropertyInfo, object, bool>
  nameWithType.vb: Func(Of PropertyInfo, Object, Boolean)
  fullName.vb: System.Func(Of System.Reflection.PropertyInfo, Object, Boolean)
  name.vb: Func(Of PropertyInfo, Object, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryChangeType*
  commentId: Overload:H.Extensions.Common.ObjectExtension.TryChangeType
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  name: TryChangeType
  nameWithType: ObjectExtension.TryChangeType
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: H.Extensions.Common.ObjectExtension.GetDisplayName*
  commentId: Overload:H.Extensions.Common.ObjectExtension.GetDisplayName
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_GetDisplayName_System_Type_
  name: GetDisplayName
  nameWithType: ObjectExtension.GetDisplayName
  fullName: H.Extensions.Common.ObjectExtension.GetDisplayName
- uid: H.Extensions.Common.ObjectExtension.GetAttributeValue*
  commentId: Overload:H.Extensions.Common.ObjectExtension.GetAttributeValue
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_GetAttributeValue__2_System_Type_System_Func___0___1__
  name: GetAttributeValue
  nameWithType: ObjectExtension.GetAttributeValue
  fullName: H.Extensions.Common.ObjectExtension.GetAttributeValue
- uid: System.Func{{T},{R}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, R>
  nameWithType: Func<T, R>
  fullName: System.Func<T, R>
  nameWithType.vb: Func(Of T, R)
  fullName.vb: System.Func(Of T, R)
  name.vb: Func(Of T, R)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: R
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: R
  - name: )
- uid: '{R}'
  commentId: '!:R'
  definition: R
  name: R
  nameWithType: R
  fullName: R
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: R
  name: R
  nameWithType: R
  fullName: R
- uid: H.Extensions.Common.ObjectExtension.CloneBy*
  commentId: Overload:H.Extensions.Common.ObjectExtension.CloneBy
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  name: CloneBy
  nameWithType: ObjectExtension.CloneBy
  fullName: H.Extensions.Common.ObjectExtension.CloneBy
- uid: System.Predicate{System.Reflection.PropertyInfo}
  commentId: T:System.Predicate{System.Reflection.PropertyInfo}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<PropertyInfo>
  nameWithType: Predicate<PropertyInfo>
  fullName: System.Predicate<System.Reflection.PropertyInfo>
  nameWithType.vb: Predicate(Of PropertyInfo)
  fullName.vb: System.Predicate(Of System.Reflection.PropertyInfo)
  name.vb: Predicate(Of PropertyInfo)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: H.Extensions.Common.ObjectExtension.CloneCast*
  commentId: Overload:H.Extensions.Common.ObjectExtension.CloneCast
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneCast__1___0_System_Predicate_System_Reflection_PropertyInfo__
  name: CloneCast
  nameWithType: ObjectExtension.CloneCast
  fullName: H.Extensions.Common.ObjectExtension.CloneCast
- uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom*
  commentId: Overload:H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  name: CopyPropertyValueFrom
  nameWithType: ObjectExtension.CopyPropertyValueFrom
  fullName: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom
- uid: System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean}
  commentId: T:System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<PropertyInfo, PropertyInfo, bool>
  nameWithType: Func<PropertyInfo, PropertyInfo, bool>
  fullName: System.Func<System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, bool>
  nameWithType.vb: Func(Of PropertyInfo, PropertyInfo, Boolean)
  fullName.vb: System.Func(Of System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, Boolean)
  name.vb: Func(Of PropertyInfo, PropertyInfo, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.Common.ObjectExtension.ToByTypeConverter*
  commentId: Overload:H.Extensions.Common.ObjectExtension.ToByTypeConverter
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToByTypeConverter__1_System_String_
  name: ToByTypeConverter
  nameWithType: ObjectExtension.ToByTypeConverter
  fullName: H.Extensions.Common.ObjectExtension.ToByTypeConverter
- uid: H.Extensions.Common.ObjectExtension.ToEnumerable*
  commentId: Overload:H.Extensions.Common.ObjectExtension.ToEnumerable
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  name: ToEnumerable
  nameWithType: ObjectExtension.ToEnumerable
  fullName: H.Extensions.Common.ObjectExtension.ToEnumerable
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
