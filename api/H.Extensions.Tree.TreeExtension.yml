### YamlMime:ManagedReference
items:
- uid: H.Extensions.Tree.TreeExtension
  commentId: T:H.Extensions.Tree.TreeExtension
  id: TreeExtension
  parent: H.Extensions.Tree
  children:
  - H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree,System.Boolean)
  - H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree,System.Object,System.Boolean)
  - H.Extensions.Tree.TreeExtension.Where``1(System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.ITreeNode},System.Func{``0,System.Boolean})
  langs:
  - csharp
  - vb
  name: TreeExtension
  nameWithType: TreeExtension
  fullName: H.Extensions.Tree.TreeExtension
  type: Class
  source:
    id: TreeExtension
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Tree\TreeExtension.cs
    startLine: 14
  assemblies:
  - H.Extensions.Tree
  namespace: H.Extensions.Tree
  syntax:
    content: public static class TreeExtension
    content.vb: Public Module TreeExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree,System.Boolean)
  commentId: M:H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree,System.Boolean)
  id: GetTreeNodes(H.Extensions.Tree.ITree,System.Boolean)
  isExtensionMethod: true
  parent: H.Extensions.Tree.TreeExtension
  langs:
  - csharp
  - vb
  name: GetTreeNodes(ITree, bool)
  nameWithType: TreeExtension.GetTreeNodes(ITree, bool)
  fullName: H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree, bool)
  type: Method
  source:
    id: GetTreeNodes
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Tree\TreeExtension.cs
    startLine: 16
  assemblies:
  - H.Extensions.Tree
  namespace: H.Extensions.Tree
  syntax:
    content: public static IEnumerable<ITreeNode> GetTreeNodes(this ITree tree, bool isRecursion = true)
    parameters:
    - id: tree
      type: H.Extensions.Tree.ITree
    - id: isRecursion
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.ITreeNode}
    content.vb: Public Shared Function GetTreeNodes(tree As ITree, isRecursion As Boolean = True) As IEnumerable(Of ITreeNode)
  overload: H.Extensions.Tree.TreeExtension.GetTreeNodes*
  nameWithType.vb: TreeExtension.GetTreeNodes(ITree, Boolean)
  fullName.vb: H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree, Boolean)
  name.vb: GetTreeNodes(ITree, Boolean)
- uid: H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree,System.Object,System.Boolean)
  commentId: M:H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree,System.Object,System.Boolean)
  id: GetTreeNodes(H.Extensions.Tree.ITree,System.Object,System.Boolean)
  isExtensionMethod: true
  parent: H.Extensions.Tree.TreeExtension
  langs:
  - csharp
  - vb
  name: GetTreeNodes(ITree, object, bool)
  nameWithType: TreeExtension.GetTreeNodes(ITree, object, bool)
  fullName: H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree, object, bool)
  type: Method
  source:
    id: GetTreeNodes
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Tree\TreeExtension.cs
    startLine: 31
  assemblies:
  - H.Extensions.Tree
  namespace: H.Extensions.Tree
  syntax:
    content: public static IEnumerable<TreeNodeBase<object>> GetTreeNodes(this ITree tree, object parent, bool isRecursion = true)
    parameters:
    - id: tree
      type: H.Extensions.Tree.ITree
    - id: parent
      type: System.Object
    - id: isRecursion
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase{System.Object}}
    content.vb: Public Shared Function GetTreeNodes(tree As ITree, parent As Object, isRecursion As Boolean = True) As IEnumerable(Of TreeNodeBase(Of Object))
  overload: H.Extensions.Tree.TreeExtension.GetTreeNodes*
  nameWithType.vb: TreeExtension.GetTreeNodes(ITree, Object, Boolean)
  fullName.vb: H.Extensions.Tree.TreeExtension.GetTreeNodes(H.Extensions.Tree.ITree, Object, Boolean)
  name.vb: GetTreeNodes(ITree, Object, Boolean)
- uid: H.Extensions.Tree.TreeExtension.Where``1(System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.ITreeNode},System.Func{``0,System.Boolean})
  commentId: M:H.Extensions.Tree.TreeExtension.Where``1(System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.ITreeNode},System.Func{``0,System.Boolean})
  id: Where``1(System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.ITreeNode},System.Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: H.Extensions.Tree.TreeExtension
  langs:
  - csharp
  - vb
  name: Where<T>(IEnumerable<ITreeNode>, Func<T, bool>)
  nameWithType: TreeExtension.Where<T>(IEnumerable<ITreeNode>, Func<T, bool>)
  fullName: H.Extensions.Tree.TreeExtension.Where<T>(System.Collections.Generic.IEnumerable<H.Extensions.Mvvm.ViewModels.Tree.ITreeNode>, System.Func<T, bool>)
  type: Method
  source:
    id: Where
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Tree\TreeExtension.cs
    startLine: 54
  assemblies:
  - H.Extensions.Tree
  namespace: H.Extensions.Tree
  syntax:
    content: public static IEnumerable<TreeNodeBase<object>> Where<T>(this IEnumerable<ITreeNode> treeNodes, Func<T, bool> func)
    parameters:
    - id: treeNodes
      type: System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.ITreeNode}
    - id: func
      type: System.Func{{T},System.Boolean}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase{System.Object}}
    content.vb: Public Shared Function Where(Of T)(treeNodes As IEnumerable(Of ITreeNode), func As Func(Of T, Boolean)) As IEnumerable(Of TreeNodeBase(Of Object))
  overload: H.Extensions.Tree.TreeExtension.Where*
  nameWithType.vb: TreeExtension.Where(Of T)(IEnumerable(Of ITreeNode), Func(Of T, Boolean))
  fullName.vb: H.Extensions.Tree.TreeExtension.Where(Of T)(System.Collections.Generic.IEnumerable(Of H.Extensions.Mvvm.ViewModels.Tree.ITreeNode), System.Func(Of T, Boolean))
  name.vb: Where(Of T)(IEnumerable(Of ITreeNode), Func(Of T, Boolean))
references:
- uid: H.Extensions.Tree
  commentId: N:H.Extensions.Tree
  href: H.html
  name: H.Extensions.Tree
  nameWithType: H.Extensions.Tree
  fullName: H.Extensions.Tree
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Tree
    name: Tree
    href: H.Extensions.Tree.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Tree
    name: Tree
    href: H.Extensions.Tree.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: H.Extensions.Tree.TreeExtension.GetTreeNodes*
  commentId: Overload:H.Extensions.Tree.TreeExtension.GetTreeNodes
  href: H.Extensions.Tree.TreeExtension.html#H_Extensions_Tree_TreeExtension_GetTreeNodes_H_Extensions_Tree_ITree_System_Boolean_
  name: GetTreeNodes
  nameWithType: TreeExtension.GetTreeNodes
  fullName: H.Extensions.Tree.TreeExtension.GetTreeNodes
- uid: H.Extensions.Tree.ITree
  commentId: T:H.Extensions.Tree.ITree
  parent: H.Extensions.Tree
  href: H.Extensions.Tree.ITree.html
  name: ITree
  nameWithType: ITree
  fullName: H.Extensions.Tree.ITree
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.ITreeNode}
  commentId: T:System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.ITreeNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ITreeNode>
  nameWithType: IEnumerable<ITreeNode>
  fullName: System.Collections.Generic.IEnumerable<H.Extensions.Mvvm.ViewModels.Tree.ITreeNode>
  nameWithType.vb: IEnumerable(Of ITreeNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of H.Extensions.Mvvm.ViewModels.Tree.ITreeNode)
  name.vb: IEnumerable(Of ITreeNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: H.Extensions.Mvvm.ViewModels.Tree.ITreeNode
    name: ITreeNode
    href: H.Extensions.Mvvm.ViewModels.Tree.ITreeNode.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.Mvvm.ViewModels.Tree.ITreeNode
    name: ITreeNode
    href: H.Extensions.Mvvm.ViewModels.Tree.ITreeNode.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase{System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase{System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TreeNodeBase<object>>
  nameWithType: IEnumerable<TreeNodeBase<object>>
  fullName: System.Collections.Generic.IEnumerable<H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase<object>>
  nameWithType.vb: IEnumerable(Of TreeNodeBase(Of Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase(Of Object))
  name.vb: IEnumerable(Of TreeNodeBase(Of Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase`1
    name: TreeNodeBase
    href: H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase-1.html
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase`1
    name: TreeNodeBase
    href: H.Extensions.Mvvm.ViewModels.Tree.TreeNodeBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: H.Extensions.Tree.TreeExtension.Where*
  commentId: Overload:H.Extensions.Tree.TreeExtension.Where
  href: H.Extensions.Tree.TreeExtension.html#H_Extensions_Tree_TreeExtension_Where__1_System_Collections_Generic_IEnumerable_H_Extensions_Mvvm_ViewModels_Tree_ITreeNode__System_Func___0_System_Boolean__
  name: Where
  nameWithType: TreeExtension.Where
  fullName: H.Extensions.Tree.TreeExtension.Where
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, bool>
  nameWithType: Func<T, bool>
  fullName: System.Func<T, bool>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
