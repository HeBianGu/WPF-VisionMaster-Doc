### YamlMime:ManagedReference
items:
- uid: H.Extensions.Unit.MetricUnitsExtensions
  commentId: T:H.Extensions.Unit.MetricUnitsExtensions
  id: MetricUnitsExtensions
  parent: H.Extensions.Unit
  children:
  - H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Ampere(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Ampere(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Angstroms(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Angstroms(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Billions(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Billions(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Candela(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Candela(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Centimetres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Centimetres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Colories(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Colories(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Daltons(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Daltons(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Degrees(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Degrees(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Dozen(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Dozen(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Dynes(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Dynes(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Ergs(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Ergs(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.GramWeight(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.GramWeight(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Grams(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Grams(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Hectares(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Hectares(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Hertz(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Hertz(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Hundreds(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Hundreds(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.InAccelerationOfGravity(H.Extensions.Unit.Acceleration)
  - H.Extensions.Unit.MetricUnitsExtensions.InAmpere(H.Extensions.Unit.Current)
  - H.Extensions.Unit.MetricUnitsExtensions.InAngstroms(H.Extensions.Unit.Length)
  - H.Extensions.Unit.MetricUnitsExtensions.InAstronomicalUnits(H.Extensions.Unit.Length)
  - H.Extensions.Unit.MetricUnitsExtensions.InBillions(H.Extensions.Unit.Dimensionless)
  - H.Extensions.Unit.MetricUnitsExtensions.InCaloriesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  - H.Extensions.Unit.MetricUnitsExtensions.InCandela(H.Extensions.Unit.LuminousIntensity)
  - H.Extensions.Unit.MetricUnitsExtensions.InCentimetersPerSecond(H.Extensions.Unit.Velocity)
  - H.Extensions.Unit.MetricUnitsExtensions.InCentimetres(H.Extensions.Unit.Length)
  - H.Extensions.Unit.MetricUnitsExtensions.InColories(H.Extensions.Unit.Energy)
  - H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetres(H.Extensions.Unit.Volume)
  - H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  - H.Extensions.Unit.MetricUnitsExtensions.InCubicMetres(H.Extensions.Unit.Volume)
  - H.Extensions.Unit.MetricUnitsExtensions.InCubicMetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  - H.Extensions.Unit.MetricUnitsExtensions.InDaltons(H.Extensions.Unit.Mass)
  - H.Extensions.Unit.MetricUnitsExtensions.InDegrees(H.Extensions.Unit.Angle)
  - H.Extensions.Unit.MetricUnitsExtensions.InDegreesCelsius(H.Extensions.Unit.TemperatureChange)
  - H.Extensions.Unit.MetricUnitsExtensions.InDegreesKelvin(H.Extensions.Unit.TemperatureChange)
  - H.Extensions.Unit.MetricUnitsExtensions.InDozen(H.Extensions.Unit.Dimensionless)
  - H.Extensions.Unit.MetricUnitsExtensions.InDynes(H.Extensions.Unit.Force)
  - H.Extensions.Unit.MetricUnitsExtensions.InDynesPerCentimetre(H.Extensions.Unit.SurfaceTension)
  - H.Extensions.Unit.MetricUnitsExtensions.InDynesPerSquareCentimetre(H.Extensions.Unit.Pressure)
  - H.Extensions.Unit.MetricUnitsExtensions.InElectronVolts(H.Extensions.Unit.Energy)
  - H.Extensions.Unit.MetricUnitsExtensions.InErgs(H.Extensions.Unit.Energy)
  - H.Extensions.Unit.MetricUnitsExtensions.InGramWeight(H.Extensions.Unit.Force)
  - H.Extensions.Unit.MetricUnitsExtensions.InGrams(H.Extensions.Unit.Mass)
  - H.Extensions.Unit.MetricUnitsExtensions.InGramsPerCC(H.Extensions.Unit.Density)
  - H.Extensions.Unit.MetricUnitsExtensions.InGramsPerLitre(H.Extensions.Unit.Density)
  - H.Extensions.Unit.MetricUnitsExtensions.InGramsPerMole(H.Extensions.Unit.MolarMass)
  - H.Extensions.Unit.MetricUnitsExtensions.InHectares(H.Extensions.Unit.Area)
  - H.Extensions.Unit.MetricUnitsExtensions.InHertz(H.Extensions.Unit.Frequency)
  - H.Extensions.Unit.MetricUnitsExtensions.InHundreds(H.Extensions.Unit.Dimensionless)
  - H.Extensions.Unit.MetricUnitsExtensions.InJoules(H.Extensions.Unit.Energy)
  - H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  - H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole(H.Extensions.Unit.MolarSpecificHeat)
  - H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin(H.Extensions.Unit.SpecificHeat)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquared(H.Extensions.Unit.MomentOfInertia)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquaredPerSecond(H.Extensions.Unit.AngularMomentum)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetresPerSecond(H.Extensions.Unit.Momentum)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilogramWeight(H.Extensions.Unit.Force)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilograms(H.Extensions.Unit.Mass)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerCubicMetre(H.Extensions.Unit.Density)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerMole(H.Extensions.Unit.MolarMass)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerSecond(H.Extensions.Unit.MassFlowRate)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilometres(H.Extensions.Unit.Length)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilometresPerHour(H.Extensions.Unit.Velocity)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilowattHours(H.Extensions.Unit.Energy)
  - H.Extensions.Unit.MetricUnitsExtensions.InKilowatts(H.Extensions.Unit.Power)
  - H.Extensions.Unit.MetricUnitsExtensions.InLitres(H.Extensions.Unit.Volume)
  - H.Extensions.Unit.MetricUnitsExtensions.InLumen(H.Extensions.Unit.LuminousFlux)
  - H.Extensions.Unit.MetricUnitsExtensions.InLux(H.Extensions.Unit.Illuminance)
  - H.Extensions.Unit.MetricUnitsExtensions.InMetres(H.Extensions.Unit.Length)
  - H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecond(H.Extensions.Unit.Velocity)
  - H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecondSquared(H.Extensions.Unit.Acceleration)
  - H.Extensions.Unit.MetricUnitsExtensions.InMicroGrams(H.Extensions.Unit.Mass)
  - H.Extensions.Unit.MetricUnitsExtensions.InMicrometres(H.Extensions.Unit.Length)
  - H.Extensions.Unit.MetricUnitsExtensions.InMilliGrams(H.Extensions.Unit.Mass)
  - H.Extensions.Unit.MetricUnitsExtensions.InMilliSeconds(H.Extensions.Unit.Time)
  - H.Extensions.Unit.MetricUnitsExtensions.InMilligramsPerCC(H.Extensions.Unit.Density)
  - H.Extensions.Unit.MetricUnitsExtensions.InMillimetres(H.Extensions.Unit.Length)
  - H.Extensions.Unit.MetricUnitsExtensions.InMillimetresOfMercury(H.Extensions.Unit.Pressure)
  - H.Extensions.Unit.MetricUnitsExtensions.InMillions(H.Extensions.Unit.Dimensionless)
  - H.Extensions.Unit.MetricUnitsExtensions.InMole(H.Extensions.Unit.AmountOfSubstance)
  - H.Extensions.Unit.MetricUnitsExtensions.InMolesPerCubicMetre(H.Extensions.Unit.MolarConcentration)
  - H.Extensions.Unit.MetricUnitsExtensions.InMolesPerLitre(H.Extensions.Unit.MolarConcentration)
  - H.Extensions.Unit.MetricUnitsExtensions.InNanoGrams(H.Extensions.Unit.Mass)
  - H.Extensions.Unit.MetricUnitsExtensions.InNanoMoles(H.Extensions.Unit.AmountOfSubstance)
  - H.Extensions.Unit.MetricUnitsExtensions.InNanometres(H.Extensions.Unit.Length)
  - H.Extensions.Unit.MetricUnitsExtensions.InNewtons(H.Extensions.Unit.Force)
  - H.Extensions.Unit.MetricUnitsExtensions.InNewtonsPerMetre(H.Extensions.Unit.SurfaceTension)
  - H.Extensions.Unit.MetricUnitsExtensions.InOhmMetres(H.Extensions.Unit.Resistivity)
  - H.Extensions.Unit.MetricUnitsExtensions.InOhms(H.Extensions.Unit.Resistance)
  - H.Extensions.Unit.MetricUnitsExtensions.InPascalSeconds(H.Extensions.Unit.CoefficientOfViscosity)
  - H.Extensions.Unit.MetricUnitsExtensions.InPascals(H.Extensions.Unit.Pressure)
  - H.Extensions.Unit.MetricUnitsExtensions.InPerDegreeKelvin(H.Extensions.Unit.CoefficientOfThermalExpansion)
  - H.Extensions.Unit.MetricUnitsExtensions.InPercent(H.Extensions.Unit.Dimensionless)
  - H.Extensions.Unit.MetricUnitsExtensions.InPoises(H.Extensions.Unit.CoefficientOfViscosity)
  - H.Extensions.Unit.MetricUnitsExtensions.InRadians(H.Extensions.Unit.Angle)
  - H.Extensions.Unit.MetricUnitsExtensions.InSeconds(H.Extensions.Unit.Time)
  - H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetres(H.Extensions.Unit.Area)
  - H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  - H.Extensions.Unit.MetricUnitsExtensions.InSquareDegrees(H.Extensions.Unit.SolidAngle)
  - H.Extensions.Unit.MetricUnitsExtensions.InSquareMetres(H.Extensions.Unit.Area)
  - H.Extensions.Unit.MetricUnitsExtensions.InSquareMetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  - H.Extensions.Unit.MetricUnitsExtensions.InSteradians(H.Extensions.Unit.SolidAngle)
  - H.Extensions.Unit.MetricUnitsExtensions.InThousands(H.Extensions.Unit.Dimensionless)
  - H.Extensions.Unit.MetricUnitsExtensions.InTonnes(H.Extensions.Unit.Mass)
  - H.Extensions.Unit.MetricUnitsExtensions.InTonnesOfOilEquivalent(H.Extensions.Unit.Energy)
  - H.Extensions.Unit.MetricUnitsExtensions.InTrillions(H.Extensions.Unit.Dimensionless)
  - H.Extensions.Unit.MetricUnitsExtensions.InUnits(H.Extensions.Unit.Dimensionless)
  - H.Extensions.Unit.MetricUnitsExtensions.InVolts(H.Extensions.Unit.ElectricPotential)
  - H.Extensions.Unit.MetricUnitsExtensions.InWatts(H.Extensions.Unit.Power)
  - H.Extensions.Unit.MetricUnitsExtensions.InWattsPerMetrePerDegree(H.Extensions.Unit.ThermalConductivity)
  - H.Extensions.Unit.MetricUnitsExtensions.Joules(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Joules(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Kilograms(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Kilograms(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Kilometres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Kilometres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Litres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Litres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Lumen(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Lumen(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Lux(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Lux(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Metres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Metres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Micrometres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Micrometres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Millimetres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Millimetres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Millions(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Millions(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Mole(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Mole(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Nanometres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Nanometres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Newtons(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Newtons(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Ohms(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Ohms(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Pascals(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Pascals(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Percent(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Percent(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Poises(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Poises(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Radians(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Radians(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Seconds(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Seconds(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Steradians(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Steradians(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Thousands(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Thousands(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Tonnes(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Tonnes(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Trillions(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Trillions(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Units(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Units(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Volts(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Volts(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.Watts(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.Watts(System.Int32)
  - H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(System.Double)
  - H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(System.Int32)
  langs:
  - csharp
  - vb
  name: MetricUnitsExtensions
  nameWithType: MetricUnitsExtensions
  fullName: H.Extensions.Unit.MetricUnitsExtensions
  type: Class
  source:
    id: MetricUnitsExtensions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 311
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static class MetricUnitsExtensions
    content.vb: Public Module MetricUnitsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: H.Extensions.Unit.MetricUnitsExtensions.Units(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Units(System.Int32)
  id: Units(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Units(int)
  nameWithType: MetricUnitsExtensions.Units(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Units(int)
  type: Method
  source:
    id: Units
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 313
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Units(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Units(v As Integer) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Units*
  nameWithType.vb: MetricUnitsExtensions.Units(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Units(Integer)
  name.vb: Units(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Units(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Units(System.Double)
  id: Units(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Units(double)
  nameWithType: MetricUnitsExtensions.Units(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Units(double)
  type: Method
  source:
    id: Units
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 314
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Units(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Units(v As Double) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Units*
  nameWithType.vb: MetricUnitsExtensions.Units(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Units(Double)
  name.vb: Units(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InUnits(H.Extensions.Unit.Dimensionless)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InUnits(H.Extensions.Unit.Dimensionless)
  id: InUnits(H.Extensions.Unit.Dimensionless)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InUnits(Dimensionless)
  nameWithType: MetricUnitsExtensions.InUnits(Dimensionless)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InUnits(H.Extensions.Unit.Dimensionless)
  type: Method
  source:
    id: InUnits
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 318
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InUnits(this Dimensionless v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Dimensionless
    return:
      type: System.Double
    content.vb: Public Shared Function InUnits(v As Dimensionless) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InUnits*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Metres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Metres(System.Int32)
  id: Metres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Metres(int)
  nameWithType: MetricUnitsExtensions.Metres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Metres(int)
  type: Method
  source:
    id: Metres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 322
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Metres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Metres(v As Integer) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Metres*
  nameWithType.vb: MetricUnitsExtensions.Metres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Metres(Integer)
  name.vb: Metres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Metres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Metres(System.Double)
  id: Metres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Metres(double)
  nameWithType: MetricUnitsExtensions.Metres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Metres(double)
  type: Method
  source:
    id: Metres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 323
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Metres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Metres(v As Double) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Metres*
  nameWithType.vb: MetricUnitsExtensions.Metres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Metres(Double)
  name.vb: Metres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMetres(H.Extensions.Unit.Length)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMetres(H.Extensions.Unit.Length)
  id: InMetres(H.Extensions.Unit.Length)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMetres(Length)
  nameWithType: MetricUnitsExtensions.InMetres(Length)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMetres(H.Extensions.Unit.Length)
  type: Method
  source:
    id: InMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 327
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMetres(this Length v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Length
    return:
      type: System.Double
    content.vb: Public Shared Function InMetres(v As Length) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMetres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(System.Int32)
  id: SquareMetres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareMetres(int)
  nameWithType: MetricUnitsExtensions.SquareMetres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(int)
  type: Method
  source:
    id: SquareMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 331
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Area SquareMetres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Area
    content.vb: Public Shared Function SquareMetres(v As Integer) As Area
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres*
  nameWithType.vb: MetricUnitsExtensions.SquareMetres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(Integer)
  name.vb: SquareMetres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(System.Double)
  id: SquareMetres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareMetres(double)
  nameWithType: MetricUnitsExtensions.SquareMetres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(double)
  type: Method
  source:
    id: SquareMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 332
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Area SquareMetres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Area
    content.vb: Public Shared Function SquareMetres(v As Double) As Area
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres*
  nameWithType.vb: MetricUnitsExtensions.SquareMetres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres(Double)
  name.vb: SquareMetres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetres(H.Extensions.Unit.Area)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InSquareMetres(H.Extensions.Unit.Area)
  id: InSquareMetres(H.Extensions.Unit.Area)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InSquareMetres(Area)
  nameWithType: MetricUnitsExtensions.InSquareMetres(Area)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetres(H.Extensions.Unit.Area)
  type: Method
  source:
    id: InSquareMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 336
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InSquareMetres(this Area v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Area
    return:
      type: System.Double
    content.vb: Public Shared Function InSquareMetres(v As Area) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(System.Int32)
  id: CubicMetres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CubicMetres(int)
  nameWithType: MetricUnitsExtensions.CubicMetres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(int)
  type: Method
  source:
    id: CubicMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 340
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Volume CubicMetres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Volume
    content.vb: Public Shared Function CubicMetres(v As Integer) As Volume
  overload: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres*
  nameWithType.vb: MetricUnitsExtensions.CubicMetres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(Integer)
  name.vb: CubicMetres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(System.Double)
  id: CubicMetres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CubicMetres(double)
  nameWithType: MetricUnitsExtensions.CubicMetres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(double)
  type: Method
  source:
    id: CubicMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 341
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Volume CubicMetres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Volume
    content.vb: Public Shared Function CubicMetres(v As Double) As Volume
  overload: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres*
  nameWithType.vb: MetricUnitsExtensions.CubicMetres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres(Double)
  name.vb: CubicMetres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetres(H.Extensions.Unit.Volume)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InCubicMetres(H.Extensions.Unit.Volume)
  id: InCubicMetres(H.Extensions.Unit.Volume)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InCubicMetres(Volume)
  nameWithType: MetricUnitsExtensions.InCubicMetres(Volume)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetres(H.Extensions.Unit.Volume)
  type: Method
  source:
    id: InCubicMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 345
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InCubicMetres(this Volume v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Volume
    return:
      type: System.Double
    content.vb: Public Shared Function InCubicMetres(v As Volume) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Kilograms(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Kilograms(System.Int32)
  id: Kilograms(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Kilograms(int)
  nameWithType: MetricUnitsExtensions.Kilograms(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Kilograms(int)
  type: Method
  source:
    id: Kilograms
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 349
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass Kilograms(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function Kilograms(v As Integer) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.Kilograms*
  nameWithType.vb: MetricUnitsExtensions.Kilograms(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Kilograms(Integer)
  name.vb: Kilograms(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Kilograms(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Kilograms(System.Double)
  id: Kilograms(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Kilograms(double)
  nameWithType: MetricUnitsExtensions.Kilograms(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Kilograms(double)
  type: Method
  source:
    id: Kilograms
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 350
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass Kilograms(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function Kilograms(v As Double) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.Kilograms*
  nameWithType.vb: MetricUnitsExtensions.Kilograms(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Kilograms(Double)
  name.vb: Kilograms(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilograms(H.Extensions.Unit.Mass)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilograms(H.Extensions.Unit.Mass)
  id: InKilograms(H.Extensions.Unit.Mass)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilograms(Mass)
  nameWithType: MetricUnitsExtensions.InKilograms(Mass)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilograms(H.Extensions.Unit.Mass)
  type: Method
  source:
    id: InKilograms
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 354
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilograms(this Mass v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Mass
    return:
      type: System.Double
    content.vb: Public Shared Function InKilograms(v As Mass) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilograms*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Seconds(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Seconds(System.Int32)
  id: Seconds(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Seconds(int)
  nameWithType: MetricUnitsExtensions.Seconds(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Seconds(int)
  type: Method
  source:
    id: Seconds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 358
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Time Seconds(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Time
    content.vb: Public Shared Function Seconds(v As Integer) As Time
  overload: H.Extensions.Unit.MetricUnitsExtensions.Seconds*
  nameWithType.vb: MetricUnitsExtensions.Seconds(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Seconds(Integer)
  name.vb: Seconds(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Seconds(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Seconds(System.Double)
  id: Seconds(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Seconds(double)
  nameWithType: MetricUnitsExtensions.Seconds(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Seconds(double)
  type: Method
  source:
    id: Seconds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 359
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Time Seconds(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Time
    content.vb: Public Shared Function Seconds(v As Double) As Time
  overload: H.Extensions.Unit.MetricUnitsExtensions.Seconds*
  nameWithType.vb: MetricUnitsExtensions.Seconds(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Seconds(Double)
  name.vb: Seconds(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSeconds(H.Extensions.Unit.Time)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InSeconds(H.Extensions.Unit.Time)
  id: InSeconds(H.Extensions.Unit.Time)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InSeconds(Time)
  nameWithType: MetricUnitsExtensions.InSeconds(Time)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSeconds(H.Extensions.Unit.Time)
  type: Method
  source:
    id: InSeconds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 363
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InSeconds(this Time v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Time
    return:
      type: System.Double
    content.vb: Public Shared Function InSeconds(v As Time) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InSeconds*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Ampere(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Ampere(System.Int32)
  id: Ampere(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Ampere(int)
  nameWithType: MetricUnitsExtensions.Ampere(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Ampere(int)
  type: Method
  source:
    id: Ampere
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 367
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Current Ampere(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Current
    content.vb: Public Shared Function Ampere(v As Integer) As Current
  overload: H.Extensions.Unit.MetricUnitsExtensions.Ampere*
  nameWithType.vb: MetricUnitsExtensions.Ampere(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Ampere(Integer)
  name.vb: Ampere(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Ampere(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Ampere(System.Double)
  id: Ampere(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Ampere(double)
  nameWithType: MetricUnitsExtensions.Ampere(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Ampere(double)
  type: Method
  source:
    id: Ampere
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 368
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Current Ampere(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Current
    content.vb: Public Shared Function Ampere(v As Double) As Current
  overload: H.Extensions.Unit.MetricUnitsExtensions.Ampere*
  nameWithType.vb: MetricUnitsExtensions.Ampere(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Ampere(Double)
  name.vb: Ampere(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InAmpere(H.Extensions.Unit.Current)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InAmpere(H.Extensions.Unit.Current)
  id: InAmpere(H.Extensions.Unit.Current)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InAmpere(Current)
  nameWithType: MetricUnitsExtensions.InAmpere(Current)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InAmpere(H.Extensions.Unit.Current)
  type: Method
  source:
    id: InAmpere
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 372
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InAmpere(this Current v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Current
    return:
      type: System.Double
    content.vb: Public Shared Function InAmpere(v As Current) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InAmpere*
- uid: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(System.Int32)
  id: DegreesKelvin(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: DegreesKelvin(int)
  nameWithType: MetricUnitsExtensions.DegreesKelvin(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(int)
  type: Method
  source:
    id: DegreesKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 376
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static TemperatureChange DegreesKelvin(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.TemperatureChange
    content.vb: Public Shared Function DegreesKelvin(v As Integer) As TemperatureChange
  overload: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin*
  nameWithType.vb: MetricUnitsExtensions.DegreesKelvin(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(Integer)
  name.vb: DegreesKelvin(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(System.Double)
  id: DegreesKelvin(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: DegreesKelvin(double)
  nameWithType: MetricUnitsExtensions.DegreesKelvin(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(double)
  type: Method
  source:
    id: DegreesKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 377
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static TemperatureChange DegreesKelvin(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.TemperatureChange
    content.vb: Public Shared Function DegreesKelvin(v As Double) As TemperatureChange
  overload: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin*
  nameWithType.vb: MetricUnitsExtensions.DegreesKelvin(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin(Double)
  name.vb: DegreesKelvin(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDegreesKelvin(H.Extensions.Unit.TemperatureChange)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InDegreesKelvin(H.Extensions.Unit.TemperatureChange)
  id: InDegreesKelvin(H.Extensions.Unit.TemperatureChange)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InDegreesKelvin(TemperatureChange)
  nameWithType: MetricUnitsExtensions.InDegreesKelvin(TemperatureChange)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDegreesKelvin(H.Extensions.Unit.TemperatureChange)
  type: Method
  source:
    id: InDegreesKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 381
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InDegreesKelvin(this TemperatureChange v)
    parameters:
    - id: v
      type: H.Extensions.Unit.TemperatureChange
    return:
      type: System.Double
    content.vb: Public Shared Function InDegreesKelvin(v As TemperatureChange) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InDegreesKelvin*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Mole(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Mole(System.Int32)
  id: Mole(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Mole(int)
  nameWithType: MetricUnitsExtensions.Mole(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Mole(int)
  type: Method
  source:
    id: Mole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 385
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static AmountOfSubstance Mole(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.AmountOfSubstance
    content.vb: Public Shared Function Mole(v As Integer) As AmountOfSubstance
  overload: H.Extensions.Unit.MetricUnitsExtensions.Mole*
  nameWithType.vb: MetricUnitsExtensions.Mole(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Mole(Integer)
  name.vb: Mole(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Mole(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Mole(System.Double)
  id: Mole(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Mole(double)
  nameWithType: MetricUnitsExtensions.Mole(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Mole(double)
  type: Method
  source:
    id: Mole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 386
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static AmountOfSubstance Mole(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.AmountOfSubstance
    content.vb: Public Shared Function Mole(v As Double) As AmountOfSubstance
  overload: H.Extensions.Unit.MetricUnitsExtensions.Mole*
  nameWithType.vb: MetricUnitsExtensions.Mole(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Mole(Double)
  name.vb: Mole(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMole(H.Extensions.Unit.AmountOfSubstance)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMole(H.Extensions.Unit.AmountOfSubstance)
  id: InMole(H.Extensions.Unit.AmountOfSubstance)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMole(AmountOfSubstance)
  nameWithType: MetricUnitsExtensions.InMole(AmountOfSubstance)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMole(H.Extensions.Unit.AmountOfSubstance)
  type: Method
  source:
    id: InMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 390
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMole(this AmountOfSubstance v)
    parameters:
    - id: v
      type: H.Extensions.Unit.AmountOfSubstance
    return:
      type: System.Double
    content.vb: Public Shared Function InMole(v As AmountOfSubstance) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMole*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Candela(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Candela(System.Int32)
  id: Candela(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Candela(int)
  nameWithType: MetricUnitsExtensions.Candela(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Candela(int)
  type: Method
  source:
    id: Candela
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 394
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static LuminousIntensity Candela(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.LuminousIntensity
    content.vb: Public Shared Function Candela(v As Integer) As LuminousIntensity
  overload: H.Extensions.Unit.MetricUnitsExtensions.Candela*
  nameWithType.vb: MetricUnitsExtensions.Candela(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Candela(Integer)
  name.vb: Candela(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Candela(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Candela(System.Double)
  id: Candela(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Candela(double)
  nameWithType: MetricUnitsExtensions.Candela(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Candela(double)
  type: Method
  source:
    id: Candela
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 395
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static LuminousIntensity Candela(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.LuminousIntensity
    content.vb: Public Shared Function Candela(v As Double) As LuminousIntensity
  overload: H.Extensions.Unit.MetricUnitsExtensions.Candela*
  nameWithType.vb: MetricUnitsExtensions.Candela(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Candela(Double)
  name.vb: Candela(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCandela(H.Extensions.Unit.LuminousIntensity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InCandela(H.Extensions.Unit.LuminousIntensity)
  id: InCandela(H.Extensions.Unit.LuminousIntensity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InCandela(LuminousIntensity)
  nameWithType: MetricUnitsExtensions.InCandela(LuminousIntensity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCandela(H.Extensions.Unit.LuminousIntensity)
  type: Method
  source:
    id: InCandela
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 399
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InCandela(this LuminousIntensity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.LuminousIntensity
    return:
      type: System.Double
    content.vb: Public Shared Function InCandela(v As LuminousIntensity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InCandela*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Radians(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Radians(System.Int32)
  id: Radians(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Radians(int)
  nameWithType: MetricUnitsExtensions.Radians(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Radians(int)
  type: Method
  source:
    id: Radians
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 403
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Angle Radians(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Angle
    content.vb: Public Shared Function Radians(v As Integer) As Angle
  overload: H.Extensions.Unit.MetricUnitsExtensions.Radians*
  nameWithType.vb: MetricUnitsExtensions.Radians(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Radians(Integer)
  name.vb: Radians(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Radians(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Radians(System.Double)
  id: Radians(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Radians(double)
  nameWithType: MetricUnitsExtensions.Radians(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Radians(double)
  type: Method
  source:
    id: Radians
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 404
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Angle Radians(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Angle
    content.vb: Public Shared Function Radians(v As Double) As Angle
  overload: H.Extensions.Unit.MetricUnitsExtensions.Radians*
  nameWithType.vb: MetricUnitsExtensions.Radians(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Radians(Double)
  name.vb: Radians(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InRadians(H.Extensions.Unit.Angle)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InRadians(H.Extensions.Unit.Angle)
  id: InRadians(H.Extensions.Unit.Angle)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InRadians(Angle)
  nameWithType: MetricUnitsExtensions.InRadians(Angle)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InRadians(H.Extensions.Unit.Angle)
  type: Method
  source:
    id: InRadians
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 408
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InRadians(this Angle v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Angle
    return:
      type: System.Double
    content.vb: Public Shared Function InRadians(v As Angle) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InRadians*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Steradians(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Steradians(System.Int32)
  id: Steradians(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Steradians(int)
  nameWithType: MetricUnitsExtensions.Steradians(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Steradians(int)
  type: Method
  source:
    id: Steradians
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 412
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SolidAngle Steradians(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.SolidAngle
    content.vb: Public Shared Function Steradians(v As Integer) As SolidAngle
  overload: H.Extensions.Unit.MetricUnitsExtensions.Steradians*
  nameWithType.vb: MetricUnitsExtensions.Steradians(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Steradians(Integer)
  name.vb: Steradians(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Steradians(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Steradians(System.Double)
  id: Steradians(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Steradians(double)
  nameWithType: MetricUnitsExtensions.Steradians(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Steradians(double)
  type: Method
  source:
    id: Steradians
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 413
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SolidAngle Steradians(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.SolidAngle
    content.vb: Public Shared Function Steradians(v As Double) As SolidAngle
  overload: H.Extensions.Unit.MetricUnitsExtensions.Steradians*
  nameWithType.vb: MetricUnitsExtensions.Steradians(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Steradians(Double)
  name.vb: Steradians(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSteradians(H.Extensions.Unit.SolidAngle)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InSteradians(H.Extensions.Unit.SolidAngle)
  id: InSteradians(H.Extensions.Unit.SolidAngle)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InSteradians(SolidAngle)
  nameWithType: MetricUnitsExtensions.InSteradians(SolidAngle)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSteradians(H.Extensions.Unit.SolidAngle)
  type: Method
  source:
    id: InSteradians
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 417
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InSteradians(this SolidAngle v)
    parameters:
    - id: v
      type: H.Extensions.Unit.SolidAngle
    return:
      type: System.Double
    content.vb: Public Shared Function InSteradians(v As SolidAngle) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InSteradians*
- uid: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(System.Int32)
  id: MetresPerSecond(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MetresPerSecond(int)
  nameWithType: MetricUnitsExtensions.MetresPerSecond(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(int)
  type: Method
  source:
    id: MetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 421
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Velocity MetresPerSecond(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Velocity
    content.vb: Public Shared Function MetresPerSecond(v As Integer) As Velocity
  overload: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.MetresPerSecond(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(Integer)
  name.vb: MetresPerSecond(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(System.Double)
  id: MetresPerSecond(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MetresPerSecond(double)
  nameWithType: MetricUnitsExtensions.MetresPerSecond(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(double)
  type: Method
  source:
    id: MetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 422
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Velocity MetresPerSecond(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Velocity
    content.vb: Public Shared Function MetresPerSecond(v As Double) As Velocity
  overload: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.MetresPerSecond(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond(Double)
  name.vb: MetresPerSecond(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecond(H.Extensions.Unit.Velocity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecond(H.Extensions.Unit.Velocity)
  id: InMetresPerSecond(H.Extensions.Unit.Velocity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMetresPerSecond(Velocity)
  nameWithType: MetricUnitsExtensions.InMetresPerSecond(Velocity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecond(H.Extensions.Unit.Velocity)
  type: Method
  source:
    id: InMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 426
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMetresPerSecond(this Velocity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Velocity
    return:
      type: System.Double
    content.vb: Public Shared Function InMetresPerSecond(v As Velocity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecond*
- uid: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(System.Int32)
  id: MetresPerSecondSquared(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MetresPerSecondSquared(int)
  nameWithType: MetricUnitsExtensions.MetresPerSecondSquared(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(int)
  type: Method
  source:
    id: MetresPerSecondSquared
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 430
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Acceleration MetresPerSecondSquared(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Acceleration
    content.vb: Public Shared Function MetresPerSecondSquared(v As Integer) As Acceleration
  overload: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared*
  nameWithType.vb: MetricUnitsExtensions.MetresPerSecondSquared(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(Integer)
  name.vb: MetresPerSecondSquared(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(System.Double)
  id: MetresPerSecondSquared(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MetresPerSecondSquared(double)
  nameWithType: MetricUnitsExtensions.MetresPerSecondSquared(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(double)
  type: Method
  source:
    id: MetresPerSecondSquared
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 431
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Acceleration MetresPerSecondSquared(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Acceleration
    content.vb: Public Shared Function MetresPerSecondSquared(v As Double) As Acceleration
  overload: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared*
  nameWithType.vb: MetricUnitsExtensions.MetresPerSecondSquared(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared(Double)
  name.vb: MetresPerSecondSquared(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecondSquared(H.Extensions.Unit.Acceleration)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecondSquared(H.Extensions.Unit.Acceleration)
  id: InMetresPerSecondSquared(H.Extensions.Unit.Acceleration)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMetresPerSecondSquared(Acceleration)
  nameWithType: MetricUnitsExtensions.InMetresPerSecondSquared(Acceleration)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecondSquared(H.Extensions.Unit.Acceleration)
  type: Method
  source:
    id: InMetresPerSecondSquared
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 435
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMetresPerSecondSquared(this Acceleration v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Acceleration
    return:
      type: System.Double
    content.vb: Public Shared Function InMetresPerSecondSquared(v As Acceleration) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecondSquared*
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(System.Int32)
  id: KilogramMetresPerSecond(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramMetresPerSecond(int)
  nameWithType: MetricUnitsExtensions.KilogramMetresPerSecond(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(int)
  type: Method
  source:
    id: KilogramMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 439
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Momentum KilogramMetresPerSecond(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Momentum
    content.vb: Public Shared Function KilogramMetresPerSecond(v As Integer) As Momentum
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.KilogramMetresPerSecond(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(Integer)
  name.vb: KilogramMetresPerSecond(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(System.Double)
  id: KilogramMetresPerSecond(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramMetresPerSecond(double)
  nameWithType: MetricUnitsExtensions.KilogramMetresPerSecond(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(double)
  type: Method
  source:
    id: KilogramMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 440
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Momentum KilogramMetresPerSecond(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Momentum
    content.vb: Public Shared Function KilogramMetresPerSecond(v As Double) As Momentum
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.KilogramMetresPerSecond(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond(Double)
  name.vb: KilogramMetresPerSecond(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetresPerSecond(H.Extensions.Unit.Momentum)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetresPerSecond(H.Extensions.Unit.Momentum)
  id: InKilogramMetresPerSecond(H.Extensions.Unit.Momentum)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilogramMetresPerSecond(Momentum)
  nameWithType: MetricUnitsExtensions.InKilogramMetresPerSecond(Momentum)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetresPerSecond(H.Extensions.Unit.Momentum)
  type: Method
  source:
    id: InKilogramMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 444
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilogramMetresPerSecond(this Momentum v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Momentum
    return:
      type: System.Double
    content.vb: Public Shared Function InKilogramMetresPerSecond(v As Momentum) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetresPerSecond*
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(System.Int32)
  id: KilogramsPerCubicMetre(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramsPerCubicMetre(int)
  nameWithType: MetricUnitsExtensions.KilogramsPerCubicMetre(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(int)
  type: Method
  source:
    id: KilogramsPerCubicMetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 448
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Density KilogramsPerCubicMetre(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Density
    content.vb: Public Shared Function KilogramsPerCubicMetre(v As Integer) As Density
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre*
  nameWithType.vb: MetricUnitsExtensions.KilogramsPerCubicMetre(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(Integer)
  name.vb: KilogramsPerCubicMetre(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(System.Double)
  id: KilogramsPerCubicMetre(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramsPerCubicMetre(double)
  nameWithType: MetricUnitsExtensions.KilogramsPerCubicMetre(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(double)
  type: Method
  source:
    id: KilogramsPerCubicMetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 449
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Density KilogramsPerCubicMetre(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Density
    content.vb: Public Shared Function KilogramsPerCubicMetre(v As Double) As Density
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre*
  nameWithType.vb: MetricUnitsExtensions.KilogramsPerCubicMetre(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre(Double)
  name.vb: KilogramsPerCubicMetre(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerCubicMetre(H.Extensions.Unit.Density)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerCubicMetre(H.Extensions.Unit.Density)
  id: InKilogramsPerCubicMetre(H.Extensions.Unit.Density)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilogramsPerCubicMetre(Density)
  nameWithType: MetricUnitsExtensions.InKilogramsPerCubicMetre(Density)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerCubicMetre(H.Extensions.Unit.Density)
  type: Method
  source:
    id: InKilogramsPerCubicMetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 453
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilogramsPerCubicMetre(this Density v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Density
    return:
      type: System.Double
    content.vb: Public Shared Function InKilogramsPerCubicMetre(v As Density) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerCubicMetre*
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(System.Int32)
  id: KilogramsPerMole(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramsPerMole(int)
  nameWithType: MetricUnitsExtensions.KilogramsPerMole(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(int)
  type: Method
  source:
    id: KilogramsPerMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 457
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarMass KilogramsPerMole(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.MolarMass
    content.vb: Public Shared Function KilogramsPerMole(v As Integer) As MolarMass
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole*
  nameWithType.vb: MetricUnitsExtensions.KilogramsPerMole(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(Integer)
  name.vb: KilogramsPerMole(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(System.Double)
  id: KilogramsPerMole(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramsPerMole(double)
  nameWithType: MetricUnitsExtensions.KilogramsPerMole(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(double)
  type: Method
  source:
    id: KilogramsPerMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 458
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarMass KilogramsPerMole(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.MolarMass
    content.vb: Public Shared Function KilogramsPerMole(v As Double) As MolarMass
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole*
  nameWithType.vb: MetricUnitsExtensions.KilogramsPerMole(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole(Double)
  name.vb: KilogramsPerMole(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerMole(H.Extensions.Unit.MolarMass)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerMole(H.Extensions.Unit.MolarMass)
  id: InKilogramsPerMole(H.Extensions.Unit.MolarMass)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilogramsPerMole(MolarMass)
  nameWithType: MetricUnitsExtensions.InKilogramsPerMole(MolarMass)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerMole(H.Extensions.Unit.MolarMass)
  type: Method
  source:
    id: InKilogramsPerMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 462
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilogramsPerMole(this MolarMass v)
    parameters:
    - id: v
      type: H.Extensions.Unit.MolarMass
    return:
      type: System.Double
    content.vb: Public Shared Function InKilogramsPerMole(v As MolarMass) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerMole*
- uid: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(System.Int32)
  id: MolesPerCubicMetre(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MolesPerCubicMetre(int)
  nameWithType: MetricUnitsExtensions.MolesPerCubicMetre(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(int)
  type: Method
  source:
    id: MolesPerCubicMetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 466
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarConcentration MolesPerCubicMetre(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.MolarConcentration
    content.vb: Public Shared Function MolesPerCubicMetre(v As Integer) As MolarConcentration
  overload: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre*
  nameWithType.vb: MetricUnitsExtensions.MolesPerCubicMetre(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(Integer)
  name.vb: MolesPerCubicMetre(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(System.Double)
  id: MolesPerCubicMetre(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MolesPerCubicMetre(double)
  nameWithType: MetricUnitsExtensions.MolesPerCubicMetre(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(double)
  type: Method
  source:
    id: MolesPerCubicMetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 467
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarConcentration MolesPerCubicMetre(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.MolarConcentration
    content.vb: Public Shared Function MolesPerCubicMetre(v As Double) As MolarConcentration
  overload: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre*
  nameWithType.vb: MetricUnitsExtensions.MolesPerCubicMetre(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre(Double)
  name.vb: MolesPerCubicMetre(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerCubicMetre(H.Extensions.Unit.MolarConcentration)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMolesPerCubicMetre(H.Extensions.Unit.MolarConcentration)
  id: InMolesPerCubicMetre(H.Extensions.Unit.MolarConcentration)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMolesPerCubicMetre(MolarConcentration)
  nameWithType: MetricUnitsExtensions.InMolesPerCubicMetre(MolarConcentration)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerCubicMetre(H.Extensions.Unit.MolarConcentration)
  type: Method
  source:
    id: InMolesPerCubicMetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 471
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMolesPerCubicMetre(this MolarConcentration v)
    parameters:
    - id: v
      type: H.Extensions.Unit.MolarConcentration
    return:
      type: System.Double
    content.vb: Public Shared Function InMolesPerCubicMetre(v As MolarConcentration) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerCubicMetre*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Newtons(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Newtons(System.Int32)
  id: Newtons(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Newtons(int)
  nameWithType: MetricUnitsExtensions.Newtons(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Newtons(int)
  type: Method
  source:
    id: Newtons
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 475
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Force Newtons(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Force
    content.vb: Public Shared Function Newtons(v As Integer) As Force
  overload: H.Extensions.Unit.MetricUnitsExtensions.Newtons*
  nameWithType.vb: MetricUnitsExtensions.Newtons(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Newtons(Integer)
  name.vb: Newtons(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Newtons(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Newtons(System.Double)
  id: Newtons(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Newtons(double)
  nameWithType: MetricUnitsExtensions.Newtons(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Newtons(double)
  type: Method
  source:
    id: Newtons
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 476
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Force Newtons(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Force
    content.vb: Public Shared Function Newtons(v As Double) As Force
  overload: H.Extensions.Unit.MetricUnitsExtensions.Newtons*
  nameWithType.vb: MetricUnitsExtensions.Newtons(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Newtons(Double)
  name.vb: Newtons(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNewtons(H.Extensions.Unit.Force)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InNewtons(H.Extensions.Unit.Force)
  id: InNewtons(H.Extensions.Unit.Force)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InNewtons(Force)
  nameWithType: MetricUnitsExtensions.InNewtons(Force)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNewtons(H.Extensions.Unit.Force)
  type: Method
  source:
    id: InNewtons
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 480
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InNewtons(this Force v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Force
    return:
      type: System.Double
    content.vb: Public Shared Function InNewtons(v As Force) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InNewtons*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Joules(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Joules(System.Int32)
  id: Joules(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Joules(int)
  nameWithType: MetricUnitsExtensions.Joules(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Joules(int)
  type: Method
  source:
    id: Joules
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 484
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy Joules(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function Joules(v As Integer) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.Joules*
  nameWithType.vb: MetricUnitsExtensions.Joules(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Joules(Integer)
  name.vb: Joules(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Joules(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Joules(System.Double)
  id: Joules(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Joules(double)
  nameWithType: MetricUnitsExtensions.Joules(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Joules(double)
  type: Method
  source:
    id: Joules
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 485
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy Joules(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function Joules(v As Double) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.Joules*
  nameWithType.vb: MetricUnitsExtensions.Joules(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Joules(Double)
  name.vb: Joules(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InJoules(H.Extensions.Unit.Energy)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InJoules(H.Extensions.Unit.Energy)
  id: InJoules(H.Extensions.Unit.Energy)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InJoules(Energy)
  nameWithType: MetricUnitsExtensions.InJoules(Energy)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InJoules(H.Extensions.Unit.Energy)
  type: Method
  source:
    id: InJoules
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 489
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InJoules(this Energy v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Energy
    return:
      type: System.Double
    content.vb: Public Shared Function InJoules(v As Energy) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InJoules*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Watts(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Watts(System.Int32)
  id: Watts(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Watts(int)
  nameWithType: MetricUnitsExtensions.Watts(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Watts(int)
  type: Method
  source:
    id: Watts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 493
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Power Watts(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Power
    content.vb: Public Shared Function Watts(v As Integer) As Power
  overload: H.Extensions.Unit.MetricUnitsExtensions.Watts*
  nameWithType.vb: MetricUnitsExtensions.Watts(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Watts(Integer)
  name.vb: Watts(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Watts(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Watts(System.Double)
  id: Watts(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Watts(double)
  nameWithType: MetricUnitsExtensions.Watts(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Watts(double)
  type: Method
  source:
    id: Watts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 494
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Power Watts(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Power
    content.vb: Public Shared Function Watts(v As Double) As Power
  overload: H.Extensions.Unit.MetricUnitsExtensions.Watts*
  nameWithType.vb: MetricUnitsExtensions.Watts(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Watts(Double)
  name.vb: Watts(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InWatts(H.Extensions.Unit.Power)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InWatts(H.Extensions.Unit.Power)
  id: InWatts(H.Extensions.Unit.Power)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InWatts(Power)
  nameWithType: MetricUnitsExtensions.InWatts(Power)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InWatts(H.Extensions.Unit.Power)
  type: Method
  source:
    id: InWatts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 498
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InWatts(this Power v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Power
    return:
      type: System.Double
    content.vb: Public Shared Function InWatts(v As Power) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InWatts*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Pascals(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Pascals(System.Int32)
  id: Pascals(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Pascals(int)
  nameWithType: MetricUnitsExtensions.Pascals(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Pascals(int)
  type: Method
  source:
    id: Pascals
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 502
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Pressure Pascals(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Pressure
    content.vb: Public Shared Function Pascals(v As Integer) As Pressure
  overload: H.Extensions.Unit.MetricUnitsExtensions.Pascals*
  nameWithType.vb: MetricUnitsExtensions.Pascals(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Pascals(Integer)
  name.vb: Pascals(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Pascals(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Pascals(System.Double)
  id: Pascals(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Pascals(double)
  nameWithType: MetricUnitsExtensions.Pascals(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Pascals(double)
  type: Method
  source:
    id: Pascals
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 503
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Pressure Pascals(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Pressure
    content.vb: Public Shared Function Pascals(v As Double) As Pressure
  overload: H.Extensions.Unit.MetricUnitsExtensions.Pascals*
  nameWithType.vb: MetricUnitsExtensions.Pascals(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Pascals(Double)
  name.vb: Pascals(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPascals(H.Extensions.Unit.Pressure)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InPascals(H.Extensions.Unit.Pressure)
  id: InPascals(H.Extensions.Unit.Pressure)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InPascals(Pressure)
  nameWithType: MetricUnitsExtensions.InPascals(Pressure)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPascals(H.Extensions.Unit.Pressure)
  type: Method
  source:
    id: InPascals
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 507
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InPascals(this Pressure v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Pressure
    return:
      type: System.Double
    content.vb: Public Shared Function InPascals(v As Pressure) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InPascals*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Hertz(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Hertz(System.Int32)
  id: Hertz(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Hertz(int)
  nameWithType: MetricUnitsExtensions.Hertz(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Hertz(int)
  type: Method
  source:
    id: Hertz
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 511
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Frequency Hertz(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Frequency
    content.vb: Public Shared Function Hertz(v As Integer) As Frequency
  overload: H.Extensions.Unit.MetricUnitsExtensions.Hertz*
  nameWithType.vb: MetricUnitsExtensions.Hertz(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Hertz(Integer)
  name.vb: Hertz(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Hertz(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Hertz(System.Double)
  id: Hertz(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Hertz(double)
  nameWithType: MetricUnitsExtensions.Hertz(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Hertz(double)
  type: Method
  source:
    id: Hertz
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 512
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Frequency Hertz(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Frequency
    content.vb: Public Shared Function Hertz(v As Double) As Frequency
  overload: H.Extensions.Unit.MetricUnitsExtensions.Hertz*
  nameWithType.vb: MetricUnitsExtensions.Hertz(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Hertz(Double)
  name.vb: Hertz(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InHertz(H.Extensions.Unit.Frequency)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InHertz(H.Extensions.Unit.Frequency)
  id: InHertz(H.Extensions.Unit.Frequency)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InHertz(Frequency)
  nameWithType: MetricUnitsExtensions.InHertz(Frequency)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InHertz(H.Extensions.Unit.Frequency)
  type: Method
  source:
    id: InHertz
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 516
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InHertz(this Frequency v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Frequency
    return:
      type: System.Double
    content.vb: Public Shared Function InHertz(v As Frequency) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InHertz*
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(System.Int32)
  id: KilogramsPerSecond(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramsPerSecond(int)
  nameWithType: MetricUnitsExtensions.KilogramsPerSecond(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(int)
  type: Method
  source:
    id: KilogramsPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 520
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MassFlowRate KilogramsPerSecond(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.MassFlowRate
    content.vb: Public Shared Function KilogramsPerSecond(v As Integer) As MassFlowRate
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond*
  nameWithType.vb: MetricUnitsExtensions.KilogramsPerSecond(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(Integer)
  name.vb: KilogramsPerSecond(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(System.Double)
  id: KilogramsPerSecond(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramsPerSecond(double)
  nameWithType: MetricUnitsExtensions.KilogramsPerSecond(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(double)
  type: Method
  source:
    id: KilogramsPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 521
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MassFlowRate KilogramsPerSecond(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.MassFlowRate
    content.vb: Public Shared Function KilogramsPerSecond(v As Double) As MassFlowRate
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond*
  nameWithType.vb: MetricUnitsExtensions.KilogramsPerSecond(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond(Double)
  name.vb: KilogramsPerSecond(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerSecond(H.Extensions.Unit.MassFlowRate)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerSecond(H.Extensions.Unit.MassFlowRate)
  id: InKilogramsPerSecond(H.Extensions.Unit.MassFlowRate)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilogramsPerSecond(MassFlowRate)
  nameWithType: MetricUnitsExtensions.InKilogramsPerSecond(MassFlowRate)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerSecond(H.Extensions.Unit.MassFlowRate)
  type: Method
  source:
    id: InKilogramsPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 525
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilogramsPerSecond(this MassFlowRate v)
    parameters:
    - id: v
      type: H.Extensions.Unit.MassFlowRate
    return:
      type: System.Double
    content.vb: Public Shared Function InKilogramsPerSecond(v As MassFlowRate) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerSecond*
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(System.Int32)
  id: SquareMetresPerSecond(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareMetresPerSecond(int)
  nameWithType: MetricUnitsExtensions.SquareMetresPerSecond(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(int)
  type: Method
  source:
    id: SquareMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 529
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static KinematicViscosity SquareMetresPerSecond(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.KinematicViscosity
    content.vb: Public Shared Function SquareMetresPerSecond(v As Integer) As KinematicViscosity
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.SquareMetresPerSecond(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(Integer)
  name.vb: SquareMetresPerSecond(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(System.Double)
  id: SquareMetresPerSecond(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareMetresPerSecond(double)
  nameWithType: MetricUnitsExtensions.SquareMetresPerSecond(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(double)
  type: Method
  source:
    id: SquareMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 530
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static KinematicViscosity SquareMetresPerSecond(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.KinematicViscosity
    content.vb: Public Shared Function SquareMetresPerSecond(v As Double) As KinematicViscosity
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.SquareMetresPerSecond(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond(Double)
  name.vb: SquareMetresPerSecond(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InSquareMetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  id: InSquareMetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InSquareMetresPerSecond(KinematicViscosity)
  nameWithType: MetricUnitsExtensions.InSquareMetresPerSecond(KinematicViscosity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  type: Method
  source:
    id: InSquareMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 534
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InSquareMetresPerSecond(this KinematicViscosity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.KinematicViscosity
    return:
      type: System.Double
    content.vb: Public Shared Function InSquareMetresPerSecond(v As KinematicViscosity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetresPerSecond*
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(System.Int32)
  id: CubicMetresPerSecond(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CubicMetresPerSecond(int)
  nameWithType: MetricUnitsExtensions.CubicMetresPerSecond(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(int)
  type: Method
  source:
    id: CubicMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 538
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static VolumeFlowRate CubicMetresPerSecond(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.VolumeFlowRate
    content.vb: Public Shared Function CubicMetresPerSecond(v As Integer) As VolumeFlowRate
  overload: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.CubicMetresPerSecond(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(Integer)
  name.vb: CubicMetresPerSecond(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(System.Double)
  id: CubicMetresPerSecond(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CubicMetresPerSecond(double)
  nameWithType: MetricUnitsExtensions.CubicMetresPerSecond(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(double)
  type: Method
  source:
    id: CubicMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 539
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static VolumeFlowRate CubicMetresPerSecond(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.VolumeFlowRate
    content.vb: Public Shared Function CubicMetresPerSecond(v As Double) As VolumeFlowRate
  overload: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.CubicMetresPerSecond(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond(Double)
  name.vb: CubicMetresPerSecond(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InCubicMetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  id: InCubicMetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InCubicMetresPerSecond(VolumeFlowRate)
  nameWithType: MetricUnitsExtensions.InCubicMetresPerSecond(VolumeFlowRate)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  type: Method
  source:
    id: InCubicMetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 543
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InCubicMetresPerSecond(this VolumeFlowRate v)
    parameters:
    - id: v
      type: H.Extensions.Unit.VolumeFlowRate
    return:
      type: System.Double
    content.vb: Public Shared Function InCubicMetresPerSecond(v As VolumeFlowRate) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetresPerSecond*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Volts(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Volts(System.Int32)
  id: Volts(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Volts(int)
  nameWithType: MetricUnitsExtensions.Volts(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Volts(int)
  type: Method
  source:
    id: Volts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 547
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static ElectricPotential Volts(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.ElectricPotential
    content.vb: Public Shared Function Volts(v As Integer) As ElectricPotential
  overload: H.Extensions.Unit.MetricUnitsExtensions.Volts*
  nameWithType.vb: MetricUnitsExtensions.Volts(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Volts(Integer)
  name.vb: Volts(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Volts(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Volts(System.Double)
  id: Volts(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Volts(double)
  nameWithType: MetricUnitsExtensions.Volts(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Volts(double)
  type: Method
  source:
    id: Volts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 548
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static ElectricPotential Volts(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.ElectricPotential
    content.vb: Public Shared Function Volts(v As Double) As ElectricPotential
  overload: H.Extensions.Unit.MetricUnitsExtensions.Volts*
  nameWithType.vb: MetricUnitsExtensions.Volts(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Volts(Double)
  name.vb: Volts(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InVolts(H.Extensions.Unit.ElectricPotential)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InVolts(H.Extensions.Unit.ElectricPotential)
  id: InVolts(H.Extensions.Unit.ElectricPotential)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InVolts(ElectricPotential)
  nameWithType: MetricUnitsExtensions.InVolts(ElectricPotential)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InVolts(H.Extensions.Unit.ElectricPotential)
  type: Method
  source:
    id: InVolts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 552
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InVolts(this ElectricPotential v)
    parameters:
    - id: v
      type: H.Extensions.Unit.ElectricPotential
    return:
      type: System.Double
    content.vb: Public Shared Function InVolts(v As ElectricPotential) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InVolts*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Ohms(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Ohms(System.Int32)
  id: Ohms(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Ohms(int)
  nameWithType: MetricUnitsExtensions.Ohms(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Ohms(int)
  type: Method
  source:
    id: Ohms
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 556
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Resistance Ohms(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Resistance
    content.vb: Public Shared Function Ohms(v As Integer) As Resistance
  overload: H.Extensions.Unit.MetricUnitsExtensions.Ohms*
  nameWithType.vb: MetricUnitsExtensions.Ohms(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Ohms(Integer)
  name.vb: Ohms(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Ohms(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Ohms(System.Double)
  id: Ohms(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Ohms(double)
  nameWithType: MetricUnitsExtensions.Ohms(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Ohms(double)
  type: Method
  source:
    id: Ohms
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 557
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Resistance Ohms(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Resistance
    content.vb: Public Shared Function Ohms(v As Double) As Resistance
  overload: H.Extensions.Unit.MetricUnitsExtensions.Ohms*
  nameWithType.vb: MetricUnitsExtensions.Ohms(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Ohms(Double)
  name.vb: Ohms(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InOhms(H.Extensions.Unit.Resistance)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InOhms(H.Extensions.Unit.Resistance)
  id: InOhms(H.Extensions.Unit.Resistance)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InOhms(Resistance)
  nameWithType: MetricUnitsExtensions.InOhms(Resistance)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InOhms(H.Extensions.Unit.Resistance)
  type: Method
  source:
    id: InOhms
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 561
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InOhms(this Resistance v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Resistance
    return:
      type: System.Double
    content.vb: Public Shared Function InOhms(v As Resistance) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InOhms*
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(System.Int32)
  id: KilogramMetreSquared(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramMetreSquared(int)
  nameWithType: MetricUnitsExtensions.KilogramMetreSquared(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(int)
  type: Method
  source:
    id: KilogramMetreSquared
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 565
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MomentOfInertia KilogramMetreSquared(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.MomentOfInertia
    content.vb: Public Shared Function KilogramMetreSquared(v As Integer) As MomentOfInertia
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared*
  nameWithType.vb: MetricUnitsExtensions.KilogramMetreSquared(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(Integer)
  name.vb: KilogramMetreSquared(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(System.Double)
  id: KilogramMetreSquared(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramMetreSquared(double)
  nameWithType: MetricUnitsExtensions.KilogramMetreSquared(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(double)
  type: Method
  source:
    id: KilogramMetreSquared
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 566
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MomentOfInertia KilogramMetreSquared(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.MomentOfInertia
    content.vb: Public Shared Function KilogramMetreSquared(v As Double) As MomentOfInertia
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared*
  nameWithType.vb: MetricUnitsExtensions.KilogramMetreSquared(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared(Double)
  name.vb: KilogramMetreSquared(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquared(H.Extensions.Unit.MomentOfInertia)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquared(H.Extensions.Unit.MomentOfInertia)
  id: InKilogramMetreSquared(H.Extensions.Unit.MomentOfInertia)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilogramMetreSquared(MomentOfInertia)
  nameWithType: MetricUnitsExtensions.InKilogramMetreSquared(MomentOfInertia)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquared(H.Extensions.Unit.MomentOfInertia)
  type: Method
  source:
    id: InKilogramMetreSquared
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 570
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilogramMetreSquared(this MomentOfInertia v)
    parameters:
    - id: v
      type: H.Extensions.Unit.MomentOfInertia
    return:
      type: System.Double
    content.vb: Public Shared Function InKilogramMetreSquared(v As MomentOfInertia) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquared*
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(System.Int32)
  id: KilogramMetreSquaredPerSecond(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramMetreSquaredPerSecond(int)
  nameWithType: MetricUnitsExtensions.KilogramMetreSquaredPerSecond(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(int)
  type: Method
  source:
    id: KilogramMetreSquaredPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 574
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static AngularMomentum KilogramMetreSquaredPerSecond(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.AngularMomentum
    content.vb: Public Shared Function KilogramMetreSquaredPerSecond(v As Integer) As AngularMomentum
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond*
  nameWithType.vb: MetricUnitsExtensions.KilogramMetreSquaredPerSecond(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(Integer)
  name.vb: KilogramMetreSquaredPerSecond(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(System.Double)
  id: KilogramMetreSquaredPerSecond(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramMetreSquaredPerSecond(double)
  nameWithType: MetricUnitsExtensions.KilogramMetreSquaredPerSecond(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(double)
  type: Method
  source:
    id: KilogramMetreSquaredPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 575
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static AngularMomentum KilogramMetreSquaredPerSecond(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.AngularMomentum
    content.vb: Public Shared Function KilogramMetreSquaredPerSecond(v As Double) As AngularMomentum
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond*
  nameWithType.vb: MetricUnitsExtensions.KilogramMetreSquaredPerSecond(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond(Double)
  name.vb: KilogramMetreSquaredPerSecond(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquaredPerSecond(H.Extensions.Unit.AngularMomentum)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquaredPerSecond(H.Extensions.Unit.AngularMomentum)
  id: InKilogramMetreSquaredPerSecond(H.Extensions.Unit.AngularMomentum)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilogramMetreSquaredPerSecond(AngularMomentum)
  nameWithType: MetricUnitsExtensions.InKilogramMetreSquaredPerSecond(AngularMomentum)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquaredPerSecond(H.Extensions.Unit.AngularMomentum)
  type: Method
  source:
    id: InKilogramMetreSquaredPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 579
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilogramMetreSquaredPerSecond(this AngularMomentum v)
    parameters:
    - id: v
      type: H.Extensions.Unit.AngularMomentum
    return:
      type: System.Double
    content.vb: Public Shared Function InKilogramMetreSquaredPerSecond(v As AngularMomentum) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquaredPerSecond*
- uid: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(System.Int32)
  id: NewtonsPerMetre(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: NewtonsPerMetre(int)
  nameWithType: MetricUnitsExtensions.NewtonsPerMetre(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(int)
  type: Method
  source:
    id: NewtonsPerMetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 583
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SurfaceTension NewtonsPerMetre(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.SurfaceTension
    content.vb: Public Shared Function NewtonsPerMetre(v As Integer) As SurfaceTension
  overload: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre*
  nameWithType.vb: MetricUnitsExtensions.NewtonsPerMetre(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(Integer)
  name.vb: NewtonsPerMetre(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(System.Double)
  id: NewtonsPerMetre(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: NewtonsPerMetre(double)
  nameWithType: MetricUnitsExtensions.NewtonsPerMetre(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(double)
  type: Method
  source:
    id: NewtonsPerMetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 584
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SurfaceTension NewtonsPerMetre(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.SurfaceTension
    content.vb: Public Shared Function NewtonsPerMetre(v As Double) As SurfaceTension
  overload: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre*
  nameWithType.vb: MetricUnitsExtensions.NewtonsPerMetre(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre(Double)
  name.vb: NewtonsPerMetre(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNewtonsPerMetre(H.Extensions.Unit.SurfaceTension)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InNewtonsPerMetre(H.Extensions.Unit.SurfaceTension)
  id: InNewtonsPerMetre(H.Extensions.Unit.SurfaceTension)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InNewtonsPerMetre(SurfaceTension)
  nameWithType: MetricUnitsExtensions.InNewtonsPerMetre(SurfaceTension)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNewtonsPerMetre(H.Extensions.Unit.SurfaceTension)
  type: Method
  source:
    id: InNewtonsPerMetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 588
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InNewtonsPerMetre(this SurfaceTension v)
    parameters:
    - id: v
      type: H.Extensions.Unit.SurfaceTension
    return:
      type: System.Double
    content.vb: Public Shared Function InNewtonsPerMetre(v As SurfaceTension) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InNewtonsPerMetre*
- uid: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(System.Int32)
  id: PascalSeconds(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: PascalSeconds(int)
  nameWithType: MetricUnitsExtensions.PascalSeconds(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(int)
  type: Method
  source:
    id: PascalSeconds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 592
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static CoefficientOfViscosity PascalSeconds(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.CoefficientOfViscosity
    content.vb: Public Shared Function PascalSeconds(v As Integer) As CoefficientOfViscosity
  overload: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds*
  nameWithType.vb: MetricUnitsExtensions.PascalSeconds(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(Integer)
  name.vb: PascalSeconds(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(System.Double)
  id: PascalSeconds(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: PascalSeconds(double)
  nameWithType: MetricUnitsExtensions.PascalSeconds(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(double)
  type: Method
  source:
    id: PascalSeconds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 593
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static CoefficientOfViscosity PascalSeconds(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.CoefficientOfViscosity
    content.vb: Public Shared Function PascalSeconds(v As Double) As CoefficientOfViscosity
  overload: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds*
  nameWithType.vb: MetricUnitsExtensions.PascalSeconds(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds(Double)
  name.vb: PascalSeconds(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPascalSeconds(H.Extensions.Unit.CoefficientOfViscosity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InPascalSeconds(H.Extensions.Unit.CoefficientOfViscosity)
  id: InPascalSeconds(H.Extensions.Unit.CoefficientOfViscosity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InPascalSeconds(CoefficientOfViscosity)
  nameWithType: MetricUnitsExtensions.InPascalSeconds(CoefficientOfViscosity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPascalSeconds(H.Extensions.Unit.CoefficientOfViscosity)
  type: Method
  source:
    id: InPascalSeconds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 597
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InPascalSeconds(this CoefficientOfViscosity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.CoefficientOfViscosity
    return:
      type: System.Double
    content.vb: Public Shared Function InPascalSeconds(v As CoefficientOfViscosity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InPascalSeconds*
- uid: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(System.Int32)
  id: PerDegreeKelvin(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: PerDegreeKelvin(int)
  nameWithType: MetricUnitsExtensions.PerDegreeKelvin(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(int)
  type: Method
  source:
    id: PerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 601
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static CoefficientOfThermalExpansion PerDegreeKelvin(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.CoefficientOfThermalExpansion
    content.vb: Public Shared Function PerDegreeKelvin(v As Integer) As CoefficientOfThermalExpansion
  overload: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin*
  nameWithType.vb: MetricUnitsExtensions.PerDegreeKelvin(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(Integer)
  name.vb: PerDegreeKelvin(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(System.Double)
  id: PerDegreeKelvin(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: PerDegreeKelvin(double)
  nameWithType: MetricUnitsExtensions.PerDegreeKelvin(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(double)
  type: Method
  source:
    id: PerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 602
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static CoefficientOfThermalExpansion PerDegreeKelvin(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.CoefficientOfThermalExpansion
    content.vb: Public Shared Function PerDegreeKelvin(v As Double) As CoefficientOfThermalExpansion
  overload: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin*
  nameWithType.vb: MetricUnitsExtensions.PerDegreeKelvin(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin(Double)
  name.vb: PerDegreeKelvin(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPerDegreeKelvin(H.Extensions.Unit.CoefficientOfThermalExpansion)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InPerDegreeKelvin(H.Extensions.Unit.CoefficientOfThermalExpansion)
  id: InPerDegreeKelvin(H.Extensions.Unit.CoefficientOfThermalExpansion)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InPerDegreeKelvin(CoefficientOfThermalExpansion)
  nameWithType: MetricUnitsExtensions.InPerDegreeKelvin(CoefficientOfThermalExpansion)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPerDegreeKelvin(H.Extensions.Unit.CoefficientOfThermalExpansion)
  type: Method
  source:
    id: InPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 606
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InPerDegreeKelvin(this CoefficientOfThermalExpansion v)
    parameters:
    - id: v
      type: H.Extensions.Unit.CoefficientOfThermalExpansion
    return:
      type: System.Double
    content.vb: Public Shared Function InPerDegreeKelvin(v As CoefficientOfThermalExpansion) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InPerDegreeKelvin*
- uid: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(System.Int32)
  id: JoulesPerDegreeKelvin(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: JoulesPerDegreeKelvin(int)
  nameWithType: MetricUnitsExtensions.JoulesPerDegreeKelvin(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(int)
  type: Method
  source:
    id: JoulesPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 610
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static ThermalCapacity JoulesPerDegreeKelvin(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.ThermalCapacity
    content.vb: Public Shared Function JoulesPerDegreeKelvin(v As Integer) As ThermalCapacity
  overload: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin*
  nameWithType.vb: MetricUnitsExtensions.JoulesPerDegreeKelvin(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(Integer)
  name.vb: JoulesPerDegreeKelvin(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(System.Double)
  id: JoulesPerDegreeKelvin(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: JoulesPerDegreeKelvin(double)
  nameWithType: MetricUnitsExtensions.JoulesPerDegreeKelvin(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(double)
  type: Method
  source:
    id: JoulesPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 611
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static ThermalCapacity JoulesPerDegreeKelvin(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.ThermalCapacity
    content.vb: Public Shared Function JoulesPerDegreeKelvin(v As Double) As ThermalCapacity
  overload: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin*
  nameWithType.vb: MetricUnitsExtensions.JoulesPerDegreeKelvin(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin(Double)
  name.vb: JoulesPerDegreeKelvin(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  id: InJoulesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InJoulesPerDegreeKelvin(ThermalCapacity)
  nameWithType: MetricUnitsExtensions.InJoulesPerDegreeKelvin(ThermalCapacity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  type: Method
  source:
    id: InJoulesPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 615
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InJoulesPerDegreeKelvin(this ThermalCapacity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.ThermalCapacity
    return:
      type: System.Double
    content.vb: Public Shared Function InJoulesPerDegreeKelvin(v As ThermalCapacity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvin*
- uid: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(System.Int32)
  id: JoulesPerKilogramPerDegreeKelvin(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: JoulesPerKilogramPerDegreeKelvin(int)
  nameWithType: MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(int)
  type: Method
  source:
    id: JoulesPerKilogramPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 619
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SpecificHeat JoulesPerKilogramPerDegreeKelvin(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.SpecificHeat
    content.vb: Public Shared Function JoulesPerKilogramPerDegreeKelvin(v As Integer) As SpecificHeat
  overload: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin*
  nameWithType.vb: MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(Integer)
  name.vb: JoulesPerKilogramPerDegreeKelvin(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(System.Double)
  id: JoulesPerKilogramPerDegreeKelvin(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: JoulesPerKilogramPerDegreeKelvin(double)
  nameWithType: MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(double)
  type: Method
  source:
    id: JoulesPerKilogramPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 620
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SpecificHeat JoulesPerKilogramPerDegreeKelvin(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.SpecificHeat
    content.vb: Public Shared Function JoulesPerKilogramPerDegreeKelvin(v As Double) As SpecificHeat
  overload: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin*
  nameWithType.vb: MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin(Double)
  name.vb: JoulesPerKilogramPerDegreeKelvin(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin(H.Extensions.Unit.SpecificHeat)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin(H.Extensions.Unit.SpecificHeat)
  id: InJoulesPerKilogramPerDegreeKelvin(H.Extensions.Unit.SpecificHeat)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InJoulesPerKilogramPerDegreeKelvin(SpecificHeat)
  nameWithType: MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin(SpecificHeat)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin(H.Extensions.Unit.SpecificHeat)
  type: Method
  source:
    id: InJoulesPerKilogramPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 624
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InJoulesPerKilogramPerDegreeKelvin(this SpecificHeat v)
    parameters:
    - id: v
      type: H.Extensions.Unit.SpecificHeat
    return:
      type: System.Double
    content.vb: Public Shared Function InJoulesPerKilogramPerDegreeKelvin(v As SpecificHeat) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin*
- uid: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(System.Int32)
  id: JoulesPerDegreeKelvinPerMole(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: JoulesPerDegreeKelvinPerMole(int)
  nameWithType: MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(int)
  type: Method
  source:
    id: JoulesPerDegreeKelvinPerMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 628
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarSpecificHeat JoulesPerDegreeKelvinPerMole(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.MolarSpecificHeat
    content.vb: Public Shared Function JoulesPerDegreeKelvinPerMole(v As Integer) As MolarSpecificHeat
  overload: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole*
  nameWithType.vb: MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(Integer)
  name.vb: JoulesPerDegreeKelvinPerMole(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(System.Double)
  id: JoulesPerDegreeKelvinPerMole(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: JoulesPerDegreeKelvinPerMole(double)
  nameWithType: MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(double)
  type: Method
  source:
    id: JoulesPerDegreeKelvinPerMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 629
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarSpecificHeat JoulesPerDegreeKelvinPerMole(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.MolarSpecificHeat
    content.vb: Public Shared Function JoulesPerDegreeKelvinPerMole(v As Double) As MolarSpecificHeat
  overload: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole*
  nameWithType.vb: MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole(Double)
  name.vb: JoulesPerDegreeKelvinPerMole(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole(H.Extensions.Unit.MolarSpecificHeat)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole(H.Extensions.Unit.MolarSpecificHeat)
  id: InJoulesPerDegreeKelvinPerMole(H.Extensions.Unit.MolarSpecificHeat)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InJoulesPerDegreeKelvinPerMole(MolarSpecificHeat)
  nameWithType: MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole(MolarSpecificHeat)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole(H.Extensions.Unit.MolarSpecificHeat)
  type: Method
  source:
    id: InJoulesPerDegreeKelvinPerMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 633
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InJoulesPerDegreeKelvinPerMole(this MolarSpecificHeat v)
    parameters:
    - id: v
      type: H.Extensions.Unit.MolarSpecificHeat
    return:
      type: System.Double
    content.vb: Public Shared Function InJoulesPerDegreeKelvinPerMole(v As MolarSpecificHeat) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole*
- uid: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(System.Int32)
  id: WattsPerMetrePerDegree(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: WattsPerMetrePerDegree(int)
  nameWithType: MetricUnitsExtensions.WattsPerMetrePerDegree(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(int)
  type: Method
  source:
    id: WattsPerMetrePerDegree
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 637
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static ThermalConductivity WattsPerMetrePerDegree(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.ThermalConductivity
    content.vb: Public Shared Function WattsPerMetrePerDegree(v As Integer) As ThermalConductivity
  overload: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree*
  nameWithType.vb: MetricUnitsExtensions.WattsPerMetrePerDegree(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(Integer)
  name.vb: WattsPerMetrePerDegree(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(System.Double)
  id: WattsPerMetrePerDegree(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: WattsPerMetrePerDegree(double)
  nameWithType: MetricUnitsExtensions.WattsPerMetrePerDegree(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(double)
  type: Method
  source:
    id: WattsPerMetrePerDegree
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 638
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static ThermalConductivity WattsPerMetrePerDegree(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.ThermalConductivity
    content.vb: Public Shared Function WattsPerMetrePerDegree(v As Double) As ThermalConductivity
  overload: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree*
  nameWithType.vb: MetricUnitsExtensions.WattsPerMetrePerDegree(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree(Double)
  name.vb: WattsPerMetrePerDegree(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InWattsPerMetrePerDegree(H.Extensions.Unit.ThermalConductivity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InWattsPerMetrePerDegree(H.Extensions.Unit.ThermalConductivity)
  id: InWattsPerMetrePerDegree(H.Extensions.Unit.ThermalConductivity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InWattsPerMetrePerDegree(ThermalConductivity)
  nameWithType: MetricUnitsExtensions.InWattsPerMetrePerDegree(ThermalConductivity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InWattsPerMetrePerDegree(H.Extensions.Unit.ThermalConductivity)
  type: Method
  source:
    id: InWattsPerMetrePerDegree
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 642
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InWattsPerMetrePerDegree(this ThermalConductivity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.ThermalConductivity
    return:
      type: System.Double
    content.vb: Public Shared Function InWattsPerMetrePerDegree(v As ThermalConductivity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InWattsPerMetrePerDegree*
- uid: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(System.Int32)
  id: OhmMetres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: OhmMetres(int)
  nameWithType: MetricUnitsExtensions.OhmMetres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(int)
  type: Method
  source:
    id: OhmMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 646
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Resistivity OhmMetres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Resistivity
    content.vb: Public Shared Function OhmMetres(v As Integer) As Resistivity
  overload: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres*
  nameWithType.vb: MetricUnitsExtensions.OhmMetres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(Integer)
  name.vb: OhmMetres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(System.Double)
  id: OhmMetres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: OhmMetres(double)
  nameWithType: MetricUnitsExtensions.OhmMetres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(double)
  type: Method
  source:
    id: OhmMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 647
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Resistivity OhmMetres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Resistivity
    content.vb: Public Shared Function OhmMetres(v As Double) As Resistivity
  overload: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres*
  nameWithType.vb: MetricUnitsExtensions.OhmMetres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres(Double)
  name.vb: OhmMetres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InOhmMetres(H.Extensions.Unit.Resistivity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InOhmMetres(H.Extensions.Unit.Resistivity)
  id: InOhmMetres(H.Extensions.Unit.Resistivity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InOhmMetres(Resistivity)
  nameWithType: MetricUnitsExtensions.InOhmMetres(Resistivity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InOhmMetres(H.Extensions.Unit.Resistivity)
  type: Method
  source:
    id: InOhmMetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 651
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InOhmMetres(this Resistivity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Resistivity
    return:
      type: System.Double
    content.vb: Public Shared Function InOhmMetres(v As Resistivity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InOhmMetres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Lumen(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Lumen(System.Int32)
  id: Lumen(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Lumen(int)
  nameWithType: MetricUnitsExtensions.Lumen(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Lumen(int)
  type: Method
  source:
    id: Lumen
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 655
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static LuminousFlux Lumen(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.LuminousFlux
    content.vb: Public Shared Function Lumen(v As Integer) As LuminousFlux
  overload: H.Extensions.Unit.MetricUnitsExtensions.Lumen*
  nameWithType.vb: MetricUnitsExtensions.Lumen(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Lumen(Integer)
  name.vb: Lumen(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Lumen(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Lumen(System.Double)
  id: Lumen(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Lumen(double)
  nameWithType: MetricUnitsExtensions.Lumen(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Lumen(double)
  type: Method
  source:
    id: Lumen
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 656
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static LuminousFlux Lumen(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.LuminousFlux
    content.vb: Public Shared Function Lumen(v As Double) As LuminousFlux
  overload: H.Extensions.Unit.MetricUnitsExtensions.Lumen*
  nameWithType.vb: MetricUnitsExtensions.Lumen(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Lumen(Double)
  name.vb: Lumen(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InLumen(H.Extensions.Unit.LuminousFlux)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InLumen(H.Extensions.Unit.LuminousFlux)
  id: InLumen(H.Extensions.Unit.LuminousFlux)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InLumen(LuminousFlux)
  nameWithType: MetricUnitsExtensions.InLumen(LuminousFlux)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InLumen(H.Extensions.Unit.LuminousFlux)
  type: Method
  source:
    id: InLumen
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 660
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InLumen(this LuminousFlux v)
    parameters:
    - id: v
      type: H.Extensions.Unit.LuminousFlux
    return:
      type: System.Double
    content.vb: Public Shared Function InLumen(v As LuminousFlux) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InLumen*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Lux(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Lux(System.Int32)
  id: Lux(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Lux(int)
  nameWithType: MetricUnitsExtensions.Lux(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Lux(int)
  type: Method
  source:
    id: Lux
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 664
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Illuminance Lux(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Illuminance
    content.vb: Public Shared Function Lux(v As Integer) As Illuminance
  overload: H.Extensions.Unit.MetricUnitsExtensions.Lux*
  nameWithType.vb: MetricUnitsExtensions.Lux(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Lux(Integer)
  name.vb: Lux(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Lux(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Lux(System.Double)
  id: Lux(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Lux(double)
  nameWithType: MetricUnitsExtensions.Lux(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Lux(double)
  type: Method
  source:
    id: Lux
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 665
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Illuminance Lux(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Illuminance
    content.vb: Public Shared Function Lux(v As Double) As Illuminance
  overload: H.Extensions.Unit.MetricUnitsExtensions.Lux*
  nameWithType.vb: MetricUnitsExtensions.Lux(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Lux(Double)
  name.vb: Lux(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InLux(H.Extensions.Unit.Illuminance)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InLux(H.Extensions.Unit.Illuminance)
  id: InLux(H.Extensions.Unit.Illuminance)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InLux(Illuminance)
  nameWithType: MetricUnitsExtensions.InLux(Illuminance)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InLux(H.Extensions.Unit.Illuminance)
  type: Method
  source:
    id: InLux
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 669
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InLux(this Illuminance v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Illuminance
    return:
      type: System.Double
    content.vb: Public Shared Function InLux(v As Illuminance) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InLux*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Percent(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Percent(System.Int32)
  id: Percent(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Percent(int)
  nameWithType: MetricUnitsExtensions.Percent(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Percent(int)
  type: Method
  source:
    id: Percent
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 673
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Percent(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Percent(v As Integer) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Percent*
  nameWithType.vb: MetricUnitsExtensions.Percent(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Percent(Integer)
  name.vb: Percent(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Percent(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Percent(System.Double)
  id: Percent(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Percent(double)
  nameWithType: MetricUnitsExtensions.Percent(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Percent(double)
  type: Method
  source:
    id: Percent
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 674
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Percent(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Percent(v As Double) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Percent*
  nameWithType.vb: MetricUnitsExtensions.Percent(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Percent(Double)
  name.vb: Percent(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPercent(H.Extensions.Unit.Dimensionless)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InPercent(H.Extensions.Unit.Dimensionless)
  id: InPercent(H.Extensions.Unit.Dimensionless)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InPercent(Dimensionless)
  nameWithType: MetricUnitsExtensions.InPercent(Dimensionless)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPercent(H.Extensions.Unit.Dimensionless)
  type: Method
  source:
    id: InPercent
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 678
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InPercent(this Dimensionless v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Dimensionless
    return:
      type: System.Double
    content.vb: Public Shared Function InPercent(v As Dimensionless) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InPercent*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Dozen(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Dozen(System.Int32)
  id: Dozen(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Dozen(int)
  nameWithType: MetricUnitsExtensions.Dozen(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Dozen(int)
  type: Method
  source:
    id: Dozen
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 682
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Dozen(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Dozen(v As Integer) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Dozen*
  nameWithType.vb: MetricUnitsExtensions.Dozen(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Dozen(Integer)
  name.vb: Dozen(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Dozen(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Dozen(System.Double)
  id: Dozen(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Dozen(double)
  nameWithType: MetricUnitsExtensions.Dozen(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Dozen(double)
  type: Method
  source:
    id: Dozen
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 683
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Dozen(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Dozen(v As Double) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Dozen*
  nameWithType.vb: MetricUnitsExtensions.Dozen(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Dozen(Double)
  name.vb: Dozen(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDozen(H.Extensions.Unit.Dimensionless)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InDozen(H.Extensions.Unit.Dimensionless)
  id: InDozen(H.Extensions.Unit.Dimensionless)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InDozen(Dimensionless)
  nameWithType: MetricUnitsExtensions.InDozen(Dimensionless)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDozen(H.Extensions.Unit.Dimensionless)
  type: Method
  source:
    id: InDozen
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 687
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InDozen(this Dimensionless v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Dimensionless
    return:
      type: System.Double
    content.vb: Public Shared Function InDozen(v As Dimensionless) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InDozen*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Hundreds(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Hundreds(System.Int32)
  id: Hundreds(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Hundreds(int)
  nameWithType: MetricUnitsExtensions.Hundreds(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Hundreds(int)
  type: Method
  source:
    id: Hundreds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 691
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Hundreds(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Hundreds(v As Integer) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Hundreds*
  nameWithType.vb: MetricUnitsExtensions.Hundreds(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Hundreds(Integer)
  name.vb: Hundreds(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Hundreds(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Hundreds(System.Double)
  id: Hundreds(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Hundreds(double)
  nameWithType: MetricUnitsExtensions.Hundreds(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Hundreds(double)
  type: Method
  source:
    id: Hundreds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 692
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Hundreds(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Hundreds(v As Double) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Hundreds*
  nameWithType.vb: MetricUnitsExtensions.Hundreds(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Hundreds(Double)
  name.vb: Hundreds(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InHundreds(H.Extensions.Unit.Dimensionless)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InHundreds(H.Extensions.Unit.Dimensionless)
  id: InHundreds(H.Extensions.Unit.Dimensionless)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InHundreds(Dimensionless)
  nameWithType: MetricUnitsExtensions.InHundreds(Dimensionless)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InHundreds(H.Extensions.Unit.Dimensionless)
  type: Method
  source:
    id: InHundreds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 696
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InHundreds(this Dimensionless v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Dimensionless
    return:
      type: System.Double
    content.vb: Public Shared Function InHundreds(v As Dimensionless) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InHundreds*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Thousands(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Thousands(System.Int32)
  id: Thousands(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Thousands(int)
  nameWithType: MetricUnitsExtensions.Thousands(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Thousands(int)
  type: Method
  source:
    id: Thousands
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 700
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Thousands(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Thousands(v As Integer) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Thousands*
  nameWithType.vb: MetricUnitsExtensions.Thousands(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Thousands(Integer)
  name.vb: Thousands(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Thousands(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Thousands(System.Double)
  id: Thousands(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Thousands(double)
  nameWithType: MetricUnitsExtensions.Thousands(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Thousands(double)
  type: Method
  source:
    id: Thousands
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 701
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Thousands(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Thousands(v As Double) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Thousands*
  nameWithType.vb: MetricUnitsExtensions.Thousands(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Thousands(Double)
  name.vb: Thousands(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InThousands(H.Extensions.Unit.Dimensionless)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InThousands(H.Extensions.Unit.Dimensionless)
  id: InThousands(H.Extensions.Unit.Dimensionless)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InThousands(Dimensionless)
  nameWithType: MetricUnitsExtensions.InThousands(Dimensionless)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InThousands(H.Extensions.Unit.Dimensionless)
  type: Method
  source:
    id: InThousands
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 705
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InThousands(this Dimensionless v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Dimensionless
    return:
      type: System.Double
    content.vb: Public Shared Function InThousands(v As Dimensionless) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InThousands*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Millions(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Millions(System.Int32)
  id: Millions(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Millions(int)
  nameWithType: MetricUnitsExtensions.Millions(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Millions(int)
  type: Method
  source:
    id: Millions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 709
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Millions(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Millions(v As Integer) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Millions*
  nameWithType.vb: MetricUnitsExtensions.Millions(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Millions(Integer)
  name.vb: Millions(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Millions(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Millions(System.Double)
  id: Millions(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Millions(double)
  nameWithType: MetricUnitsExtensions.Millions(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Millions(double)
  type: Method
  source:
    id: Millions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 710
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Millions(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Millions(v As Double) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Millions*
  nameWithType.vb: MetricUnitsExtensions.Millions(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Millions(Double)
  name.vb: Millions(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMillions(H.Extensions.Unit.Dimensionless)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMillions(H.Extensions.Unit.Dimensionless)
  id: InMillions(H.Extensions.Unit.Dimensionless)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMillions(Dimensionless)
  nameWithType: MetricUnitsExtensions.InMillions(Dimensionless)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMillions(H.Extensions.Unit.Dimensionless)
  type: Method
  source:
    id: InMillions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 714
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMillions(this Dimensionless v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Dimensionless
    return:
      type: System.Double
    content.vb: Public Shared Function InMillions(v As Dimensionless) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMillions*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Billions(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Billions(System.Int32)
  id: Billions(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Billions(int)
  nameWithType: MetricUnitsExtensions.Billions(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Billions(int)
  type: Method
  source:
    id: Billions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 718
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Billions(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Billions(v As Integer) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Billions*
  nameWithType.vb: MetricUnitsExtensions.Billions(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Billions(Integer)
  name.vb: Billions(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Billions(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Billions(System.Double)
  id: Billions(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Billions(double)
  nameWithType: MetricUnitsExtensions.Billions(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Billions(double)
  type: Method
  source:
    id: Billions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 719
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Billions(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Billions(v As Double) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Billions*
  nameWithType.vb: MetricUnitsExtensions.Billions(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Billions(Double)
  name.vb: Billions(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InBillions(H.Extensions.Unit.Dimensionless)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InBillions(H.Extensions.Unit.Dimensionless)
  id: InBillions(H.Extensions.Unit.Dimensionless)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InBillions(Dimensionless)
  nameWithType: MetricUnitsExtensions.InBillions(Dimensionless)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InBillions(H.Extensions.Unit.Dimensionless)
  type: Method
  source:
    id: InBillions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 723
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InBillions(this Dimensionless v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Dimensionless
    return:
      type: System.Double
    content.vb: Public Shared Function InBillions(v As Dimensionless) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InBillions*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Trillions(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Trillions(System.Int32)
  id: Trillions(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Trillions(int)
  nameWithType: MetricUnitsExtensions.Trillions(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Trillions(int)
  type: Method
  source:
    id: Trillions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 727
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Trillions(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Trillions(v As Integer) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Trillions*
  nameWithType.vb: MetricUnitsExtensions.Trillions(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Trillions(Integer)
  name.vb: Trillions(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Trillions(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Trillions(System.Double)
  id: Trillions(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Trillions(double)
  nameWithType: MetricUnitsExtensions.Trillions(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Trillions(double)
  type: Method
  source:
    id: Trillions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 728
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Dimensionless Trillions(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Function Trillions(v As Double) As Dimensionless
  overload: H.Extensions.Unit.MetricUnitsExtensions.Trillions*
  nameWithType.vb: MetricUnitsExtensions.Trillions(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Trillions(Double)
  name.vb: Trillions(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InTrillions(H.Extensions.Unit.Dimensionless)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InTrillions(H.Extensions.Unit.Dimensionless)
  id: InTrillions(H.Extensions.Unit.Dimensionless)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InTrillions(Dimensionless)
  nameWithType: MetricUnitsExtensions.InTrillions(Dimensionless)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InTrillions(H.Extensions.Unit.Dimensionless)
  type: Method
  source:
    id: InTrillions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 732
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InTrillions(this Dimensionless v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Dimensionless
    return:
      type: System.Double
    content.vb: Public Shared Function InTrillions(v As Dimensionless) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InTrillions*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Grams(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Grams(System.Int32)
  id: Grams(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Grams(int)
  nameWithType: MetricUnitsExtensions.Grams(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Grams(int)
  type: Method
  source:
    id: Grams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 736
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass Grams(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function Grams(v As Integer) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.Grams*
  nameWithType.vb: MetricUnitsExtensions.Grams(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Grams(Integer)
  name.vb: Grams(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Grams(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Grams(System.Double)
  id: Grams(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Grams(double)
  nameWithType: MetricUnitsExtensions.Grams(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Grams(double)
  type: Method
  source:
    id: Grams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 737
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass Grams(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function Grams(v As Double) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.Grams*
  nameWithType.vb: MetricUnitsExtensions.Grams(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Grams(Double)
  name.vb: Grams(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGrams(H.Extensions.Unit.Mass)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InGrams(H.Extensions.Unit.Mass)
  id: InGrams(H.Extensions.Unit.Mass)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InGrams(Mass)
  nameWithType: MetricUnitsExtensions.InGrams(Mass)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGrams(H.Extensions.Unit.Mass)
  type: Method
  source:
    id: InGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 741
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InGrams(this Mass v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Mass
    return:
      type: System.Double
    content.vb: Public Shared Function InGrams(v As Mass) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InGrams*
- uid: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(System.Int32)
  id: MilliGrams(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MilliGrams(int)
  nameWithType: MetricUnitsExtensions.MilliGrams(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(int)
  type: Method
  source:
    id: MilliGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 745
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass MilliGrams(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function MilliGrams(v As Integer) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams*
  nameWithType.vb: MetricUnitsExtensions.MilliGrams(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(Integer)
  name.vb: MilliGrams(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(System.Double)
  id: MilliGrams(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MilliGrams(double)
  nameWithType: MetricUnitsExtensions.MilliGrams(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(double)
  type: Method
  source:
    id: MilliGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 746
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass MilliGrams(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function MilliGrams(v As Double) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams*
  nameWithType.vb: MetricUnitsExtensions.MilliGrams(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams(Double)
  name.vb: MilliGrams(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMilliGrams(H.Extensions.Unit.Mass)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMilliGrams(H.Extensions.Unit.Mass)
  id: InMilliGrams(H.Extensions.Unit.Mass)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMilliGrams(Mass)
  nameWithType: MetricUnitsExtensions.InMilliGrams(Mass)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMilliGrams(H.Extensions.Unit.Mass)
  type: Method
  source:
    id: InMilliGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 750
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMilliGrams(this Mass v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Mass
    return:
      type: System.Double
    content.vb: Public Shared Function InMilliGrams(v As Mass) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMilliGrams*
- uid: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(System.Int32)
  id: MicroGrams(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MicroGrams(int)
  nameWithType: MetricUnitsExtensions.MicroGrams(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(int)
  type: Method
  source:
    id: MicroGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 754
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass MicroGrams(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function MicroGrams(v As Integer) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams*
  nameWithType.vb: MetricUnitsExtensions.MicroGrams(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(Integer)
  name.vb: MicroGrams(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(System.Double)
  id: MicroGrams(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MicroGrams(double)
  nameWithType: MetricUnitsExtensions.MicroGrams(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(double)
  type: Method
  source:
    id: MicroGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 755
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass MicroGrams(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function MicroGrams(v As Double) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams*
  nameWithType.vb: MetricUnitsExtensions.MicroGrams(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams(Double)
  name.vb: MicroGrams(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMicroGrams(H.Extensions.Unit.Mass)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMicroGrams(H.Extensions.Unit.Mass)
  id: InMicroGrams(H.Extensions.Unit.Mass)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMicroGrams(Mass)
  nameWithType: MetricUnitsExtensions.InMicroGrams(Mass)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMicroGrams(H.Extensions.Unit.Mass)
  type: Method
  source:
    id: InMicroGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 759
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMicroGrams(this Mass v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Mass
    return:
      type: System.Double
    content.vb: Public Shared Function InMicroGrams(v As Mass) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMicroGrams*
- uid: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(System.Int32)
  id: NanoGrams(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: NanoGrams(int)
  nameWithType: MetricUnitsExtensions.NanoGrams(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(int)
  type: Method
  source:
    id: NanoGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 763
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass NanoGrams(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function NanoGrams(v As Integer) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams*
  nameWithType.vb: MetricUnitsExtensions.NanoGrams(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(Integer)
  name.vb: NanoGrams(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(System.Double)
  id: NanoGrams(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: NanoGrams(double)
  nameWithType: MetricUnitsExtensions.NanoGrams(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(double)
  type: Method
  source:
    id: NanoGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 764
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass NanoGrams(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function NanoGrams(v As Double) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams*
  nameWithType.vb: MetricUnitsExtensions.NanoGrams(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams(Double)
  name.vb: NanoGrams(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNanoGrams(H.Extensions.Unit.Mass)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InNanoGrams(H.Extensions.Unit.Mass)
  id: InNanoGrams(H.Extensions.Unit.Mass)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InNanoGrams(Mass)
  nameWithType: MetricUnitsExtensions.InNanoGrams(Mass)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNanoGrams(H.Extensions.Unit.Mass)
  type: Method
  source:
    id: InNanoGrams
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 768
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InNanoGrams(this Mass v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Mass
    return:
      type: System.Double
    content.vb: Public Shared Function InNanoGrams(v As Mass) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InNanoGrams*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Tonnes(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Tonnes(System.Int32)
  id: Tonnes(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Tonnes(int)
  nameWithType: MetricUnitsExtensions.Tonnes(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Tonnes(int)
  type: Method
  source:
    id: Tonnes
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 772
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass Tonnes(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function Tonnes(v As Integer) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.Tonnes*
  nameWithType.vb: MetricUnitsExtensions.Tonnes(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Tonnes(Integer)
  name.vb: Tonnes(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Tonnes(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Tonnes(System.Double)
  id: Tonnes(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Tonnes(double)
  nameWithType: MetricUnitsExtensions.Tonnes(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Tonnes(double)
  type: Method
  source:
    id: Tonnes
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 773
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass Tonnes(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function Tonnes(v As Double) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.Tonnes*
  nameWithType.vb: MetricUnitsExtensions.Tonnes(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Tonnes(Double)
  name.vb: Tonnes(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InTonnes(H.Extensions.Unit.Mass)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InTonnes(H.Extensions.Unit.Mass)
  id: InTonnes(H.Extensions.Unit.Mass)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InTonnes(Mass)
  nameWithType: MetricUnitsExtensions.InTonnes(Mass)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InTonnes(H.Extensions.Unit.Mass)
  type: Method
  source:
    id: InTonnes
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 777
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InTonnes(this Mass v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Mass
    return:
      type: System.Double
    content.vb: Public Shared Function InTonnes(v As Mass) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InTonnes*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Daltons(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Daltons(System.Int32)
  id: Daltons(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Daltons(int)
  nameWithType: MetricUnitsExtensions.Daltons(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Daltons(int)
  type: Method
  source:
    id: Daltons
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 781
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass Daltons(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function Daltons(v As Integer) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.Daltons*
  nameWithType.vb: MetricUnitsExtensions.Daltons(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Daltons(Integer)
  name.vb: Daltons(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Daltons(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Daltons(System.Double)
  id: Daltons(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Daltons(double)
  nameWithType: MetricUnitsExtensions.Daltons(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Daltons(double)
  type: Method
  source:
    id: Daltons
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 782
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Mass Daltons(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Function Daltons(v As Double) As Mass
  overload: H.Extensions.Unit.MetricUnitsExtensions.Daltons*
  nameWithType.vb: MetricUnitsExtensions.Daltons(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Daltons(Double)
  name.vb: Daltons(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDaltons(H.Extensions.Unit.Mass)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InDaltons(H.Extensions.Unit.Mass)
  id: InDaltons(H.Extensions.Unit.Mass)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InDaltons(Mass)
  nameWithType: MetricUnitsExtensions.InDaltons(Mass)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDaltons(H.Extensions.Unit.Mass)
  type: Method
  source:
    id: InDaltons
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 786
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InDaltons(this Mass v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Mass
    return:
      type: System.Double
    content.vb: Public Shared Function InDaltons(v As Mass) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InDaltons*
- uid: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(System.Int32)
  id: NanoMoles(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: NanoMoles(int)
  nameWithType: MetricUnitsExtensions.NanoMoles(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(int)
  type: Method
  source:
    id: NanoMoles
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 790
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static AmountOfSubstance NanoMoles(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.AmountOfSubstance
    content.vb: Public Shared Function NanoMoles(v As Integer) As AmountOfSubstance
  overload: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles*
  nameWithType.vb: MetricUnitsExtensions.NanoMoles(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(Integer)
  name.vb: NanoMoles(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(System.Double)
  id: NanoMoles(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: NanoMoles(double)
  nameWithType: MetricUnitsExtensions.NanoMoles(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(double)
  type: Method
  source:
    id: NanoMoles
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 791
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static AmountOfSubstance NanoMoles(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.AmountOfSubstance
    content.vb: Public Shared Function NanoMoles(v As Double) As AmountOfSubstance
  overload: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles*
  nameWithType.vb: MetricUnitsExtensions.NanoMoles(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles(Double)
  name.vb: NanoMoles(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNanoMoles(H.Extensions.Unit.AmountOfSubstance)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InNanoMoles(H.Extensions.Unit.AmountOfSubstance)
  id: InNanoMoles(H.Extensions.Unit.AmountOfSubstance)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InNanoMoles(AmountOfSubstance)
  nameWithType: MetricUnitsExtensions.InNanoMoles(AmountOfSubstance)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNanoMoles(H.Extensions.Unit.AmountOfSubstance)
  type: Method
  source:
    id: InNanoMoles
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 795
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InNanoMoles(this AmountOfSubstance v)
    parameters:
    - id: v
      type: H.Extensions.Unit.AmountOfSubstance
    return:
      type: System.Double
    content.vb: Public Shared Function InNanoMoles(v As AmountOfSubstance) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InNanoMoles*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Kilometres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Kilometres(System.Int32)
  id: Kilometres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Kilometres(int)
  nameWithType: MetricUnitsExtensions.Kilometres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Kilometres(int)
  type: Method
  source:
    id: Kilometres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 799
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Kilometres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Kilometres(v As Integer) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Kilometres*
  nameWithType.vb: MetricUnitsExtensions.Kilometres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Kilometres(Integer)
  name.vb: Kilometres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Kilometres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Kilometres(System.Double)
  id: Kilometres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Kilometres(double)
  nameWithType: MetricUnitsExtensions.Kilometres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Kilometres(double)
  type: Method
  source:
    id: Kilometres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 800
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Kilometres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Kilometres(v As Double) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Kilometres*
  nameWithType.vb: MetricUnitsExtensions.Kilometres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Kilometres(Double)
  name.vb: Kilometres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilometres(H.Extensions.Unit.Length)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilometres(H.Extensions.Unit.Length)
  id: InKilometres(H.Extensions.Unit.Length)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilometres(Length)
  nameWithType: MetricUnitsExtensions.InKilometres(Length)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilometres(H.Extensions.Unit.Length)
  type: Method
  source:
    id: InKilometres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 804
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilometres(this Length v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Length
    return:
      type: System.Double
    content.vb: Public Shared Function InKilometres(v As Length) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilometres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Centimetres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Centimetres(System.Int32)
  id: Centimetres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Centimetres(int)
  nameWithType: MetricUnitsExtensions.Centimetres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Centimetres(int)
  type: Method
  source:
    id: Centimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 808
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Centimetres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Centimetres(v As Integer) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Centimetres*
  nameWithType.vb: MetricUnitsExtensions.Centimetres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Centimetres(Integer)
  name.vb: Centimetres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Centimetres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Centimetres(System.Double)
  id: Centimetres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Centimetres(double)
  nameWithType: MetricUnitsExtensions.Centimetres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Centimetres(double)
  type: Method
  source:
    id: Centimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 809
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Centimetres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Centimetres(v As Double) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Centimetres*
  nameWithType.vb: MetricUnitsExtensions.Centimetres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Centimetres(Double)
  name.vb: Centimetres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCentimetres(H.Extensions.Unit.Length)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InCentimetres(H.Extensions.Unit.Length)
  id: InCentimetres(H.Extensions.Unit.Length)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InCentimetres(Length)
  nameWithType: MetricUnitsExtensions.InCentimetres(Length)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCentimetres(H.Extensions.Unit.Length)
  type: Method
  source:
    id: InCentimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 813
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InCentimetres(this Length v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Length
    return:
      type: System.Double
    content.vb: Public Shared Function InCentimetres(v As Length) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InCentimetres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Millimetres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Millimetres(System.Int32)
  id: Millimetres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Millimetres(int)
  nameWithType: MetricUnitsExtensions.Millimetres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Millimetres(int)
  type: Method
  source:
    id: Millimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 817
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Millimetres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Millimetres(v As Integer) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Millimetres*
  nameWithType.vb: MetricUnitsExtensions.Millimetres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Millimetres(Integer)
  name.vb: Millimetres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Millimetres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Millimetres(System.Double)
  id: Millimetres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Millimetres(double)
  nameWithType: MetricUnitsExtensions.Millimetres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Millimetres(double)
  type: Method
  source:
    id: Millimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 818
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Millimetres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Millimetres(v As Double) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Millimetres*
  nameWithType.vb: MetricUnitsExtensions.Millimetres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Millimetres(Double)
  name.vb: Millimetres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMillimetres(H.Extensions.Unit.Length)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMillimetres(H.Extensions.Unit.Length)
  id: InMillimetres(H.Extensions.Unit.Length)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMillimetres(Length)
  nameWithType: MetricUnitsExtensions.InMillimetres(Length)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMillimetres(H.Extensions.Unit.Length)
  type: Method
  source:
    id: InMillimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 822
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMillimetres(this Length v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Length
    return:
      type: System.Double
    content.vb: Public Shared Function InMillimetres(v As Length) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMillimetres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Micrometres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Micrometres(System.Int32)
  id: Micrometres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Micrometres(int)
  nameWithType: MetricUnitsExtensions.Micrometres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Micrometres(int)
  type: Method
  source:
    id: Micrometres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 826
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Micrometres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Micrometres(v As Integer) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Micrometres*
  nameWithType.vb: MetricUnitsExtensions.Micrometres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Micrometres(Integer)
  name.vb: Micrometres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Micrometres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Micrometres(System.Double)
  id: Micrometres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Micrometres(double)
  nameWithType: MetricUnitsExtensions.Micrometres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Micrometres(double)
  type: Method
  source:
    id: Micrometres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 827
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Micrometres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Micrometres(v As Double) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Micrometres*
  nameWithType.vb: MetricUnitsExtensions.Micrometres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Micrometres(Double)
  name.vb: Micrometres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMicrometres(H.Extensions.Unit.Length)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMicrometres(H.Extensions.Unit.Length)
  id: InMicrometres(H.Extensions.Unit.Length)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMicrometres(Length)
  nameWithType: MetricUnitsExtensions.InMicrometres(Length)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMicrometres(H.Extensions.Unit.Length)
  type: Method
  source:
    id: InMicrometres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 831
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMicrometres(this Length v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Length
    return:
      type: System.Double
    content.vb: Public Shared Function InMicrometres(v As Length) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMicrometres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Nanometres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Nanometres(System.Int32)
  id: Nanometres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Nanometres(int)
  nameWithType: MetricUnitsExtensions.Nanometres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Nanometres(int)
  type: Method
  source:
    id: Nanometres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 835
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Nanometres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Nanometres(v As Integer) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Nanometres*
  nameWithType.vb: MetricUnitsExtensions.Nanometres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Nanometres(Integer)
  name.vb: Nanometres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Nanometres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Nanometres(System.Double)
  id: Nanometres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Nanometres(double)
  nameWithType: MetricUnitsExtensions.Nanometres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Nanometres(double)
  type: Method
  source:
    id: Nanometres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 836
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Nanometres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Nanometres(v As Double) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Nanometres*
  nameWithType.vb: MetricUnitsExtensions.Nanometres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Nanometres(Double)
  name.vb: Nanometres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNanometres(H.Extensions.Unit.Length)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InNanometres(H.Extensions.Unit.Length)
  id: InNanometres(H.Extensions.Unit.Length)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InNanometres(Length)
  nameWithType: MetricUnitsExtensions.InNanometres(Length)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNanometres(H.Extensions.Unit.Length)
  type: Method
  source:
    id: InNanometres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 840
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InNanometres(this Length v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Length
    return:
      type: System.Double
    content.vb: Public Shared Function InNanometres(v As Length) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InNanometres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Angstroms(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Angstroms(System.Int32)
  id: Angstroms(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Angstroms(int)
  nameWithType: MetricUnitsExtensions.Angstroms(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Angstroms(int)
  type: Method
  source:
    id: Angstroms
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 844
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Angstroms(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Angstroms(v As Integer) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Angstroms*
  nameWithType.vb: MetricUnitsExtensions.Angstroms(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Angstroms(Integer)
  name.vb: Angstroms(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Angstroms(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Angstroms(System.Double)
  id: Angstroms(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Angstroms(double)
  nameWithType: MetricUnitsExtensions.Angstroms(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Angstroms(double)
  type: Method
  source:
    id: Angstroms
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 845
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length Angstroms(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function Angstroms(v As Double) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.Angstroms*
  nameWithType.vb: MetricUnitsExtensions.Angstroms(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Angstroms(Double)
  name.vb: Angstroms(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InAngstroms(H.Extensions.Unit.Length)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InAngstroms(H.Extensions.Unit.Length)
  id: InAngstroms(H.Extensions.Unit.Length)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InAngstroms(Length)
  nameWithType: MetricUnitsExtensions.InAngstroms(Length)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InAngstroms(H.Extensions.Unit.Length)
  type: Method
  source:
    id: InAngstroms
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 849
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InAngstroms(this Length v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Length
    return:
      type: System.Double
    content.vb: Public Shared Function InAngstroms(v As Length) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InAngstroms*
- uid: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(System.Int32)
  id: AstronomicalUnits(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: AstronomicalUnits(int)
  nameWithType: MetricUnitsExtensions.AstronomicalUnits(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(int)
  type: Method
  source:
    id: AstronomicalUnits
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 853
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length AstronomicalUnits(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function AstronomicalUnits(v As Integer) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits*
  nameWithType.vb: MetricUnitsExtensions.AstronomicalUnits(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(Integer)
  name.vb: AstronomicalUnits(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(System.Double)
  id: AstronomicalUnits(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: AstronomicalUnits(double)
  nameWithType: MetricUnitsExtensions.AstronomicalUnits(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(double)
  type: Method
  source:
    id: AstronomicalUnits
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 854
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Length AstronomicalUnits(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Function AstronomicalUnits(v As Double) As Length
  overload: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits*
  nameWithType.vb: MetricUnitsExtensions.AstronomicalUnits(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits(Double)
  name.vb: AstronomicalUnits(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InAstronomicalUnits(H.Extensions.Unit.Length)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InAstronomicalUnits(H.Extensions.Unit.Length)
  id: InAstronomicalUnits(H.Extensions.Unit.Length)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InAstronomicalUnits(Length)
  nameWithType: MetricUnitsExtensions.InAstronomicalUnits(Length)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InAstronomicalUnits(H.Extensions.Unit.Length)
  type: Method
  source:
    id: InAstronomicalUnits
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 858
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InAstronomicalUnits(this Length v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Length
    return:
      type: System.Double
    content.vb: Public Shared Function InAstronomicalUnits(v As Length) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InAstronomicalUnits*
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(System.Int32)
  id: SquareCentimetres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareCentimetres(int)
  nameWithType: MetricUnitsExtensions.SquareCentimetres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(int)
  type: Method
  source:
    id: SquareCentimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 862
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Area SquareCentimetres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Area
    content.vb: Public Shared Function SquareCentimetres(v As Integer) As Area
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres*
  nameWithType.vb: MetricUnitsExtensions.SquareCentimetres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(Integer)
  name.vb: SquareCentimetres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(System.Double)
  id: SquareCentimetres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareCentimetres(double)
  nameWithType: MetricUnitsExtensions.SquareCentimetres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(double)
  type: Method
  source:
    id: SquareCentimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 863
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Area SquareCentimetres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Area
    content.vb: Public Shared Function SquareCentimetres(v As Double) As Area
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres*
  nameWithType.vb: MetricUnitsExtensions.SquareCentimetres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres(Double)
  name.vb: SquareCentimetres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetres(H.Extensions.Unit.Area)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetres(H.Extensions.Unit.Area)
  id: InSquareCentimetres(H.Extensions.Unit.Area)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InSquareCentimetres(Area)
  nameWithType: MetricUnitsExtensions.InSquareCentimetres(Area)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetres(H.Extensions.Unit.Area)
  type: Method
  source:
    id: InSquareCentimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 867
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InSquareCentimetres(this Area v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Area
    return:
      type: System.Double
    content.vb: Public Shared Function InSquareCentimetres(v As Area) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Hectares(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Hectares(System.Int32)
  id: Hectares(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Hectares(int)
  nameWithType: MetricUnitsExtensions.Hectares(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Hectares(int)
  type: Method
  source:
    id: Hectares
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 871
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Area Hectares(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Area
    content.vb: Public Shared Function Hectares(v As Integer) As Area
  overload: H.Extensions.Unit.MetricUnitsExtensions.Hectares*
  nameWithType.vb: MetricUnitsExtensions.Hectares(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Hectares(Integer)
  name.vb: Hectares(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Hectares(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Hectares(System.Double)
  id: Hectares(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Hectares(double)
  nameWithType: MetricUnitsExtensions.Hectares(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Hectares(double)
  type: Method
  source:
    id: Hectares
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 872
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Area Hectares(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Area
    content.vb: Public Shared Function Hectares(v As Double) As Area
  overload: H.Extensions.Unit.MetricUnitsExtensions.Hectares*
  nameWithType.vb: MetricUnitsExtensions.Hectares(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Hectares(Double)
  name.vb: Hectares(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InHectares(H.Extensions.Unit.Area)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InHectares(H.Extensions.Unit.Area)
  id: InHectares(H.Extensions.Unit.Area)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InHectares(Area)
  nameWithType: MetricUnitsExtensions.InHectares(Area)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InHectares(H.Extensions.Unit.Area)
  type: Method
  source:
    id: InHectares
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 876
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InHectares(this Area v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Area
    return:
      type: System.Double
    content.vb: Public Shared Function InHectares(v As Area) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InHectares*
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(System.Int32)
  id: CubicCentimetres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CubicCentimetres(int)
  nameWithType: MetricUnitsExtensions.CubicCentimetres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(int)
  type: Method
  source:
    id: CubicCentimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 880
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Volume CubicCentimetres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Volume
    content.vb: Public Shared Function CubicCentimetres(v As Integer) As Volume
  overload: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres*
  nameWithType.vb: MetricUnitsExtensions.CubicCentimetres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(Integer)
  name.vb: CubicCentimetres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(System.Double)
  id: CubicCentimetres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CubicCentimetres(double)
  nameWithType: MetricUnitsExtensions.CubicCentimetres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(double)
  type: Method
  source:
    id: CubicCentimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 881
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Volume CubicCentimetres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Volume
    content.vb: Public Shared Function CubicCentimetres(v As Double) As Volume
  overload: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres*
  nameWithType.vb: MetricUnitsExtensions.CubicCentimetres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres(Double)
  name.vb: CubicCentimetres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetres(H.Extensions.Unit.Volume)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetres(H.Extensions.Unit.Volume)
  id: InCubicCentimetres(H.Extensions.Unit.Volume)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InCubicCentimetres(Volume)
  nameWithType: MetricUnitsExtensions.InCubicCentimetres(Volume)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetres(H.Extensions.Unit.Volume)
  type: Method
  source:
    id: InCubicCentimetres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 885
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InCubicCentimetres(this Volume v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Volume
    return:
      type: System.Double
    content.vb: Public Shared Function InCubicCentimetres(v As Volume) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Litres(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Litres(System.Int32)
  id: Litres(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Litres(int)
  nameWithType: MetricUnitsExtensions.Litres(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Litres(int)
  type: Method
  source:
    id: Litres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 889
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Volume Litres(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Volume
    content.vb: Public Shared Function Litres(v As Integer) As Volume
  overload: H.Extensions.Unit.MetricUnitsExtensions.Litres*
  nameWithType.vb: MetricUnitsExtensions.Litres(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Litres(Integer)
  name.vb: Litres(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Litres(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Litres(System.Double)
  id: Litres(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Litres(double)
  nameWithType: MetricUnitsExtensions.Litres(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Litres(double)
  type: Method
  source:
    id: Litres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 890
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Volume Litres(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Volume
    content.vb: Public Shared Function Litres(v As Double) As Volume
  overload: H.Extensions.Unit.MetricUnitsExtensions.Litres*
  nameWithType.vb: MetricUnitsExtensions.Litres(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Litres(Double)
  name.vb: Litres(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InLitres(H.Extensions.Unit.Volume)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InLitres(H.Extensions.Unit.Volume)
  id: InLitres(H.Extensions.Unit.Volume)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InLitres(Volume)
  nameWithType: MetricUnitsExtensions.InLitres(Volume)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InLitres(H.Extensions.Unit.Volume)
  type: Method
  source:
    id: InLitres
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 894
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InLitres(this Volume v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Volume
    return:
      type: System.Double
    content.vb: Public Shared Function InLitres(v As Volume) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InLitres*
- uid: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(System.Int32)
  id: CentimetersPerSecond(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CentimetersPerSecond(int)
  nameWithType: MetricUnitsExtensions.CentimetersPerSecond(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(int)
  type: Method
  source:
    id: CentimetersPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 898
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Velocity CentimetersPerSecond(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Velocity
    content.vb: Public Shared Function CentimetersPerSecond(v As Integer) As Velocity
  overload: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond*
  nameWithType.vb: MetricUnitsExtensions.CentimetersPerSecond(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(Integer)
  name.vb: CentimetersPerSecond(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(System.Double)
  id: CentimetersPerSecond(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CentimetersPerSecond(double)
  nameWithType: MetricUnitsExtensions.CentimetersPerSecond(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(double)
  type: Method
  source:
    id: CentimetersPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 899
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Velocity CentimetersPerSecond(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Velocity
    content.vb: Public Shared Function CentimetersPerSecond(v As Double) As Velocity
  overload: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond*
  nameWithType.vb: MetricUnitsExtensions.CentimetersPerSecond(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond(Double)
  name.vb: CentimetersPerSecond(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCentimetersPerSecond(H.Extensions.Unit.Velocity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InCentimetersPerSecond(H.Extensions.Unit.Velocity)
  id: InCentimetersPerSecond(H.Extensions.Unit.Velocity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InCentimetersPerSecond(Velocity)
  nameWithType: MetricUnitsExtensions.InCentimetersPerSecond(Velocity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCentimetersPerSecond(H.Extensions.Unit.Velocity)
  type: Method
  source:
    id: InCentimetersPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 903
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InCentimetersPerSecond(this Velocity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Velocity
    return:
      type: System.Double
    content.vb: Public Shared Function InCentimetersPerSecond(v As Velocity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InCentimetersPerSecond*
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(System.Int32)
  id: KilometresPerHour(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilometresPerHour(int)
  nameWithType: MetricUnitsExtensions.KilometresPerHour(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(int)
  type: Method
  source:
    id: KilometresPerHour
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 907
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Velocity KilometresPerHour(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Velocity
    content.vb: Public Shared Function KilometresPerHour(v As Integer) As Velocity
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour*
  nameWithType.vb: MetricUnitsExtensions.KilometresPerHour(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(Integer)
  name.vb: KilometresPerHour(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(System.Double)
  id: KilometresPerHour(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilometresPerHour(double)
  nameWithType: MetricUnitsExtensions.KilometresPerHour(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(double)
  type: Method
  source:
    id: KilometresPerHour
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 908
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Velocity KilometresPerHour(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Velocity
    content.vb: Public Shared Function KilometresPerHour(v As Double) As Velocity
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour*
  nameWithType.vb: MetricUnitsExtensions.KilometresPerHour(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour(Double)
  name.vb: KilometresPerHour(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilometresPerHour(H.Extensions.Unit.Velocity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilometresPerHour(H.Extensions.Unit.Velocity)
  id: InKilometresPerHour(H.Extensions.Unit.Velocity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilometresPerHour(Velocity)
  nameWithType: MetricUnitsExtensions.InKilometresPerHour(Velocity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilometresPerHour(H.Extensions.Unit.Velocity)
  type: Method
  source:
    id: InKilometresPerHour
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 912
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilometresPerHour(this Velocity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Velocity
    return:
      type: System.Double
    content.vb: Public Shared Function InKilometresPerHour(v As Velocity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilometresPerHour*
- uid: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(System.Int32)
  id: MillimetresOfMercury(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MillimetresOfMercury(int)
  nameWithType: MetricUnitsExtensions.MillimetresOfMercury(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(int)
  type: Method
  source:
    id: MillimetresOfMercury
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 916
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Pressure MillimetresOfMercury(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Pressure
    content.vb: Public Shared Function MillimetresOfMercury(v As Integer) As Pressure
  overload: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury*
  nameWithType.vb: MetricUnitsExtensions.MillimetresOfMercury(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(Integer)
  name.vb: MillimetresOfMercury(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(System.Double)
  id: MillimetresOfMercury(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MillimetresOfMercury(double)
  nameWithType: MetricUnitsExtensions.MillimetresOfMercury(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(double)
  type: Method
  source:
    id: MillimetresOfMercury
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 917
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Pressure MillimetresOfMercury(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Pressure
    content.vb: Public Shared Function MillimetresOfMercury(v As Double) As Pressure
  overload: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury*
  nameWithType.vb: MetricUnitsExtensions.MillimetresOfMercury(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury(Double)
  name.vb: MillimetresOfMercury(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMillimetresOfMercury(H.Extensions.Unit.Pressure)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMillimetresOfMercury(H.Extensions.Unit.Pressure)
  id: InMillimetresOfMercury(H.Extensions.Unit.Pressure)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMillimetresOfMercury(Pressure)
  nameWithType: MetricUnitsExtensions.InMillimetresOfMercury(Pressure)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMillimetresOfMercury(H.Extensions.Unit.Pressure)
  type: Method
  source:
    id: InMillimetresOfMercury
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 921
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMillimetresOfMercury(this Pressure v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Pressure
    return:
      type: System.Double
    content.vb: Public Shared Function InMillimetresOfMercury(v As Pressure) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMillimetresOfMercury*
- uid: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(System.Int32)
  id: AccelerationOfGravity(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: AccelerationOfGravity(int)
  nameWithType: MetricUnitsExtensions.AccelerationOfGravity(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(int)
  type: Method
  source:
    id: AccelerationOfGravity
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 925
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Acceleration AccelerationOfGravity(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Acceleration
    content.vb: Public Shared Function AccelerationOfGravity(v As Integer) As Acceleration
  overload: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity*
  nameWithType.vb: MetricUnitsExtensions.AccelerationOfGravity(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(Integer)
  name.vb: AccelerationOfGravity(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(System.Double)
  id: AccelerationOfGravity(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: AccelerationOfGravity(double)
  nameWithType: MetricUnitsExtensions.AccelerationOfGravity(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(double)
  type: Method
  source:
    id: AccelerationOfGravity
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 926
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Acceleration AccelerationOfGravity(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Acceleration
    content.vb: Public Shared Function AccelerationOfGravity(v As Double) As Acceleration
  overload: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity*
  nameWithType.vb: MetricUnitsExtensions.AccelerationOfGravity(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity(Double)
  name.vb: AccelerationOfGravity(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InAccelerationOfGravity(H.Extensions.Unit.Acceleration)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InAccelerationOfGravity(H.Extensions.Unit.Acceleration)
  id: InAccelerationOfGravity(H.Extensions.Unit.Acceleration)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InAccelerationOfGravity(Acceleration)
  nameWithType: MetricUnitsExtensions.InAccelerationOfGravity(Acceleration)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InAccelerationOfGravity(H.Extensions.Unit.Acceleration)
  type: Method
  source:
    id: InAccelerationOfGravity
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 930
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InAccelerationOfGravity(this Acceleration v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Acceleration
    return:
      type: System.Double
    content.vb: Public Shared Function InAccelerationOfGravity(v As Acceleration) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InAccelerationOfGravity*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Colories(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Colories(System.Int32)
  id: Colories(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Colories(int)
  nameWithType: MetricUnitsExtensions.Colories(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Colories(int)
  type: Method
  source:
    id: Colories
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 934
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy Colories(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function Colories(v As Integer) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.Colories*
  nameWithType.vb: MetricUnitsExtensions.Colories(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Colories(Integer)
  name.vb: Colories(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Colories(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Colories(System.Double)
  id: Colories(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Colories(double)
  nameWithType: MetricUnitsExtensions.Colories(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Colories(double)
  type: Method
  source:
    id: Colories
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 935
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy Colories(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function Colories(v As Double) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.Colories*
  nameWithType.vb: MetricUnitsExtensions.Colories(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Colories(Double)
  name.vb: Colories(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InColories(H.Extensions.Unit.Energy)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InColories(H.Extensions.Unit.Energy)
  id: InColories(H.Extensions.Unit.Energy)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InColories(Energy)
  nameWithType: MetricUnitsExtensions.InColories(Energy)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InColories(H.Extensions.Unit.Energy)
  type: Method
  source:
    id: InColories
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 939
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InColories(this Energy v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Energy
    return:
      type: System.Double
    content.vb: Public Shared Function InColories(v As Energy) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InColories*
- uid: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(System.Int32)
  id: ElectronVolts(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: ElectronVolts(int)
  nameWithType: MetricUnitsExtensions.ElectronVolts(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(int)
  type: Method
  source:
    id: ElectronVolts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 943
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy ElectronVolts(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function ElectronVolts(v As Integer) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts*
  nameWithType.vb: MetricUnitsExtensions.ElectronVolts(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(Integer)
  name.vb: ElectronVolts(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(System.Double)
  id: ElectronVolts(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: ElectronVolts(double)
  nameWithType: MetricUnitsExtensions.ElectronVolts(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(double)
  type: Method
  source:
    id: ElectronVolts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 944
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy ElectronVolts(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function ElectronVolts(v As Double) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts*
  nameWithType.vb: MetricUnitsExtensions.ElectronVolts(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts(Double)
  name.vb: ElectronVolts(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InElectronVolts(H.Extensions.Unit.Energy)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InElectronVolts(H.Extensions.Unit.Energy)
  id: InElectronVolts(H.Extensions.Unit.Energy)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InElectronVolts(Energy)
  nameWithType: MetricUnitsExtensions.InElectronVolts(Energy)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InElectronVolts(H.Extensions.Unit.Energy)
  type: Method
  source:
    id: InElectronVolts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 948
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InElectronVolts(this Energy v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Energy
    return:
      type: System.Double
    content.vb: Public Shared Function InElectronVolts(v As Energy) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InElectronVolts*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(System.Int32)
  id: Kilowatts(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Kilowatts(int)
  nameWithType: MetricUnitsExtensions.Kilowatts(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(int)
  type: Method
  source:
    id: Kilowatts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 952
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Power Kilowatts(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Power
    content.vb: Public Shared Function Kilowatts(v As Integer) As Power
  overload: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts*
  nameWithType.vb: MetricUnitsExtensions.Kilowatts(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(Integer)
  name.vb: Kilowatts(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(System.Double)
  id: Kilowatts(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Kilowatts(double)
  nameWithType: MetricUnitsExtensions.Kilowatts(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(double)
  type: Method
  source:
    id: Kilowatts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 953
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Power Kilowatts(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Power
    content.vb: Public Shared Function Kilowatts(v As Double) As Power
  overload: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts*
  nameWithType.vb: MetricUnitsExtensions.Kilowatts(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts(Double)
  name.vb: Kilowatts(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilowatts(H.Extensions.Unit.Power)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilowatts(H.Extensions.Unit.Power)
  id: InKilowatts(H.Extensions.Unit.Power)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilowatts(Power)
  nameWithType: MetricUnitsExtensions.InKilowatts(Power)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilowatts(H.Extensions.Unit.Power)
  type: Method
  source:
    id: InKilowatts
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 957
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilowatts(this Power v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Power
    return:
      type: System.Double
    content.vb: Public Shared Function InKilowatts(v As Power) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilowatts*
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(System.Int32)
  id: KilowattHours(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilowattHours(int)
  nameWithType: MetricUnitsExtensions.KilowattHours(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(int)
  type: Method
  source:
    id: KilowattHours
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 961
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy KilowattHours(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function KilowattHours(v As Integer) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours*
  nameWithType.vb: MetricUnitsExtensions.KilowattHours(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(Integer)
  name.vb: KilowattHours(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(System.Double)
  id: KilowattHours(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilowattHours(double)
  nameWithType: MetricUnitsExtensions.KilowattHours(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(double)
  type: Method
  source:
    id: KilowattHours
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 962
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy KilowattHours(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function KilowattHours(v As Double) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours*
  nameWithType.vb: MetricUnitsExtensions.KilowattHours(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours(Double)
  name.vb: KilowattHours(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilowattHours(H.Extensions.Unit.Energy)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilowattHours(H.Extensions.Unit.Energy)
  id: InKilowattHours(H.Extensions.Unit.Energy)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilowattHours(Energy)
  nameWithType: MetricUnitsExtensions.InKilowattHours(Energy)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilowattHours(H.Extensions.Unit.Energy)
  type: Method
  source:
    id: InKilowattHours
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 966
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilowattHours(this Energy v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Energy
    return:
      type: System.Double
    content.vb: Public Shared Function InKilowattHours(v As Energy) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilowattHours*
- uid: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(System.Int32)
  id: TonnesOfOilEquivalent(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: TonnesOfOilEquivalent(int)
  nameWithType: MetricUnitsExtensions.TonnesOfOilEquivalent(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(int)
  type: Method
  source:
    id: TonnesOfOilEquivalent
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 970
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy TonnesOfOilEquivalent(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function TonnesOfOilEquivalent(v As Integer) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent*
  nameWithType.vb: MetricUnitsExtensions.TonnesOfOilEquivalent(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(Integer)
  name.vb: TonnesOfOilEquivalent(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(System.Double)
  id: TonnesOfOilEquivalent(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: TonnesOfOilEquivalent(double)
  nameWithType: MetricUnitsExtensions.TonnesOfOilEquivalent(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(double)
  type: Method
  source:
    id: TonnesOfOilEquivalent
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 971
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy TonnesOfOilEquivalent(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function TonnesOfOilEquivalent(v As Double) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent*
  nameWithType.vb: MetricUnitsExtensions.TonnesOfOilEquivalent(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent(Double)
  name.vb: TonnesOfOilEquivalent(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InTonnesOfOilEquivalent(H.Extensions.Unit.Energy)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InTonnesOfOilEquivalent(H.Extensions.Unit.Energy)
  id: InTonnesOfOilEquivalent(H.Extensions.Unit.Energy)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InTonnesOfOilEquivalent(Energy)
  nameWithType: MetricUnitsExtensions.InTonnesOfOilEquivalent(Energy)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InTonnesOfOilEquivalent(H.Extensions.Unit.Energy)
  type: Method
  source:
    id: InTonnesOfOilEquivalent
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 975
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InTonnesOfOilEquivalent(this Energy v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Energy
    return:
      type: System.Double
    content.vb: Public Shared Function InTonnesOfOilEquivalent(v As Energy) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InTonnesOfOilEquivalent*
- uid: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(System.Int32)
  id: DegreesCelsius(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: DegreesCelsius(int)
  nameWithType: MetricUnitsExtensions.DegreesCelsius(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(int)
  type: Method
  source:
    id: DegreesCelsius
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 979
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static TemperatureChange DegreesCelsius(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.TemperatureChange
    content.vb: Public Shared Function DegreesCelsius(v As Integer) As TemperatureChange
  overload: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius*
  nameWithType.vb: MetricUnitsExtensions.DegreesCelsius(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(Integer)
  name.vb: DegreesCelsius(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(System.Double)
  id: DegreesCelsius(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: DegreesCelsius(double)
  nameWithType: MetricUnitsExtensions.DegreesCelsius(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(double)
  type: Method
  source:
    id: DegreesCelsius
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 980
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static TemperatureChange DegreesCelsius(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.TemperatureChange
    content.vb: Public Shared Function DegreesCelsius(v As Double) As TemperatureChange
  overload: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius*
  nameWithType.vb: MetricUnitsExtensions.DegreesCelsius(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius(Double)
  name.vb: DegreesCelsius(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDegreesCelsius(H.Extensions.Unit.TemperatureChange)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InDegreesCelsius(H.Extensions.Unit.TemperatureChange)
  id: InDegreesCelsius(H.Extensions.Unit.TemperatureChange)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InDegreesCelsius(TemperatureChange)
  nameWithType: MetricUnitsExtensions.InDegreesCelsius(TemperatureChange)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDegreesCelsius(H.Extensions.Unit.TemperatureChange)
  type: Method
  source:
    id: InDegreesCelsius
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 984
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InDegreesCelsius(this TemperatureChange v)
    parameters:
    - id: v
      type: H.Extensions.Unit.TemperatureChange
    return:
      type: System.Double
    content.vb: Public Shared Function InDegreesCelsius(v As TemperatureChange) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InDegreesCelsius*
- uid: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(System.Int32)
  id: CaloriesPerDegreeKelvin(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CaloriesPerDegreeKelvin(int)
  nameWithType: MetricUnitsExtensions.CaloriesPerDegreeKelvin(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(int)
  type: Method
  source:
    id: CaloriesPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 988
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static ThermalCapacity CaloriesPerDegreeKelvin(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.ThermalCapacity
    content.vb: Public Shared Function CaloriesPerDegreeKelvin(v As Integer) As ThermalCapacity
  overload: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin*
  nameWithType.vb: MetricUnitsExtensions.CaloriesPerDegreeKelvin(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(Integer)
  name.vb: CaloriesPerDegreeKelvin(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(System.Double)
  id: CaloriesPerDegreeKelvin(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CaloriesPerDegreeKelvin(double)
  nameWithType: MetricUnitsExtensions.CaloriesPerDegreeKelvin(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(double)
  type: Method
  source:
    id: CaloriesPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 989
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static ThermalCapacity CaloriesPerDegreeKelvin(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.ThermalCapacity
    content.vb: Public Shared Function CaloriesPerDegreeKelvin(v As Double) As ThermalCapacity
  overload: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin*
  nameWithType.vb: MetricUnitsExtensions.CaloriesPerDegreeKelvin(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin(Double)
  name.vb: CaloriesPerDegreeKelvin(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCaloriesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InCaloriesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  id: InCaloriesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InCaloriesPerDegreeKelvin(ThermalCapacity)
  nameWithType: MetricUnitsExtensions.InCaloriesPerDegreeKelvin(ThermalCapacity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCaloriesPerDegreeKelvin(H.Extensions.Unit.ThermalCapacity)
  type: Method
  source:
    id: InCaloriesPerDegreeKelvin
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 993
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InCaloriesPerDegreeKelvin(this ThermalCapacity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.ThermalCapacity
    return:
      type: System.Double
    content.vb: Public Shared Function InCaloriesPerDegreeKelvin(v As ThermalCapacity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InCaloriesPerDegreeKelvin*
- uid: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(System.Int32)
  id: DynesPerCentimetre(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: DynesPerCentimetre(int)
  nameWithType: MetricUnitsExtensions.DynesPerCentimetre(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(int)
  type: Method
  source:
    id: DynesPerCentimetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 997
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SurfaceTension DynesPerCentimetre(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.SurfaceTension
    content.vb: Public Shared Function DynesPerCentimetre(v As Integer) As SurfaceTension
  overload: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre*
  nameWithType.vb: MetricUnitsExtensions.DynesPerCentimetre(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(Integer)
  name.vb: DynesPerCentimetre(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(System.Double)
  id: DynesPerCentimetre(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: DynesPerCentimetre(double)
  nameWithType: MetricUnitsExtensions.DynesPerCentimetre(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(double)
  type: Method
  source:
    id: DynesPerCentimetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 998
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SurfaceTension DynesPerCentimetre(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.SurfaceTension
    content.vb: Public Shared Function DynesPerCentimetre(v As Double) As SurfaceTension
  overload: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre*
  nameWithType.vb: MetricUnitsExtensions.DynesPerCentimetre(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre(Double)
  name.vb: DynesPerCentimetre(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerCentimetre(H.Extensions.Unit.SurfaceTension)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InDynesPerCentimetre(H.Extensions.Unit.SurfaceTension)
  id: InDynesPerCentimetre(H.Extensions.Unit.SurfaceTension)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InDynesPerCentimetre(SurfaceTension)
  nameWithType: MetricUnitsExtensions.InDynesPerCentimetre(SurfaceTension)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerCentimetre(H.Extensions.Unit.SurfaceTension)
  type: Method
  source:
    id: InDynesPerCentimetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1002
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InDynesPerCentimetre(this SurfaceTension v)
    parameters:
    - id: v
      type: H.Extensions.Unit.SurfaceTension
    return:
      type: System.Double
    content.vb: Public Shared Function InDynesPerCentimetre(v As SurfaceTension) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerCentimetre*
- uid: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(System.Int32)
  id: MilliSeconds(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MilliSeconds(int)
  nameWithType: MetricUnitsExtensions.MilliSeconds(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(int)
  type: Method
  source:
    id: MilliSeconds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1006
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Time MilliSeconds(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Time
    content.vb: Public Shared Function MilliSeconds(v As Integer) As Time
  overload: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds*
  nameWithType.vb: MetricUnitsExtensions.MilliSeconds(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(Integer)
  name.vb: MilliSeconds(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(System.Double)
  id: MilliSeconds(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MilliSeconds(double)
  nameWithType: MetricUnitsExtensions.MilliSeconds(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(double)
  type: Method
  source:
    id: MilliSeconds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1007
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Time MilliSeconds(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Time
    content.vb: Public Shared Function MilliSeconds(v As Double) As Time
  overload: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds*
  nameWithType.vb: MetricUnitsExtensions.MilliSeconds(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds(Double)
  name.vb: MilliSeconds(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMilliSeconds(H.Extensions.Unit.Time)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMilliSeconds(H.Extensions.Unit.Time)
  id: InMilliSeconds(H.Extensions.Unit.Time)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMilliSeconds(Time)
  nameWithType: MetricUnitsExtensions.InMilliSeconds(Time)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMilliSeconds(H.Extensions.Unit.Time)
  type: Method
  source:
    id: InMilliSeconds
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1011
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMilliSeconds(this Time v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Time
    return:
      type: System.Double
    content.vb: Public Shared Function InMilliSeconds(v As Time) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMilliSeconds*
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(System.Int32)
  id: SquareCentimetresPerSecond(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareCentimetresPerSecond(int)
  nameWithType: MetricUnitsExtensions.SquareCentimetresPerSecond(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(int)
  type: Method
  source:
    id: SquareCentimetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1015
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static KinematicViscosity SquareCentimetresPerSecond(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.KinematicViscosity
    content.vb: Public Shared Function SquareCentimetresPerSecond(v As Integer) As KinematicViscosity
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.SquareCentimetresPerSecond(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(Integer)
  name.vb: SquareCentimetresPerSecond(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(System.Double)
  id: SquareCentimetresPerSecond(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareCentimetresPerSecond(double)
  nameWithType: MetricUnitsExtensions.SquareCentimetresPerSecond(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(double)
  type: Method
  source:
    id: SquareCentimetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1016
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static KinematicViscosity SquareCentimetresPerSecond(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.KinematicViscosity
    content.vb: Public Shared Function SquareCentimetresPerSecond(v As Double) As KinematicViscosity
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.SquareCentimetresPerSecond(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond(Double)
  name.vb: SquareCentimetresPerSecond(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  id: InSquareCentimetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InSquareCentimetresPerSecond(KinematicViscosity)
  nameWithType: MetricUnitsExtensions.InSquareCentimetresPerSecond(KinematicViscosity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetresPerSecond(H.Extensions.Unit.KinematicViscosity)
  type: Method
  source:
    id: InSquareCentimetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1020
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InSquareCentimetresPerSecond(this KinematicViscosity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.KinematicViscosity
    return:
      type: System.Double
    content.vb: Public Shared Function InSquareCentimetresPerSecond(v As KinematicViscosity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetresPerSecond*
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(System.Int32)
  id: CubicCentimetresPerSecond(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CubicCentimetresPerSecond(int)
  nameWithType: MetricUnitsExtensions.CubicCentimetresPerSecond(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(int)
  type: Method
  source:
    id: CubicCentimetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1024
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static VolumeFlowRate CubicCentimetresPerSecond(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.VolumeFlowRate
    content.vb: Public Shared Function CubicCentimetresPerSecond(v As Integer) As VolumeFlowRate
  overload: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.CubicCentimetresPerSecond(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(Integer)
  name.vb: CubicCentimetresPerSecond(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(System.Double)
  id: CubicCentimetresPerSecond(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: CubicCentimetresPerSecond(double)
  nameWithType: MetricUnitsExtensions.CubicCentimetresPerSecond(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(double)
  type: Method
  source:
    id: CubicCentimetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1025
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static VolumeFlowRate CubicCentimetresPerSecond(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.VolumeFlowRate
    content.vb: Public Shared Function CubicCentimetresPerSecond(v As Double) As VolumeFlowRate
  overload: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond*
  nameWithType.vb: MetricUnitsExtensions.CubicCentimetresPerSecond(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond(Double)
  name.vb: CubicCentimetresPerSecond(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  id: InCubicCentimetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InCubicCentimetresPerSecond(VolumeFlowRate)
  nameWithType: MetricUnitsExtensions.InCubicCentimetresPerSecond(VolumeFlowRate)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetresPerSecond(H.Extensions.Unit.VolumeFlowRate)
  type: Method
  source:
    id: InCubicCentimetresPerSecond
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1029
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InCubicCentimetresPerSecond(this VolumeFlowRate v)
    parameters:
    - id: v
      type: H.Extensions.Unit.VolumeFlowRate
    return:
      type: System.Double
    content.vb: Public Shared Function InCubicCentimetresPerSecond(v As VolumeFlowRate) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetresPerSecond*
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(System.Int32)
  id: GramsPerMole(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: GramsPerMole(int)
  nameWithType: MetricUnitsExtensions.GramsPerMole(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(int)
  type: Method
  source:
    id: GramsPerMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1033
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarMass GramsPerMole(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.MolarMass
    content.vb: Public Shared Function GramsPerMole(v As Integer) As MolarMass
  overload: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole*
  nameWithType.vb: MetricUnitsExtensions.GramsPerMole(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(Integer)
  name.vb: GramsPerMole(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(System.Double)
  id: GramsPerMole(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: GramsPerMole(double)
  nameWithType: MetricUnitsExtensions.GramsPerMole(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(double)
  type: Method
  source:
    id: GramsPerMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1034
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarMass GramsPerMole(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.MolarMass
    content.vb: Public Shared Function GramsPerMole(v As Double) As MolarMass
  overload: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole*
  nameWithType.vb: MetricUnitsExtensions.GramsPerMole(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole(Double)
  name.vb: GramsPerMole(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerMole(H.Extensions.Unit.MolarMass)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InGramsPerMole(H.Extensions.Unit.MolarMass)
  id: InGramsPerMole(H.Extensions.Unit.MolarMass)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InGramsPerMole(MolarMass)
  nameWithType: MetricUnitsExtensions.InGramsPerMole(MolarMass)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerMole(H.Extensions.Unit.MolarMass)
  type: Method
  source:
    id: InGramsPerMole
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1038
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InGramsPerMole(this MolarMass v)
    parameters:
    - id: v
      type: H.Extensions.Unit.MolarMass
    return:
      type: System.Double
    content.vb: Public Shared Function InGramsPerMole(v As MolarMass) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerMole*
- uid: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(System.Int32)
  id: MolesPerLitre(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MolesPerLitre(int)
  nameWithType: MetricUnitsExtensions.MolesPerLitre(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(int)
  type: Method
  source:
    id: MolesPerLitre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1042
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarConcentration MolesPerLitre(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.MolarConcentration
    content.vb: Public Shared Function MolesPerLitre(v As Integer) As MolarConcentration
  overload: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre*
  nameWithType.vb: MetricUnitsExtensions.MolesPerLitre(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(Integer)
  name.vb: MolesPerLitre(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(System.Double)
  id: MolesPerLitre(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MolesPerLitre(double)
  nameWithType: MetricUnitsExtensions.MolesPerLitre(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(double)
  type: Method
  source:
    id: MolesPerLitre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1043
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static MolarConcentration MolesPerLitre(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.MolarConcentration
    content.vb: Public Shared Function MolesPerLitre(v As Double) As MolarConcentration
  overload: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre*
  nameWithType.vb: MetricUnitsExtensions.MolesPerLitre(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre(Double)
  name.vb: MolesPerLitre(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerLitre(H.Extensions.Unit.MolarConcentration)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMolesPerLitre(H.Extensions.Unit.MolarConcentration)
  id: InMolesPerLitre(H.Extensions.Unit.MolarConcentration)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMolesPerLitre(MolarConcentration)
  nameWithType: MetricUnitsExtensions.InMolesPerLitre(MolarConcentration)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerLitre(H.Extensions.Unit.MolarConcentration)
  type: Method
  source:
    id: InMolesPerLitre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1047
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMolesPerLitre(this MolarConcentration v)
    parameters:
    - id: v
      type: H.Extensions.Unit.MolarConcentration
    return:
      type: System.Double
    content.vb: Public Shared Function InMolesPerLitre(v As MolarConcentration) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerLitre*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Degrees(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Degrees(System.Int32)
  id: Degrees(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Degrees(int)
  nameWithType: MetricUnitsExtensions.Degrees(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Degrees(int)
  type: Method
  source:
    id: Degrees
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1051
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Angle Degrees(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Angle
    content.vb: Public Shared Function Degrees(v As Integer) As Angle
  overload: H.Extensions.Unit.MetricUnitsExtensions.Degrees*
  nameWithType.vb: MetricUnitsExtensions.Degrees(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Degrees(Integer)
  name.vb: Degrees(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Degrees(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Degrees(System.Double)
  id: Degrees(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Degrees(double)
  nameWithType: MetricUnitsExtensions.Degrees(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Degrees(double)
  type: Method
  source:
    id: Degrees
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1052
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Angle Degrees(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Angle
    content.vb: Public Shared Function Degrees(v As Double) As Angle
  overload: H.Extensions.Unit.MetricUnitsExtensions.Degrees*
  nameWithType.vb: MetricUnitsExtensions.Degrees(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Degrees(Double)
  name.vb: Degrees(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDegrees(H.Extensions.Unit.Angle)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InDegrees(H.Extensions.Unit.Angle)
  id: InDegrees(H.Extensions.Unit.Angle)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InDegrees(Angle)
  nameWithType: MetricUnitsExtensions.InDegrees(Angle)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDegrees(H.Extensions.Unit.Angle)
  type: Method
  source:
    id: InDegrees
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1056
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InDegrees(this Angle v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Angle
    return:
      type: System.Double
    content.vb: Public Shared Function InDegrees(v As Angle) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InDegrees*
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(System.Int32)
  id: SquareDegrees(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareDegrees(int)
  nameWithType: MetricUnitsExtensions.SquareDegrees(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(int)
  type: Method
  source:
    id: SquareDegrees
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1060
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SolidAngle SquareDegrees(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.SolidAngle
    content.vb: Public Shared Function SquareDegrees(v As Integer) As SolidAngle
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees*
  nameWithType.vb: MetricUnitsExtensions.SquareDegrees(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(Integer)
  name.vb: SquareDegrees(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(System.Double)
  id: SquareDegrees(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: SquareDegrees(double)
  nameWithType: MetricUnitsExtensions.SquareDegrees(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(double)
  type: Method
  source:
    id: SquareDegrees
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1061
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static SolidAngle SquareDegrees(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.SolidAngle
    content.vb: Public Shared Function SquareDegrees(v As Double) As SolidAngle
  overload: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees*
  nameWithType.vb: MetricUnitsExtensions.SquareDegrees(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees(Double)
  name.vb: SquareDegrees(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareDegrees(H.Extensions.Unit.SolidAngle)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InSquareDegrees(H.Extensions.Unit.SolidAngle)
  id: InSquareDegrees(H.Extensions.Unit.SolidAngle)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InSquareDegrees(SolidAngle)
  nameWithType: MetricUnitsExtensions.InSquareDegrees(SolidAngle)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareDegrees(H.Extensions.Unit.SolidAngle)
  type: Method
  source:
    id: InSquareDegrees
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1065
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InSquareDegrees(this SolidAngle v)
    parameters:
    - id: v
      type: H.Extensions.Unit.SolidAngle
    return:
      type: System.Double
    content.vb: Public Shared Function InSquareDegrees(v As SolidAngle) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InSquareDegrees*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Dynes(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Dynes(System.Int32)
  id: Dynes(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Dynes(int)
  nameWithType: MetricUnitsExtensions.Dynes(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Dynes(int)
  type: Method
  source:
    id: Dynes
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1069
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Force Dynes(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Force
    content.vb: Public Shared Function Dynes(v As Integer) As Force
  overload: H.Extensions.Unit.MetricUnitsExtensions.Dynes*
  nameWithType.vb: MetricUnitsExtensions.Dynes(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Dynes(Integer)
  name.vb: Dynes(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Dynes(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Dynes(System.Double)
  id: Dynes(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Dynes(double)
  nameWithType: MetricUnitsExtensions.Dynes(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Dynes(double)
  type: Method
  source:
    id: Dynes
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1070
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Force Dynes(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Force
    content.vb: Public Shared Function Dynes(v As Double) As Force
  overload: H.Extensions.Unit.MetricUnitsExtensions.Dynes*
  nameWithType.vb: MetricUnitsExtensions.Dynes(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Dynes(Double)
  name.vb: Dynes(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDynes(H.Extensions.Unit.Force)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InDynes(H.Extensions.Unit.Force)
  id: InDynes(H.Extensions.Unit.Force)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InDynes(Force)
  nameWithType: MetricUnitsExtensions.InDynes(Force)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDynes(H.Extensions.Unit.Force)
  type: Method
  source:
    id: InDynes
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1074
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InDynes(this Force v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Force
    return:
      type: System.Double
    content.vb: Public Shared Function InDynes(v As Force) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InDynes*
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramWeight(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.GramWeight(System.Int32)
  id: GramWeight(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: GramWeight(int)
  nameWithType: MetricUnitsExtensions.GramWeight(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramWeight(int)
  type: Method
  source:
    id: GramWeight
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1078
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Force GramWeight(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Force
    content.vb: Public Shared Function GramWeight(v As Integer) As Force
  overload: H.Extensions.Unit.MetricUnitsExtensions.GramWeight*
  nameWithType.vb: MetricUnitsExtensions.GramWeight(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.GramWeight(Integer)
  name.vb: GramWeight(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramWeight(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.GramWeight(System.Double)
  id: GramWeight(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: GramWeight(double)
  nameWithType: MetricUnitsExtensions.GramWeight(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramWeight(double)
  type: Method
  source:
    id: GramWeight
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1079
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Force GramWeight(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Force
    content.vb: Public Shared Function GramWeight(v As Double) As Force
  overload: H.Extensions.Unit.MetricUnitsExtensions.GramWeight*
  nameWithType.vb: MetricUnitsExtensions.GramWeight(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.GramWeight(Double)
  name.vb: GramWeight(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGramWeight(H.Extensions.Unit.Force)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InGramWeight(H.Extensions.Unit.Force)
  id: InGramWeight(H.Extensions.Unit.Force)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InGramWeight(Force)
  nameWithType: MetricUnitsExtensions.InGramWeight(Force)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGramWeight(H.Extensions.Unit.Force)
  type: Method
  source:
    id: InGramWeight
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1083
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InGramWeight(this Force v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Force
    return:
      type: System.Double
    content.vb: Public Shared Function InGramWeight(v As Force) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InGramWeight*
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(System.Int32)
  id: KilogramWeight(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramWeight(int)
  nameWithType: MetricUnitsExtensions.KilogramWeight(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(int)
  type: Method
  source:
    id: KilogramWeight
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1087
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Force KilogramWeight(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Force
    content.vb: Public Shared Function KilogramWeight(v As Integer) As Force
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight*
  nameWithType.vb: MetricUnitsExtensions.KilogramWeight(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(Integer)
  name.vb: KilogramWeight(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(System.Double)
  id: KilogramWeight(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: KilogramWeight(double)
  nameWithType: MetricUnitsExtensions.KilogramWeight(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(double)
  type: Method
  source:
    id: KilogramWeight
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1088
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Force KilogramWeight(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Force
    content.vb: Public Shared Function KilogramWeight(v As Double) As Force
  overload: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight*
  nameWithType.vb: MetricUnitsExtensions.KilogramWeight(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight(Double)
  name.vb: KilogramWeight(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramWeight(H.Extensions.Unit.Force)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InKilogramWeight(H.Extensions.Unit.Force)
  id: InKilogramWeight(H.Extensions.Unit.Force)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InKilogramWeight(Force)
  nameWithType: MetricUnitsExtensions.InKilogramWeight(Force)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramWeight(H.Extensions.Unit.Force)
  type: Method
  source:
    id: InKilogramWeight
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1092
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InKilogramWeight(this Force v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Force
    return:
      type: System.Double
    content.vb: Public Shared Function InKilogramWeight(v As Force) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InKilogramWeight*
- uid: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(System.Int32)
  id: DynesPerSquareCentimetre(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: DynesPerSquareCentimetre(int)
  nameWithType: MetricUnitsExtensions.DynesPerSquareCentimetre(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(int)
  type: Method
  source:
    id: DynesPerSquareCentimetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1096
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Pressure DynesPerSquareCentimetre(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Pressure
    content.vb: Public Shared Function DynesPerSquareCentimetre(v As Integer) As Pressure
  overload: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre*
  nameWithType.vb: MetricUnitsExtensions.DynesPerSquareCentimetre(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(Integer)
  name.vb: DynesPerSquareCentimetre(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(System.Double)
  id: DynesPerSquareCentimetre(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: DynesPerSquareCentimetre(double)
  nameWithType: MetricUnitsExtensions.DynesPerSquareCentimetre(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(double)
  type: Method
  source:
    id: DynesPerSquareCentimetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1097
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Pressure DynesPerSquareCentimetre(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Pressure
    content.vb: Public Shared Function DynesPerSquareCentimetre(v As Double) As Pressure
  overload: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre*
  nameWithType.vb: MetricUnitsExtensions.DynesPerSquareCentimetre(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre(Double)
  name.vb: DynesPerSquareCentimetre(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerSquareCentimetre(H.Extensions.Unit.Pressure)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InDynesPerSquareCentimetre(H.Extensions.Unit.Pressure)
  id: InDynesPerSquareCentimetre(H.Extensions.Unit.Pressure)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InDynesPerSquareCentimetre(Pressure)
  nameWithType: MetricUnitsExtensions.InDynesPerSquareCentimetre(Pressure)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerSquareCentimetre(H.Extensions.Unit.Pressure)
  type: Method
  source:
    id: InDynesPerSquareCentimetre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1101
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InDynesPerSquareCentimetre(this Pressure v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Pressure
    return:
      type: System.Double
    content.vb: Public Shared Function InDynesPerSquareCentimetre(v As Pressure) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerSquareCentimetre*
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(System.Int32)
  id: GramsPerCC(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: GramsPerCC(int)
  nameWithType: MetricUnitsExtensions.GramsPerCC(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(int)
  type: Method
  source:
    id: GramsPerCC
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1105
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Density GramsPerCC(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Density
    content.vb: Public Shared Function GramsPerCC(v As Integer) As Density
  overload: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC*
  nameWithType.vb: MetricUnitsExtensions.GramsPerCC(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(Integer)
  name.vb: GramsPerCC(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(System.Double)
  id: GramsPerCC(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: GramsPerCC(double)
  nameWithType: MetricUnitsExtensions.GramsPerCC(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(double)
  type: Method
  source:
    id: GramsPerCC
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1106
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Density GramsPerCC(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Density
    content.vb: Public Shared Function GramsPerCC(v As Double) As Density
  overload: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC*
  nameWithType.vb: MetricUnitsExtensions.GramsPerCC(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC(Double)
  name.vb: GramsPerCC(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerCC(H.Extensions.Unit.Density)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InGramsPerCC(H.Extensions.Unit.Density)
  id: InGramsPerCC(H.Extensions.Unit.Density)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InGramsPerCC(Density)
  nameWithType: MetricUnitsExtensions.InGramsPerCC(Density)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerCC(H.Extensions.Unit.Density)
  type: Method
  source:
    id: InGramsPerCC
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1110
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InGramsPerCC(this Density v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Density
    return:
      type: System.Double
    content.vb: Public Shared Function InGramsPerCC(v As Density) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerCC*
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(System.Int32)
  id: GramsPerLitre(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: GramsPerLitre(int)
  nameWithType: MetricUnitsExtensions.GramsPerLitre(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(int)
  type: Method
  source:
    id: GramsPerLitre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1114
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Density GramsPerLitre(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Density
    content.vb: Public Shared Function GramsPerLitre(v As Integer) As Density
  overload: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre*
  nameWithType.vb: MetricUnitsExtensions.GramsPerLitre(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(Integer)
  name.vb: GramsPerLitre(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(System.Double)
  id: GramsPerLitre(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: GramsPerLitre(double)
  nameWithType: MetricUnitsExtensions.GramsPerLitre(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(double)
  type: Method
  source:
    id: GramsPerLitre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1115
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Density GramsPerLitre(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Density
    content.vb: Public Shared Function GramsPerLitre(v As Double) As Density
  overload: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre*
  nameWithType.vb: MetricUnitsExtensions.GramsPerLitre(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre(Double)
  name.vb: GramsPerLitre(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerLitre(H.Extensions.Unit.Density)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InGramsPerLitre(H.Extensions.Unit.Density)
  id: InGramsPerLitre(H.Extensions.Unit.Density)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InGramsPerLitre(Density)
  nameWithType: MetricUnitsExtensions.InGramsPerLitre(Density)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerLitre(H.Extensions.Unit.Density)
  type: Method
  source:
    id: InGramsPerLitre
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1119
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InGramsPerLitre(this Density v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Density
    return:
      type: System.Double
    content.vb: Public Shared Function InGramsPerLitre(v As Density) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerLitre*
- uid: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(System.Int32)
  id: MilligramsPerCC(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MilligramsPerCC(int)
  nameWithType: MetricUnitsExtensions.MilligramsPerCC(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(int)
  type: Method
  source:
    id: MilligramsPerCC
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1123
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Density MilligramsPerCC(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Density
    content.vb: Public Shared Function MilligramsPerCC(v As Integer) As Density
  overload: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC*
  nameWithType.vb: MetricUnitsExtensions.MilligramsPerCC(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(Integer)
  name.vb: MilligramsPerCC(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(System.Double)
  id: MilligramsPerCC(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: MilligramsPerCC(double)
  nameWithType: MetricUnitsExtensions.MilligramsPerCC(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(double)
  type: Method
  source:
    id: MilligramsPerCC
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1124
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Density MilligramsPerCC(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Density
    content.vb: Public Shared Function MilligramsPerCC(v As Double) As Density
  overload: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC*
  nameWithType.vb: MetricUnitsExtensions.MilligramsPerCC(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC(Double)
  name.vb: MilligramsPerCC(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMilligramsPerCC(H.Extensions.Unit.Density)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InMilligramsPerCC(H.Extensions.Unit.Density)
  id: InMilligramsPerCC(H.Extensions.Unit.Density)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InMilligramsPerCC(Density)
  nameWithType: MetricUnitsExtensions.InMilligramsPerCC(Density)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMilligramsPerCC(H.Extensions.Unit.Density)
  type: Method
  source:
    id: InMilligramsPerCC
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1128
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InMilligramsPerCC(this Density v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Density
    return:
      type: System.Double
    content.vb: Public Shared Function InMilligramsPerCC(v As Density) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InMilligramsPerCC*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Ergs(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Ergs(System.Int32)
  id: Ergs(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Ergs(int)
  nameWithType: MetricUnitsExtensions.Ergs(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Ergs(int)
  type: Method
  source:
    id: Ergs
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1132
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy Ergs(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function Ergs(v As Integer) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.Ergs*
  nameWithType.vb: MetricUnitsExtensions.Ergs(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Ergs(Integer)
  name.vb: Ergs(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Ergs(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Ergs(System.Double)
  id: Ergs(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Ergs(double)
  nameWithType: MetricUnitsExtensions.Ergs(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Ergs(double)
  type: Method
  source:
    id: Ergs
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1133
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static Energy Ergs(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Function Ergs(v As Double) As Energy
  overload: H.Extensions.Unit.MetricUnitsExtensions.Ergs*
  nameWithType.vb: MetricUnitsExtensions.Ergs(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Ergs(Double)
  name.vb: Ergs(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InErgs(H.Extensions.Unit.Energy)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InErgs(H.Extensions.Unit.Energy)
  id: InErgs(H.Extensions.Unit.Energy)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InErgs(Energy)
  nameWithType: MetricUnitsExtensions.InErgs(Energy)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InErgs(H.Extensions.Unit.Energy)
  type: Method
  source:
    id: InErgs
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1137
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InErgs(this Energy v)
    parameters:
    - id: v
      type: H.Extensions.Unit.Energy
    return:
      type: System.Double
    content.vb: Public Shared Function InErgs(v As Energy) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InErgs*
- uid: H.Extensions.Unit.MetricUnitsExtensions.Poises(System.Int32)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Poises(System.Int32)
  id: Poises(System.Int32)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Poises(int)
  nameWithType: MetricUnitsExtensions.Poises(int)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Poises(int)
  type: Method
  source:
    id: Poises
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1141
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static CoefficientOfViscosity Poises(this int v)
    parameters:
    - id: v
      type: System.Int32
    return:
      type: H.Extensions.Unit.CoefficientOfViscosity
    content.vb: Public Shared Function Poises(v As Integer) As CoefficientOfViscosity
  overload: H.Extensions.Unit.MetricUnitsExtensions.Poises*
  nameWithType.vb: MetricUnitsExtensions.Poises(Integer)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Poises(Integer)
  name.vb: Poises(Integer)
- uid: H.Extensions.Unit.MetricUnitsExtensions.Poises(System.Double)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.Poises(System.Double)
  id: Poises(System.Double)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: Poises(double)
  nameWithType: MetricUnitsExtensions.Poises(double)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Poises(double)
  type: Method
  source:
    id: Poises
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1142
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static CoefficientOfViscosity Poises(this double v)
    parameters:
    - id: v
      type: System.Double
    return:
      type: H.Extensions.Unit.CoefficientOfViscosity
    content.vb: Public Shared Function Poises(v As Double) As CoefficientOfViscosity
  overload: H.Extensions.Unit.MetricUnitsExtensions.Poises*
  nameWithType.vb: MetricUnitsExtensions.Poises(Double)
  fullName.vb: H.Extensions.Unit.MetricUnitsExtensions.Poises(Double)
  name.vb: Poises(Double)
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPoises(H.Extensions.Unit.CoefficientOfViscosity)
  commentId: M:H.Extensions.Unit.MetricUnitsExtensions.InPoises(H.Extensions.Unit.CoefficientOfViscosity)
  id: InPoises(H.Extensions.Unit.CoefficientOfViscosity)
  isExtensionMethod: true
  parent: H.Extensions.Unit.MetricUnitsExtensions
  langs:
  - csharp
  - vb
  name: InPoises(CoefficientOfViscosity)
  nameWithType: MetricUnitsExtensions.InPoises(CoefficientOfViscosity)
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPoises(H.Extensions.Unit.CoefficientOfViscosity)
  type: Method
  source:
    id: InPoises
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\MetricUnits.cs
    startLine: 1146
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static double InPoises(this CoefficientOfViscosity v)
    parameters:
    - id: v
      type: H.Extensions.Unit.CoefficientOfViscosity
    return:
      type: System.Double
    content.vb: Public Shared Function InPoises(v As CoefficientOfViscosity) As Double
  overload: H.Extensions.Unit.MetricUnitsExtensions.InPoises*
references:
- uid: H.Extensions.Unit
  commentId: N:H.Extensions.Unit
  href: H.html
  name: H.Extensions.Unit
  nameWithType: H.Extensions.Unit
  fullName: H.Extensions.Unit
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Unit
    name: Unit
    href: H.Extensions.Unit.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Unit
    name: Unit
    href: H.Extensions.Unit.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: H.Extensions.Unit.MetricUnitsExtensions.Units*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Units
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Units_System_Int32_
  name: Units
  nameWithType: MetricUnitsExtensions.Units
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Units
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: H.Extensions.Unit.Dimensionless
  commentId: T:H.Extensions.Unit.Dimensionless
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Dimensionless.html
  name: Dimensionless
  nameWithType: Dimensionless
  fullName: H.Extensions.Unit.Dimensionless
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: H.Extensions.Unit.MetricUnitsExtensions.InUnits*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InUnits
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InUnits_H_Extensions_Unit_Dimensionless_
  name: InUnits
  nameWithType: MetricUnitsExtensions.InUnits
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InUnits
- uid: H.Extensions.Unit.MetricUnitsExtensions.Metres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Metres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Metres_System_Int32_
  name: Metres
  nameWithType: MetricUnitsExtensions.Metres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Metres
- uid: H.Extensions.Unit.Length
  commentId: T:H.Extensions.Unit.Length
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Length.html
  name: Length
  nameWithType: Length
  fullName: H.Extensions.Unit.Length
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMetres_H_Extensions_Unit_Length_
  name: InMetres
  nameWithType: MetricUnitsExtensions.InMetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.SquareMetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_SquareMetres_System_Int32_
  name: SquareMetres
  nameWithType: MetricUnitsExtensions.SquareMetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareMetres
- uid: H.Extensions.Unit.Area
  commentId: T:H.Extensions.Unit.Area
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Area.html
  name: Area
  nameWithType: Area
  fullName: H.Extensions.Unit.Area
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InSquareMetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InSquareMetres_H_Extensions_Unit_Area_
  name: InSquareMetres
  nameWithType: MetricUnitsExtensions.InSquareMetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.CubicMetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_CubicMetres_System_Int32_
  name: CubicMetres
  nameWithType: MetricUnitsExtensions.CubicMetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicMetres
- uid: H.Extensions.Unit.Volume
  commentId: T:H.Extensions.Unit.Volume
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Volume.html
  name: Volume
  nameWithType: Volume
  fullName: H.Extensions.Unit.Volume
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InCubicMetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InCubicMetres_H_Extensions_Unit_Volume_
  name: InCubicMetres
  nameWithType: MetricUnitsExtensions.InCubicMetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.Kilograms*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Kilograms
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Kilograms_System_Int32_
  name: Kilograms
  nameWithType: MetricUnitsExtensions.Kilograms
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Kilograms
- uid: H.Extensions.Unit.Mass
  commentId: T:H.Extensions.Unit.Mass
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Mass.html
  name: Mass
  nameWithType: Mass
  fullName: H.Extensions.Unit.Mass
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilograms*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilograms
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilograms_H_Extensions_Unit_Mass_
  name: InKilograms
  nameWithType: MetricUnitsExtensions.InKilograms
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilograms
- uid: H.Extensions.Unit.MetricUnitsExtensions.Seconds*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Seconds
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Seconds_System_Int32_
  name: Seconds
  nameWithType: MetricUnitsExtensions.Seconds
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Seconds
- uid: H.Extensions.Unit.Time
  commentId: T:H.Extensions.Unit.Time
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Time.html
  name: Time
  nameWithType: Time
  fullName: H.Extensions.Unit.Time
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSeconds*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InSeconds
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InSeconds_H_Extensions_Unit_Time_
  name: InSeconds
  nameWithType: MetricUnitsExtensions.InSeconds
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSeconds
- uid: H.Extensions.Unit.MetricUnitsExtensions.Ampere*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Ampere
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Ampere_System_Int32_
  name: Ampere
  nameWithType: MetricUnitsExtensions.Ampere
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Ampere
- uid: H.Extensions.Unit.Current
  commentId: T:H.Extensions.Unit.Current
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Current.html
  name: Current
  nameWithType: Current
  fullName: H.Extensions.Unit.Current
- uid: H.Extensions.Unit.MetricUnitsExtensions.InAmpere*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InAmpere
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InAmpere_H_Extensions_Unit_Current_
  name: InAmpere
  nameWithType: MetricUnitsExtensions.InAmpere
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InAmpere
- uid: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_DegreesKelvin_System_Int32_
  name: DegreesKelvin
  nameWithType: MetricUnitsExtensions.DegreesKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DegreesKelvin
- uid: H.Extensions.Unit.TemperatureChange
  commentId: T:H.Extensions.Unit.TemperatureChange
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.TemperatureChange.html
  name: TemperatureChange
  nameWithType: TemperatureChange
  fullName: H.Extensions.Unit.TemperatureChange
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDegreesKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InDegreesKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InDegreesKelvin_H_Extensions_Unit_TemperatureChange_
  name: InDegreesKelvin
  nameWithType: MetricUnitsExtensions.InDegreesKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDegreesKelvin
- uid: H.Extensions.Unit.MetricUnitsExtensions.Mole*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Mole
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Mole_System_Int32_
  name: Mole
  nameWithType: MetricUnitsExtensions.Mole
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Mole
- uid: H.Extensions.Unit.AmountOfSubstance
  commentId: T:H.Extensions.Unit.AmountOfSubstance
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.AmountOfSubstance.html
  name: AmountOfSubstance
  nameWithType: AmountOfSubstance
  fullName: H.Extensions.Unit.AmountOfSubstance
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMole*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMole
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMole_H_Extensions_Unit_AmountOfSubstance_
  name: InMole
  nameWithType: MetricUnitsExtensions.InMole
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMole
- uid: H.Extensions.Unit.MetricUnitsExtensions.Candela*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Candela
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Candela_System_Int32_
  name: Candela
  nameWithType: MetricUnitsExtensions.Candela
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Candela
- uid: H.Extensions.Unit.LuminousIntensity
  commentId: T:H.Extensions.Unit.LuminousIntensity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.LuminousIntensity.html
  name: LuminousIntensity
  nameWithType: LuminousIntensity
  fullName: H.Extensions.Unit.LuminousIntensity
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCandela*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InCandela
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InCandela_H_Extensions_Unit_LuminousIntensity_
  name: InCandela
  nameWithType: MetricUnitsExtensions.InCandela
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCandela
- uid: H.Extensions.Unit.MetricUnitsExtensions.Radians*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Radians
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Radians_System_Int32_
  name: Radians
  nameWithType: MetricUnitsExtensions.Radians
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Radians
- uid: H.Extensions.Unit.Angle
  commentId: T:H.Extensions.Unit.Angle
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Angle.html
  name: Angle
  nameWithType: Angle
  fullName: H.Extensions.Unit.Angle
- uid: H.Extensions.Unit.MetricUnitsExtensions.InRadians*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InRadians
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InRadians_H_Extensions_Unit_Angle_
  name: InRadians
  nameWithType: MetricUnitsExtensions.InRadians
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InRadians
- uid: H.Extensions.Unit.MetricUnitsExtensions.Steradians*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Steradians
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Steradians_System_Int32_
  name: Steradians
  nameWithType: MetricUnitsExtensions.Steradians
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Steradians
- uid: H.Extensions.Unit.SolidAngle
  commentId: T:H.Extensions.Unit.SolidAngle
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.SolidAngle.html
  name: SolidAngle
  nameWithType: SolidAngle
  fullName: H.Extensions.Unit.SolidAngle
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSteradians*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InSteradians
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InSteradians_H_Extensions_Unit_SolidAngle_
  name: InSteradians
  nameWithType: MetricUnitsExtensions.InSteradians
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSteradians
- uid: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_MetresPerSecond_System_Int32_
  name: MetresPerSecond
  nameWithType: MetricUnitsExtensions.MetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecond
- uid: H.Extensions.Unit.Velocity
  commentId: T:H.Extensions.Unit.Velocity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Velocity.html
  name: Velocity
  nameWithType: Velocity
  fullName: H.Extensions.Unit.Velocity
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMetresPerSecond_H_Extensions_Unit_Velocity_
  name: InMetresPerSecond
  nameWithType: MetricUnitsExtensions.InMetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_MetresPerSecondSquared_System_Int32_
  name: MetresPerSecondSquared
  nameWithType: MetricUnitsExtensions.MetresPerSecondSquared
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MetresPerSecondSquared
- uid: H.Extensions.Unit.Acceleration
  commentId: T:H.Extensions.Unit.Acceleration
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Acceleration.html
  name: Acceleration
  nameWithType: Acceleration
  fullName: H.Extensions.Unit.Acceleration
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecondSquared*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecondSquared
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMetresPerSecondSquared_H_Extensions_Unit_Acceleration_
  name: InMetresPerSecondSquared
  nameWithType: MetricUnitsExtensions.InMetresPerSecondSquared
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMetresPerSecondSquared
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_KilogramMetresPerSecond_System_Int32_
  name: KilogramMetresPerSecond
  nameWithType: MetricUnitsExtensions.KilogramMetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetresPerSecond
- uid: H.Extensions.Unit.Momentum
  commentId: T:H.Extensions.Unit.Momentum
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Momentum.html
  name: Momentum
  nameWithType: Momentum
  fullName: H.Extensions.Unit.Momentum
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilogramMetresPerSecond_H_Extensions_Unit_Momentum_
  name: InKilogramMetresPerSecond
  nameWithType: MetricUnitsExtensions.InKilogramMetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetresPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_KilogramsPerCubicMetre_System_Int32_
  name: KilogramsPerCubicMetre
  nameWithType: MetricUnitsExtensions.KilogramsPerCubicMetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerCubicMetre
- uid: H.Extensions.Unit.Density
  commentId: T:H.Extensions.Unit.Density
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Density.html
  name: Density
  nameWithType: Density
  fullName: H.Extensions.Unit.Density
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerCubicMetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerCubicMetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilogramsPerCubicMetre_H_Extensions_Unit_Density_
  name: InKilogramsPerCubicMetre
  nameWithType: MetricUnitsExtensions.InKilogramsPerCubicMetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerCubicMetre
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_KilogramsPerMole_System_Int32_
  name: KilogramsPerMole
  nameWithType: MetricUnitsExtensions.KilogramsPerMole
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerMole
- uid: H.Extensions.Unit.MolarMass
  commentId: T:H.Extensions.Unit.MolarMass
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MolarMass.html
  name: MolarMass
  nameWithType: MolarMass
  fullName: H.Extensions.Unit.MolarMass
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerMole*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerMole
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilogramsPerMole_H_Extensions_Unit_MolarMass_
  name: InKilogramsPerMole
  nameWithType: MetricUnitsExtensions.InKilogramsPerMole
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerMole
- uid: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_MolesPerCubicMetre_System_Int32_
  name: MolesPerCubicMetre
  nameWithType: MetricUnitsExtensions.MolesPerCubicMetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MolesPerCubicMetre
- uid: H.Extensions.Unit.MolarConcentration
  commentId: T:H.Extensions.Unit.MolarConcentration
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MolarConcentration.html
  name: MolarConcentration
  nameWithType: MolarConcentration
  fullName: H.Extensions.Unit.MolarConcentration
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerCubicMetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMolesPerCubicMetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMolesPerCubicMetre_H_Extensions_Unit_MolarConcentration_
  name: InMolesPerCubicMetre
  nameWithType: MetricUnitsExtensions.InMolesPerCubicMetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerCubicMetre
- uid: H.Extensions.Unit.MetricUnitsExtensions.Newtons*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Newtons
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Newtons_System_Int32_
  name: Newtons
  nameWithType: MetricUnitsExtensions.Newtons
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Newtons
- uid: H.Extensions.Unit.Force
  commentId: T:H.Extensions.Unit.Force
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Force.html
  name: Force
  nameWithType: Force
  fullName: H.Extensions.Unit.Force
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNewtons*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InNewtons
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InNewtons_H_Extensions_Unit_Force_
  name: InNewtons
  nameWithType: MetricUnitsExtensions.InNewtons
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNewtons
- uid: H.Extensions.Unit.MetricUnitsExtensions.Joules*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Joules
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Joules_System_Int32_
  name: Joules
  nameWithType: MetricUnitsExtensions.Joules
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Joules
- uid: H.Extensions.Unit.Energy
  commentId: T:H.Extensions.Unit.Energy
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Energy.html
  name: Energy
  nameWithType: Energy
  fullName: H.Extensions.Unit.Energy
- uid: H.Extensions.Unit.MetricUnitsExtensions.InJoules*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InJoules
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InJoules_H_Extensions_Unit_Energy_
  name: InJoules
  nameWithType: MetricUnitsExtensions.InJoules
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InJoules
- uid: H.Extensions.Unit.MetricUnitsExtensions.Watts*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Watts
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Watts_System_Int32_
  name: Watts
  nameWithType: MetricUnitsExtensions.Watts
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Watts
- uid: H.Extensions.Unit.Power
  commentId: T:H.Extensions.Unit.Power
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Power.html
  name: Power
  nameWithType: Power
  fullName: H.Extensions.Unit.Power
- uid: H.Extensions.Unit.MetricUnitsExtensions.InWatts*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InWatts
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InWatts_H_Extensions_Unit_Power_
  name: InWatts
  nameWithType: MetricUnitsExtensions.InWatts
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InWatts
- uid: H.Extensions.Unit.MetricUnitsExtensions.Pascals*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Pascals
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Pascals_System_Int32_
  name: Pascals
  nameWithType: MetricUnitsExtensions.Pascals
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Pascals
- uid: H.Extensions.Unit.Pressure
  commentId: T:H.Extensions.Unit.Pressure
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Pressure.html
  name: Pressure
  nameWithType: Pressure
  fullName: H.Extensions.Unit.Pressure
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPascals*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InPascals
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InPascals_H_Extensions_Unit_Pressure_
  name: InPascals
  nameWithType: MetricUnitsExtensions.InPascals
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPascals
- uid: H.Extensions.Unit.MetricUnitsExtensions.Hertz*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Hertz
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Hertz_System_Int32_
  name: Hertz
  nameWithType: MetricUnitsExtensions.Hertz
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Hertz
- uid: H.Extensions.Unit.Frequency
  commentId: T:H.Extensions.Unit.Frequency
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Frequency.html
  name: Frequency
  nameWithType: Frequency
  fullName: H.Extensions.Unit.Frequency
- uid: H.Extensions.Unit.MetricUnitsExtensions.InHertz*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InHertz
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InHertz_H_Extensions_Unit_Frequency_
  name: InHertz
  nameWithType: MetricUnitsExtensions.InHertz
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InHertz
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_KilogramsPerSecond_System_Int32_
  name: KilogramsPerSecond
  nameWithType: MetricUnitsExtensions.KilogramsPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramsPerSecond
- uid: H.Extensions.Unit.MassFlowRate
  commentId: T:H.Extensions.Unit.MassFlowRate
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MassFlowRate.html
  name: MassFlowRate
  nameWithType: MassFlowRate
  fullName: H.Extensions.Unit.MassFlowRate
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilogramsPerSecond_H_Extensions_Unit_MassFlowRate_
  name: InKilogramsPerSecond
  nameWithType: MetricUnitsExtensions.InKilogramsPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramsPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_SquareMetresPerSecond_System_Int32_
  name: SquareMetresPerSecond
  nameWithType: MetricUnitsExtensions.SquareMetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareMetresPerSecond
- uid: H.Extensions.Unit.KinematicViscosity
  commentId: T:H.Extensions.Unit.KinematicViscosity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.KinematicViscosity.html
  name: KinematicViscosity
  nameWithType: KinematicViscosity
  fullName: H.Extensions.Unit.KinematicViscosity
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InSquareMetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InSquareMetresPerSecond_H_Extensions_Unit_KinematicViscosity_
  name: InSquareMetresPerSecond
  nameWithType: MetricUnitsExtensions.InSquareMetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareMetresPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_CubicMetresPerSecond_System_Int32_
  name: CubicMetresPerSecond
  nameWithType: MetricUnitsExtensions.CubicMetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicMetresPerSecond
- uid: H.Extensions.Unit.VolumeFlowRate
  commentId: T:H.Extensions.Unit.VolumeFlowRate
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.VolumeFlowRate.html
  name: VolumeFlowRate
  nameWithType: VolumeFlowRate
  fullName: H.Extensions.Unit.VolumeFlowRate
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InCubicMetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InCubicMetresPerSecond_H_Extensions_Unit_VolumeFlowRate_
  name: InCubicMetresPerSecond
  nameWithType: MetricUnitsExtensions.InCubicMetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCubicMetresPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.Volts*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Volts
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Volts_System_Int32_
  name: Volts
  nameWithType: MetricUnitsExtensions.Volts
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Volts
- uid: H.Extensions.Unit.ElectricPotential
  commentId: T:H.Extensions.Unit.ElectricPotential
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ElectricPotential.html
  name: ElectricPotential
  nameWithType: ElectricPotential
  fullName: H.Extensions.Unit.ElectricPotential
- uid: H.Extensions.Unit.MetricUnitsExtensions.InVolts*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InVolts
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InVolts_H_Extensions_Unit_ElectricPotential_
  name: InVolts
  nameWithType: MetricUnitsExtensions.InVolts
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InVolts
- uid: H.Extensions.Unit.MetricUnitsExtensions.Ohms*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Ohms
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Ohms_System_Int32_
  name: Ohms
  nameWithType: MetricUnitsExtensions.Ohms
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Ohms
- uid: H.Extensions.Unit.Resistance
  commentId: T:H.Extensions.Unit.Resistance
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Resistance.html
  name: Resistance
  nameWithType: Resistance
  fullName: H.Extensions.Unit.Resistance
- uid: H.Extensions.Unit.MetricUnitsExtensions.InOhms*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InOhms
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InOhms_H_Extensions_Unit_Resistance_
  name: InOhms
  nameWithType: MetricUnitsExtensions.InOhms
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InOhms
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_KilogramMetreSquared_System_Int32_
  name: KilogramMetreSquared
  nameWithType: MetricUnitsExtensions.KilogramMetreSquared
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquared
- uid: H.Extensions.Unit.MomentOfInertia
  commentId: T:H.Extensions.Unit.MomentOfInertia
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MomentOfInertia.html
  name: MomentOfInertia
  nameWithType: MomentOfInertia
  fullName: H.Extensions.Unit.MomentOfInertia
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquared*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquared
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilogramMetreSquared_H_Extensions_Unit_MomentOfInertia_
  name: InKilogramMetreSquared
  nameWithType: MetricUnitsExtensions.InKilogramMetreSquared
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquared
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_KilogramMetreSquaredPerSecond_System_Int32_
  name: KilogramMetreSquaredPerSecond
  nameWithType: MetricUnitsExtensions.KilogramMetreSquaredPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramMetreSquaredPerSecond
- uid: H.Extensions.Unit.AngularMomentum
  commentId: T:H.Extensions.Unit.AngularMomentum
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.AngularMomentum.html
  name: AngularMomentum
  nameWithType: AngularMomentum
  fullName: H.Extensions.Unit.AngularMomentum
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquaredPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquaredPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilogramMetreSquaredPerSecond_H_Extensions_Unit_AngularMomentum_
  name: InKilogramMetreSquaredPerSecond
  nameWithType: MetricUnitsExtensions.InKilogramMetreSquaredPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramMetreSquaredPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_NewtonsPerMetre_System_Int32_
  name: NewtonsPerMetre
  nameWithType: MetricUnitsExtensions.NewtonsPerMetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.NewtonsPerMetre
- uid: H.Extensions.Unit.SurfaceTension
  commentId: T:H.Extensions.Unit.SurfaceTension
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.SurfaceTension.html
  name: SurfaceTension
  nameWithType: SurfaceTension
  fullName: H.Extensions.Unit.SurfaceTension
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNewtonsPerMetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InNewtonsPerMetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InNewtonsPerMetre_H_Extensions_Unit_SurfaceTension_
  name: InNewtonsPerMetre
  nameWithType: MetricUnitsExtensions.InNewtonsPerMetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNewtonsPerMetre
- uid: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_PascalSeconds_System_Int32_
  name: PascalSeconds
  nameWithType: MetricUnitsExtensions.PascalSeconds
  fullName: H.Extensions.Unit.MetricUnitsExtensions.PascalSeconds
- uid: H.Extensions.Unit.CoefficientOfViscosity
  commentId: T:H.Extensions.Unit.CoefficientOfViscosity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.CoefficientOfViscosity.html
  name: CoefficientOfViscosity
  nameWithType: CoefficientOfViscosity
  fullName: H.Extensions.Unit.CoefficientOfViscosity
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPascalSeconds*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InPascalSeconds
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InPascalSeconds_H_Extensions_Unit_CoefficientOfViscosity_
  name: InPascalSeconds
  nameWithType: MetricUnitsExtensions.InPascalSeconds
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPascalSeconds
- uid: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_PerDegreeKelvin_System_Int32_
  name: PerDegreeKelvin
  nameWithType: MetricUnitsExtensions.PerDegreeKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.PerDegreeKelvin
- uid: H.Extensions.Unit.CoefficientOfThermalExpansion
  commentId: T:H.Extensions.Unit.CoefficientOfThermalExpansion
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.CoefficientOfThermalExpansion.html
  name: CoefficientOfThermalExpansion
  nameWithType: CoefficientOfThermalExpansion
  fullName: H.Extensions.Unit.CoefficientOfThermalExpansion
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPerDegreeKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InPerDegreeKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InPerDegreeKelvin_H_Extensions_Unit_CoefficientOfThermalExpansion_
  name: InPerDegreeKelvin
  nameWithType: MetricUnitsExtensions.InPerDegreeKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPerDegreeKelvin
- uid: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_JoulesPerDegreeKelvin_System_Int32_
  name: JoulesPerDegreeKelvin
  nameWithType: MetricUnitsExtensions.JoulesPerDegreeKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvin
- uid: H.Extensions.Unit.ThermalCapacity
  commentId: T:H.Extensions.Unit.ThermalCapacity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ThermalCapacity.html
  name: ThermalCapacity
  nameWithType: ThermalCapacity
  fullName: H.Extensions.Unit.ThermalCapacity
- uid: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InJoulesPerDegreeKelvin_H_Extensions_Unit_ThermalCapacity_
  name: InJoulesPerDegreeKelvin
  nameWithType: MetricUnitsExtensions.InJoulesPerDegreeKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvin
- uid: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_JoulesPerKilogramPerDegreeKelvin_System_Int32_
  name: JoulesPerKilogramPerDegreeKelvin
  nameWithType: MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerKilogramPerDegreeKelvin
- uid: H.Extensions.Unit.SpecificHeat
  commentId: T:H.Extensions.Unit.SpecificHeat
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.SpecificHeat.html
  name: SpecificHeat
  nameWithType: SpecificHeat
  fullName: H.Extensions.Unit.SpecificHeat
- uid: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InJoulesPerKilogramPerDegreeKelvin_H_Extensions_Unit_SpecificHeat_
  name: InJoulesPerKilogramPerDegreeKelvin
  nameWithType: MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerKilogramPerDegreeKelvin
- uid: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_JoulesPerDegreeKelvinPerMole_System_Int32_
  name: JoulesPerDegreeKelvinPerMole
  nameWithType: MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole
  fullName: H.Extensions.Unit.MetricUnitsExtensions.JoulesPerDegreeKelvinPerMole
- uid: H.Extensions.Unit.MolarSpecificHeat
  commentId: T:H.Extensions.Unit.MolarSpecificHeat
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MolarSpecificHeat.html
  name: MolarSpecificHeat
  nameWithType: MolarSpecificHeat
  fullName: H.Extensions.Unit.MolarSpecificHeat
- uid: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InJoulesPerDegreeKelvinPerMole_H_Extensions_Unit_MolarSpecificHeat_
  name: InJoulesPerDegreeKelvinPerMole
  nameWithType: MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InJoulesPerDegreeKelvinPerMole
- uid: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_WattsPerMetrePerDegree_System_Int32_
  name: WattsPerMetrePerDegree
  nameWithType: MetricUnitsExtensions.WattsPerMetrePerDegree
  fullName: H.Extensions.Unit.MetricUnitsExtensions.WattsPerMetrePerDegree
- uid: H.Extensions.Unit.ThermalConductivity
  commentId: T:H.Extensions.Unit.ThermalConductivity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ThermalConductivity.html
  name: ThermalConductivity
  nameWithType: ThermalConductivity
  fullName: H.Extensions.Unit.ThermalConductivity
- uid: H.Extensions.Unit.MetricUnitsExtensions.InWattsPerMetrePerDegree*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InWattsPerMetrePerDegree
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InWattsPerMetrePerDegree_H_Extensions_Unit_ThermalConductivity_
  name: InWattsPerMetrePerDegree
  nameWithType: MetricUnitsExtensions.InWattsPerMetrePerDegree
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InWattsPerMetrePerDegree
- uid: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.OhmMetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_OhmMetres_System_Int32_
  name: OhmMetres
  nameWithType: MetricUnitsExtensions.OhmMetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.OhmMetres
- uid: H.Extensions.Unit.Resistivity
  commentId: T:H.Extensions.Unit.Resistivity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Resistivity.html
  name: Resistivity
  nameWithType: Resistivity
  fullName: H.Extensions.Unit.Resistivity
- uid: H.Extensions.Unit.MetricUnitsExtensions.InOhmMetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InOhmMetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InOhmMetres_H_Extensions_Unit_Resistivity_
  name: InOhmMetres
  nameWithType: MetricUnitsExtensions.InOhmMetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InOhmMetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.Lumen*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Lumen
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Lumen_System_Int32_
  name: Lumen
  nameWithType: MetricUnitsExtensions.Lumen
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Lumen
- uid: H.Extensions.Unit.LuminousFlux
  commentId: T:H.Extensions.Unit.LuminousFlux
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.LuminousFlux.html
  name: LuminousFlux
  nameWithType: LuminousFlux
  fullName: H.Extensions.Unit.LuminousFlux
- uid: H.Extensions.Unit.MetricUnitsExtensions.InLumen*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InLumen
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InLumen_H_Extensions_Unit_LuminousFlux_
  name: InLumen
  nameWithType: MetricUnitsExtensions.InLumen
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InLumen
- uid: H.Extensions.Unit.MetricUnitsExtensions.Lux*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Lux
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Lux_System_Int32_
  name: Lux
  nameWithType: MetricUnitsExtensions.Lux
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Lux
- uid: H.Extensions.Unit.Illuminance
  commentId: T:H.Extensions.Unit.Illuminance
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Illuminance.html
  name: Illuminance
  nameWithType: Illuminance
  fullName: H.Extensions.Unit.Illuminance
- uid: H.Extensions.Unit.MetricUnitsExtensions.InLux*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InLux
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InLux_H_Extensions_Unit_Illuminance_
  name: InLux
  nameWithType: MetricUnitsExtensions.InLux
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InLux
- uid: H.Extensions.Unit.MetricUnitsExtensions.Percent*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Percent
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Percent_System_Int32_
  name: Percent
  nameWithType: MetricUnitsExtensions.Percent
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Percent
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPercent*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InPercent
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InPercent_H_Extensions_Unit_Dimensionless_
  name: InPercent
  nameWithType: MetricUnitsExtensions.InPercent
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPercent
- uid: H.Extensions.Unit.MetricUnitsExtensions.Dozen*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Dozen
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Dozen_System_Int32_
  name: Dozen
  nameWithType: MetricUnitsExtensions.Dozen
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Dozen
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDozen*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InDozen
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InDozen_H_Extensions_Unit_Dimensionless_
  name: InDozen
  nameWithType: MetricUnitsExtensions.InDozen
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDozen
- uid: H.Extensions.Unit.MetricUnitsExtensions.Hundreds*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Hundreds
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Hundreds_System_Int32_
  name: Hundreds
  nameWithType: MetricUnitsExtensions.Hundreds
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Hundreds
- uid: H.Extensions.Unit.MetricUnitsExtensions.InHundreds*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InHundreds
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InHundreds_H_Extensions_Unit_Dimensionless_
  name: InHundreds
  nameWithType: MetricUnitsExtensions.InHundreds
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InHundreds
- uid: H.Extensions.Unit.MetricUnitsExtensions.Thousands*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Thousands
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Thousands_System_Int32_
  name: Thousands
  nameWithType: MetricUnitsExtensions.Thousands
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Thousands
- uid: H.Extensions.Unit.MetricUnitsExtensions.InThousands*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InThousands
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InThousands_H_Extensions_Unit_Dimensionless_
  name: InThousands
  nameWithType: MetricUnitsExtensions.InThousands
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InThousands
- uid: H.Extensions.Unit.MetricUnitsExtensions.Millions*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Millions
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Millions_System_Int32_
  name: Millions
  nameWithType: MetricUnitsExtensions.Millions
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Millions
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMillions*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMillions
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMillions_H_Extensions_Unit_Dimensionless_
  name: InMillions
  nameWithType: MetricUnitsExtensions.InMillions
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMillions
- uid: H.Extensions.Unit.MetricUnitsExtensions.Billions*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Billions
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Billions_System_Int32_
  name: Billions
  nameWithType: MetricUnitsExtensions.Billions
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Billions
- uid: H.Extensions.Unit.MetricUnitsExtensions.InBillions*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InBillions
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InBillions_H_Extensions_Unit_Dimensionless_
  name: InBillions
  nameWithType: MetricUnitsExtensions.InBillions
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InBillions
- uid: H.Extensions.Unit.MetricUnitsExtensions.Trillions*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Trillions
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Trillions_System_Int32_
  name: Trillions
  nameWithType: MetricUnitsExtensions.Trillions
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Trillions
- uid: H.Extensions.Unit.MetricUnitsExtensions.InTrillions*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InTrillions
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InTrillions_H_Extensions_Unit_Dimensionless_
  name: InTrillions
  nameWithType: MetricUnitsExtensions.InTrillions
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InTrillions
- uid: H.Extensions.Unit.MetricUnitsExtensions.Grams*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Grams
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Grams_System_Int32_
  name: Grams
  nameWithType: MetricUnitsExtensions.Grams
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Grams
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGrams*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InGrams
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InGrams_H_Extensions_Unit_Mass_
  name: InGrams
  nameWithType: MetricUnitsExtensions.InGrams
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGrams
- uid: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.MilliGrams
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_MilliGrams_System_Int32_
  name: MilliGrams
  nameWithType: MetricUnitsExtensions.MilliGrams
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MilliGrams
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMilliGrams*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMilliGrams
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMilliGrams_H_Extensions_Unit_Mass_
  name: InMilliGrams
  nameWithType: MetricUnitsExtensions.InMilliGrams
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMilliGrams
- uid: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.MicroGrams
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_MicroGrams_System_Int32_
  name: MicroGrams
  nameWithType: MetricUnitsExtensions.MicroGrams
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MicroGrams
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMicroGrams*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMicroGrams
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMicroGrams_H_Extensions_Unit_Mass_
  name: InMicroGrams
  nameWithType: MetricUnitsExtensions.InMicroGrams
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMicroGrams
- uid: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.NanoGrams
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_NanoGrams_System_Int32_
  name: NanoGrams
  nameWithType: MetricUnitsExtensions.NanoGrams
  fullName: H.Extensions.Unit.MetricUnitsExtensions.NanoGrams
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNanoGrams*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InNanoGrams
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InNanoGrams_H_Extensions_Unit_Mass_
  name: InNanoGrams
  nameWithType: MetricUnitsExtensions.InNanoGrams
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNanoGrams
- uid: H.Extensions.Unit.MetricUnitsExtensions.Tonnes*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Tonnes
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Tonnes_System_Int32_
  name: Tonnes
  nameWithType: MetricUnitsExtensions.Tonnes
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Tonnes
- uid: H.Extensions.Unit.MetricUnitsExtensions.InTonnes*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InTonnes
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InTonnes_H_Extensions_Unit_Mass_
  name: InTonnes
  nameWithType: MetricUnitsExtensions.InTonnes
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InTonnes
- uid: H.Extensions.Unit.MetricUnitsExtensions.Daltons*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Daltons
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Daltons_System_Int32_
  name: Daltons
  nameWithType: MetricUnitsExtensions.Daltons
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Daltons
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDaltons*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InDaltons
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InDaltons_H_Extensions_Unit_Mass_
  name: InDaltons
  nameWithType: MetricUnitsExtensions.InDaltons
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDaltons
- uid: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.NanoMoles
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_NanoMoles_System_Int32_
  name: NanoMoles
  nameWithType: MetricUnitsExtensions.NanoMoles
  fullName: H.Extensions.Unit.MetricUnitsExtensions.NanoMoles
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNanoMoles*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InNanoMoles
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InNanoMoles_H_Extensions_Unit_AmountOfSubstance_
  name: InNanoMoles
  nameWithType: MetricUnitsExtensions.InNanoMoles
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNanoMoles
- uid: H.Extensions.Unit.MetricUnitsExtensions.Kilometres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Kilometres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Kilometres_System_Int32_
  name: Kilometres
  nameWithType: MetricUnitsExtensions.Kilometres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Kilometres
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilometres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilometres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilometres_H_Extensions_Unit_Length_
  name: InKilometres
  nameWithType: MetricUnitsExtensions.InKilometres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilometres
- uid: H.Extensions.Unit.MetricUnitsExtensions.Centimetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Centimetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Centimetres_System_Int32_
  name: Centimetres
  nameWithType: MetricUnitsExtensions.Centimetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Centimetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCentimetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InCentimetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InCentimetres_H_Extensions_Unit_Length_
  name: InCentimetres
  nameWithType: MetricUnitsExtensions.InCentimetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCentimetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.Millimetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Millimetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Millimetres_System_Int32_
  name: Millimetres
  nameWithType: MetricUnitsExtensions.Millimetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Millimetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMillimetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMillimetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMillimetres_H_Extensions_Unit_Length_
  name: InMillimetres
  nameWithType: MetricUnitsExtensions.InMillimetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMillimetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.Micrometres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Micrometres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Micrometres_System_Int32_
  name: Micrometres
  nameWithType: MetricUnitsExtensions.Micrometres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Micrometres
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMicrometres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMicrometres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMicrometres_H_Extensions_Unit_Length_
  name: InMicrometres
  nameWithType: MetricUnitsExtensions.InMicrometres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMicrometres
- uid: H.Extensions.Unit.MetricUnitsExtensions.Nanometres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Nanometres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Nanometres_System_Int32_
  name: Nanometres
  nameWithType: MetricUnitsExtensions.Nanometres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Nanometres
- uid: H.Extensions.Unit.MetricUnitsExtensions.InNanometres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InNanometres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InNanometres_H_Extensions_Unit_Length_
  name: InNanometres
  nameWithType: MetricUnitsExtensions.InNanometres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InNanometres
- uid: H.Extensions.Unit.MetricUnitsExtensions.Angstroms*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Angstroms
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Angstroms_System_Int32_
  name: Angstroms
  nameWithType: MetricUnitsExtensions.Angstroms
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Angstroms
- uid: H.Extensions.Unit.MetricUnitsExtensions.InAngstroms*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InAngstroms
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InAngstroms_H_Extensions_Unit_Length_
  name: InAngstroms
  nameWithType: MetricUnitsExtensions.InAngstroms
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InAngstroms
- uid: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_AstronomicalUnits_System_Int32_
  name: AstronomicalUnits
  nameWithType: MetricUnitsExtensions.AstronomicalUnits
  fullName: H.Extensions.Unit.MetricUnitsExtensions.AstronomicalUnits
- uid: H.Extensions.Unit.MetricUnitsExtensions.InAstronomicalUnits*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InAstronomicalUnits
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InAstronomicalUnits_H_Extensions_Unit_Length_
  name: InAstronomicalUnits
  nameWithType: MetricUnitsExtensions.InAstronomicalUnits
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InAstronomicalUnits
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_SquareCentimetres_System_Int32_
  name: SquareCentimetres
  nameWithType: MetricUnitsExtensions.SquareCentimetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InSquareCentimetres_H_Extensions_Unit_Area_
  name: InSquareCentimetres
  nameWithType: MetricUnitsExtensions.InSquareCentimetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.Hectares*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Hectares
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Hectares_System_Int32_
  name: Hectares
  nameWithType: MetricUnitsExtensions.Hectares
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Hectares
- uid: H.Extensions.Unit.MetricUnitsExtensions.InHectares*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InHectares
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InHectares_H_Extensions_Unit_Area_
  name: InHectares
  nameWithType: MetricUnitsExtensions.InHectares
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InHectares
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_CubicCentimetres_System_Int32_
  name: CubicCentimetres
  nameWithType: MetricUnitsExtensions.CubicCentimetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InCubicCentimetres_H_Extensions_Unit_Volume_
  name: InCubicCentimetres
  nameWithType: MetricUnitsExtensions.InCubicCentimetres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetres
- uid: H.Extensions.Unit.MetricUnitsExtensions.Litres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Litres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Litres_System_Int32_
  name: Litres
  nameWithType: MetricUnitsExtensions.Litres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Litres
- uid: H.Extensions.Unit.MetricUnitsExtensions.InLitres*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InLitres
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InLitres_H_Extensions_Unit_Volume_
  name: InLitres
  nameWithType: MetricUnitsExtensions.InLitres
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InLitres
- uid: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_CentimetersPerSecond_System_Int32_
  name: CentimetersPerSecond
  nameWithType: MetricUnitsExtensions.CentimetersPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CentimetersPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCentimetersPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InCentimetersPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InCentimetersPerSecond_H_Extensions_Unit_Velocity_
  name: InCentimetersPerSecond
  nameWithType: MetricUnitsExtensions.InCentimetersPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCentimetersPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_KilometresPerHour_System_Int32_
  name: KilometresPerHour
  nameWithType: MetricUnitsExtensions.KilometresPerHour
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilometresPerHour
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilometresPerHour*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilometresPerHour
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilometresPerHour_H_Extensions_Unit_Velocity_
  name: InKilometresPerHour
  nameWithType: MetricUnitsExtensions.InKilometresPerHour
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilometresPerHour
- uid: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_MillimetresOfMercury_System_Int32_
  name: MillimetresOfMercury
  nameWithType: MetricUnitsExtensions.MillimetresOfMercury
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MillimetresOfMercury
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMillimetresOfMercury*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMillimetresOfMercury
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMillimetresOfMercury_H_Extensions_Unit_Pressure_
  name: InMillimetresOfMercury
  nameWithType: MetricUnitsExtensions.InMillimetresOfMercury
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMillimetresOfMercury
- uid: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_AccelerationOfGravity_System_Int32_
  name: AccelerationOfGravity
  nameWithType: MetricUnitsExtensions.AccelerationOfGravity
  fullName: H.Extensions.Unit.MetricUnitsExtensions.AccelerationOfGravity
- uid: H.Extensions.Unit.MetricUnitsExtensions.InAccelerationOfGravity*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InAccelerationOfGravity
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InAccelerationOfGravity_H_Extensions_Unit_Acceleration_
  name: InAccelerationOfGravity
  nameWithType: MetricUnitsExtensions.InAccelerationOfGravity
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InAccelerationOfGravity
- uid: H.Extensions.Unit.MetricUnitsExtensions.Colories*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Colories
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Colories_System_Int32_
  name: Colories
  nameWithType: MetricUnitsExtensions.Colories
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Colories
- uid: H.Extensions.Unit.MetricUnitsExtensions.InColories*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InColories
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InColories_H_Extensions_Unit_Energy_
  name: InColories
  nameWithType: MetricUnitsExtensions.InColories
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InColories
- uid: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_ElectronVolts_System_Int32_
  name: ElectronVolts
  nameWithType: MetricUnitsExtensions.ElectronVolts
  fullName: H.Extensions.Unit.MetricUnitsExtensions.ElectronVolts
- uid: H.Extensions.Unit.MetricUnitsExtensions.InElectronVolts*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InElectronVolts
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InElectronVolts_H_Extensions_Unit_Energy_
  name: InElectronVolts
  nameWithType: MetricUnitsExtensions.InElectronVolts
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InElectronVolts
- uid: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Kilowatts
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Kilowatts_System_Int32_
  name: Kilowatts
  nameWithType: MetricUnitsExtensions.Kilowatts
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Kilowatts
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilowatts*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilowatts
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilowatts_H_Extensions_Unit_Power_
  name: InKilowatts
  nameWithType: MetricUnitsExtensions.InKilowatts
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilowatts
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.KilowattHours
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_KilowattHours_System_Int32_
  name: KilowattHours
  nameWithType: MetricUnitsExtensions.KilowattHours
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilowattHours
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilowattHours*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilowattHours
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilowattHours_H_Extensions_Unit_Energy_
  name: InKilowattHours
  nameWithType: MetricUnitsExtensions.InKilowattHours
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilowattHours
- uid: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_TonnesOfOilEquivalent_System_Int32_
  name: TonnesOfOilEquivalent
  nameWithType: MetricUnitsExtensions.TonnesOfOilEquivalent
  fullName: H.Extensions.Unit.MetricUnitsExtensions.TonnesOfOilEquivalent
- uid: H.Extensions.Unit.MetricUnitsExtensions.InTonnesOfOilEquivalent*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InTonnesOfOilEquivalent
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InTonnesOfOilEquivalent_H_Extensions_Unit_Energy_
  name: InTonnesOfOilEquivalent
  nameWithType: MetricUnitsExtensions.InTonnesOfOilEquivalent
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InTonnesOfOilEquivalent
- uid: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_DegreesCelsius_System_Int32_
  name: DegreesCelsius
  nameWithType: MetricUnitsExtensions.DegreesCelsius
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DegreesCelsius
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDegreesCelsius*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InDegreesCelsius
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InDegreesCelsius_H_Extensions_Unit_TemperatureChange_
  name: InDegreesCelsius
  nameWithType: MetricUnitsExtensions.InDegreesCelsius
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDegreesCelsius
- uid: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_CaloriesPerDegreeKelvin_System_Int32_
  name: CaloriesPerDegreeKelvin
  nameWithType: MetricUnitsExtensions.CaloriesPerDegreeKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CaloriesPerDegreeKelvin
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCaloriesPerDegreeKelvin*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InCaloriesPerDegreeKelvin
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InCaloriesPerDegreeKelvin_H_Extensions_Unit_ThermalCapacity_
  name: InCaloriesPerDegreeKelvin
  nameWithType: MetricUnitsExtensions.InCaloriesPerDegreeKelvin
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCaloriesPerDegreeKelvin
- uid: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_DynesPerCentimetre_System_Int32_
  name: DynesPerCentimetre
  nameWithType: MetricUnitsExtensions.DynesPerCentimetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DynesPerCentimetre
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerCentimetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InDynesPerCentimetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InDynesPerCentimetre_H_Extensions_Unit_SurfaceTension_
  name: InDynesPerCentimetre
  nameWithType: MetricUnitsExtensions.InDynesPerCentimetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerCentimetre
- uid: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_MilliSeconds_System_Int32_
  name: MilliSeconds
  nameWithType: MetricUnitsExtensions.MilliSeconds
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MilliSeconds
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMilliSeconds*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMilliSeconds
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMilliSeconds_H_Extensions_Unit_Time_
  name: InMilliSeconds
  nameWithType: MetricUnitsExtensions.InMilliSeconds
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMilliSeconds
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_SquareCentimetresPerSecond_System_Int32_
  name: SquareCentimetresPerSecond
  nameWithType: MetricUnitsExtensions.SquareCentimetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareCentimetresPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InSquareCentimetresPerSecond_H_Extensions_Unit_KinematicViscosity_
  name: InSquareCentimetresPerSecond
  nameWithType: MetricUnitsExtensions.InSquareCentimetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareCentimetresPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_CubicCentimetresPerSecond_System_Int32_
  name: CubicCentimetresPerSecond
  nameWithType: MetricUnitsExtensions.CubicCentimetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.CubicCentimetresPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetresPerSecond*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetresPerSecond
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InCubicCentimetresPerSecond_H_Extensions_Unit_VolumeFlowRate_
  name: InCubicCentimetresPerSecond
  nameWithType: MetricUnitsExtensions.InCubicCentimetresPerSecond
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InCubicCentimetresPerSecond
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_GramsPerMole_System_Int32_
  name: GramsPerMole
  nameWithType: MetricUnitsExtensions.GramsPerMole
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramsPerMole
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerMole*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InGramsPerMole
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InGramsPerMole_H_Extensions_Unit_MolarMass_
  name: InGramsPerMole
  nameWithType: MetricUnitsExtensions.InGramsPerMole
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerMole
- uid: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_MolesPerLitre_System_Int32_
  name: MolesPerLitre
  nameWithType: MetricUnitsExtensions.MolesPerLitre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MolesPerLitre
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerLitre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMolesPerLitre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMolesPerLitre_H_Extensions_Unit_MolarConcentration_
  name: InMolesPerLitre
  nameWithType: MetricUnitsExtensions.InMolesPerLitre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMolesPerLitre
- uid: H.Extensions.Unit.MetricUnitsExtensions.Degrees*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Degrees
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Degrees_System_Int32_
  name: Degrees
  nameWithType: MetricUnitsExtensions.Degrees
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Degrees
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDegrees*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InDegrees
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InDegrees_H_Extensions_Unit_Angle_
  name: InDegrees
  nameWithType: MetricUnitsExtensions.InDegrees
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDegrees
- uid: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_SquareDegrees_System_Int32_
  name: SquareDegrees
  nameWithType: MetricUnitsExtensions.SquareDegrees
  fullName: H.Extensions.Unit.MetricUnitsExtensions.SquareDegrees
- uid: H.Extensions.Unit.MetricUnitsExtensions.InSquareDegrees*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InSquareDegrees
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InSquareDegrees_H_Extensions_Unit_SolidAngle_
  name: InSquareDegrees
  nameWithType: MetricUnitsExtensions.InSquareDegrees
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InSquareDegrees
- uid: H.Extensions.Unit.MetricUnitsExtensions.Dynes*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Dynes
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Dynes_System_Int32_
  name: Dynes
  nameWithType: MetricUnitsExtensions.Dynes
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Dynes
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDynes*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InDynes
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InDynes_H_Extensions_Unit_Force_
  name: InDynes
  nameWithType: MetricUnitsExtensions.InDynes
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDynes
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramWeight*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.GramWeight
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_GramWeight_System_Int32_
  name: GramWeight
  nameWithType: MetricUnitsExtensions.GramWeight
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramWeight
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGramWeight*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InGramWeight
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InGramWeight_H_Extensions_Unit_Force_
  name: InGramWeight
  nameWithType: MetricUnitsExtensions.InGramWeight
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGramWeight
- uid: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_KilogramWeight_System_Int32_
  name: KilogramWeight
  nameWithType: MetricUnitsExtensions.KilogramWeight
  fullName: H.Extensions.Unit.MetricUnitsExtensions.KilogramWeight
- uid: H.Extensions.Unit.MetricUnitsExtensions.InKilogramWeight*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InKilogramWeight
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InKilogramWeight_H_Extensions_Unit_Force_
  name: InKilogramWeight
  nameWithType: MetricUnitsExtensions.InKilogramWeight
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InKilogramWeight
- uid: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_DynesPerSquareCentimetre_System_Int32_
  name: DynesPerSquareCentimetre
  nameWithType: MetricUnitsExtensions.DynesPerSquareCentimetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.DynesPerSquareCentimetre
- uid: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerSquareCentimetre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InDynesPerSquareCentimetre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InDynesPerSquareCentimetre_H_Extensions_Unit_Pressure_
  name: InDynesPerSquareCentimetre
  nameWithType: MetricUnitsExtensions.InDynesPerSquareCentimetre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InDynesPerSquareCentimetre
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_GramsPerCC_System_Int32_
  name: GramsPerCC
  nameWithType: MetricUnitsExtensions.GramsPerCC
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramsPerCC
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerCC*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InGramsPerCC
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InGramsPerCC_H_Extensions_Unit_Density_
  name: InGramsPerCC
  nameWithType: MetricUnitsExtensions.InGramsPerCC
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerCC
- uid: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_GramsPerLitre_System_Int32_
  name: GramsPerLitre
  nameWithType: MetricUnitsExtensions.GramsPerLitre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.GramsPerLitre
- uid: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerLitre*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InGramsPerLitre
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InGramsPerLitre_H_Extensions_Unit_Density_
  name: InGramsPerLitre
  nameWithType: MetricUnitsExtensions.InGramsPerLitre
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InGramsPerLitre
- uid: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_MilligramsPerCC_System_Int32_
  name: MilligramsPerCC
  nameWithType: MetricUnitsExtensions.MilligramsPerCC
  fullName: H.Extensions.Unit.MetricUnitsExtensions.MilligramsPerCC
- uid: H.Extensions.Unit.MetricUnitsExtensions.InMilligramsPerCC*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InMilligramsPerCC
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InMilligramsPerCC_H_Extensions_Unit_Density_
  name: InMilligramsPerCC
  nameWithType: MetricUnitsExtensions.InMilligramsPerCC
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InMilligramsPerCC
- uid: H.Extensions.Unit.MetricUnitsExtensions.Ergs*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Ergs
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Ergs_System_Int32_
  name: Ergs
  nameWithType: MetricUnitsExtensions.Ergs
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Ergs
- uid: H.Extensions.Unit.MetricUnitsExtensions.InErgs*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InErgs
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InErgs_H_Extensions_Unit_Energy_
  name: InErgs
  nameWithType: MetricUnitsExtensions.InErgs
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InErgs
- uid: H.Extensions.Unit.MetricUnitsExtensions.Poises*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.Poises
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_Poises_System_Int32_
  name: Poises
  nameWithType: MetricUnitsExtensions.Poises
  fullName: H.Extensions.Unit.MetricUnitsExtensions.Poises
- uid: H.Extensions.Unit.MetricUnitsExtensions.InPoises*
  commentId: Overload:H.Extensions.Unit.MetricUnitsExtensions.InPoises
  href: H.Extensions.Unit.MetricUnitsExtensions.html#H_Extensions_Unit_MetricUnitsExtensions_InPoises_H_Extensions_Unit_CoefficientOfViscosity_
  name: InPoises
  nameWithType: MetricUnitsExtensions.InPoises
  fullName: H.Extensions.Unit.MetricUnitsExtensions.InPoises
