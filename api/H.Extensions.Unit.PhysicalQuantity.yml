### YamlMime:ManagedReference
items:
- uid: H.Extensions.Unit.PhysicalQuantity
  commentId: T:H.Extensions.Unit.PhysicalQuantity
  id: PhysicalQuantity
  parent: H.Extensions.Unit
  children:
  - H.Extensions.Unit.PhysicalQuantity.#ctor(H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.#ctor(System.Double,H.Extensions.Unit.Dimensions)
  - H.Extensions.Unit.PhysicalQuantity.Compare(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.Dimensions
  - H.Extensions.Unit.PhysicalQuantity.Equals(System.Object)
  - H.Extensions.Unit.PhysicalQuantity.GetHashCode
  - H.Extensions.Unit.PhysicalQuantity.ToString
  - H.Extensions.Unit.PhysicalQuantity.ToString(System.Int32,H.Extensions.Unit.Unit[])
  - H.Extensions.Unit.PhysicalQuantity.Value
  - H.Extensions.Unit.PhysicalQuantity.op_Addition(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_Division(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_Division(H.Extensions.Unit.PhysicalQuantity,System.Double)
  - H.Extensions.Unit.PhysicalQuantity.op_Equality(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_ExclusiveOr(H.Extensions.Unit.PhysicalQuantity,System.Int16)
  - H.Extensions.Unit.PhysicalQuantity.op_GreaterThan(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_GreaterThanOrEqual(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AbsoluteTemperature
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Acceleration
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstance
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstanceByArea
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstanceByTime
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Angle
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularMomentum
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularVelocity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularVelocitySquared
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Area
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ByArea
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ByLength
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.CoefficientOfThermalExpansion
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.CoefficientOfViscosity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Current
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Density
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.DiffusionFlux
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Dimensionless
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricCharge
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricPotential
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricPotentialSquared
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Energy
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.EnergyFlux
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Force
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.FourDimensionalVolume
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Frequency
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Illuminance
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.KinematicViscosity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Length
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.LuminousFlux
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.LuminousIntensity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Mass
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByArea
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByAreaByTimeSquared
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByLength
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassFlowRate
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentration
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentrationGradient
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarMass
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarSpecificHeat
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MomentOfInertia
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Momentum
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Power
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.PowerGradient
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Pressure
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Resistance
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ResistanceTimesArea
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ResistanceToFlow
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Resistivity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SolidAngle
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SpecificHeat
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SurfaceTension
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TangentialVelocity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TemperatureChange
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TemperatureGradient
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalCapacity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalCapacityByVolume
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalConductivity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Time
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TimeSquared
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Velocity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocityByDensity
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocityGradient
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocitySquared
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Volume
  - H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VolumeFlowRate
  - H.Extensions.Unit.PhysicalQuantity.op_Inequality(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_LessThan(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_LessThanOrEqual(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_Multiply(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_Multiply(H.Extensions.Unit.PhysicalQuantity,System.Double)
  - H.Extensions.Unit.PhysicalQuantity.op_Multiply(System.Double,H.Extensions.Unit.PhysicalQuantity)
  - H.Extensions.Unit.PhysicalQuantity.op_Subtraction(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  langs:
  - csharp
  - vb
  name: PhysicalQuantity
  nameWithType: PhysicalQuantity
  fullName: H.Extensions.Unit.PhysicalQuantity
  type: Struct
  source:
    id: PhysicalQuantity
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17234
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: 'public readonly struct PhysicalQuantity : IPhysicalQuantity'
    content.vb: Public Structure PhysicalQuantity Implements IPhysicalQuantity
  implements:
  - H.Extensions.Unit.IPhysicalQuantity
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - H.Extensions.Unit.PhysicalQuantity.H.Extensions.Common.ObjectExtension.ToEnumerable``1
  - H.Extensions.Unit.PhysicalQuantity.H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1
  - H.Extensions.Unit.PhysicalQuantity.H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1
  - System.Object.H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.String)
  - System.Object.H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.String)
  - System.Object.H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1
  - System.Object.H.Extensions.Common.ObjectExtension.CloneBy(System.Predicate{System.Reflection.PropertyInfo})
  - System.Object.H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  - System.Object.H.Extensions.Common.ObjectExtension.IsMacth(System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  - System.Object.H.Extensions.Common.ObjectExtension.IsMacth(System.String)
  - System.Object.H.Extensions.Common.ObjectExtension.ModelState(System.Collections.Generic.List{System.String}@)
  - System.Object.H.Extensions.Common.ObjectExtension.ModelStateDeep(System.String@)
  - System.Object.H.Extensions.Common.ObjectExtension.TryChangeType(System.Type,System.Object@)
  - System.Object.H.Extensions.Common.ObjectExtension.TryChangeType``1
  - System.Object.H.Extensions.Common.ObjectExtension.TryChangeType``1({T}@)
  - System.Object.H.Extensions.Common.ObjectExtension.TryConvertToString
  - System.Object.H.Extensions.Common.ObjectExtension.TryConvertToString(System.String@)
  - System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos
  - System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  - System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Text.Json.Utf8JsonWriter)
  - System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Action,System.Windows.Threading.DispatcherPriority)
  - System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  - System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
- uid: H.Extensions.Unit.PhysicalQuantity.Value
  commentId: P:H.Extensions.Unit.PhysicalQuantity.Value
  id: Value
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PhysicalQuantity.Value
  fullName: H.Extensions.Unit.PhysicalQuantity.Value
  type: Property
  source:
    id: Value
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 21
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  example: []
  syntax:
    content: public double Value { get; init; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Value As Double
  overload: H.Extensions.Unit.PhysicalQuantity.Value*
  implements:
  - H.Extensions.Unit.IPhysicalQuantity.Value
- uid: H.Extensions.Unit.PhysicalQuantity.Dimensions
  commentId: P:H.Extensions.Unit.PhysicalQuantity.Dimensions
  id: Dimensions
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: Dimensions
  nameWithType: PhysicalQuantity.Dimensions
  fullName: H.Extensions.Unit.PhysicalQuantity.Dimensions
  type: Property
  source:
    id: Dimensions
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 22
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  example: []
  syntax:
    content: public Dimensions Dimensions { get; init; }
    parameters: []
    return:
      type: H.Extensions.Unit.Dimensions
    content.vb: Public Property Dimensions As Dimensions
  overload: H.Extensions.Unit.PhysicalQuantity.Dimensions*
  implements:
  - H.Extensions.Unit.IPhysicalQuantity.Dimensions
- uid: H.Extensions.Unit.PhysicalQuantity.#ctor(System.Double,H.Extensions.Unit.Dimensions)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.#ctor(System.Double,H.Extensions.Unit.Dimensions)
  id: '#ctor(System.Double,H.Extensions.Unit.Dimensions)'
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: PhysicalQuantity(double, Dimensions)
  nameWithType: PhysicalQuantity.PhysicalQuantity(double, Dimensions)
  fullName: H.Extensions.Unit.PhysicalQuantity.PhysicalQuantity(double, H.Extensions.Unit.Dimensions)
  type: Constructor
  source:
    id: .ctor
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 24
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public PhysicalQuantity(double v, Dimensions d)
    parameters:
    - id: v
      type: System.Double
    - id: d
      type: H.Extensions.Unit.Dimensions
    content.vb: Public Sub New(v As Double, d As Dimensions)
  overload: H.Extensions.Unit.PhysicalQuantity.#ctor*
  nameWithType.vb: PhysicalQuantity.New(Double, Dimensions)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.New(Double, H.Extensions.Unit.Dimensions)
  name.vb: New(Double, Dimensions)
- uid: H.Extensions.Unit.PhysicalQuantity.#ctor(H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.#ctor(H.Extensions.Unit.IPhysicalQuantity)
  id: '#ctor(H.Extensions.Unit.IPhysicalQuantity)'
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: PhysicalQuantity(IPhysicalQuantity)
  nameWithType: PhysicalQuantity.PhysicalQuantity(IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.PhysicalQuantity(H.Extensions.Unit.IPhysicalQuantity)
  type: Constructor
  source:
    id: .ctor
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 30
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public PhysicalQuantity(IPhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.IPhysicalQuantity
    content.vb: Public Sub New(q As IPhysicalQuantity)
  overload: H.Extensions.Unit.PhysicalQuantity.#ctor*
  nameWithType.vb: PhysicalQuantity.New(IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.New(H.Extensions.Unit.IPhysicalQuantity)
  name.vb: New(IPhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.ToString
  commentId: M:H.Extensions.Unit.PhysicalQuantity.ToString
  id: ToString
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PhysicalQuantity.ToString()
  fullName: H.Extensions.Unit.PhysicalQuantity.ToString()
  type: Method
  source:
    id: ToString
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 36
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: H.Extensions.Unit.PhysicalQuantity.ToString*
- uid: H.Extensions.Unit.PhysicalQuantity.ToString(System.Int32,H.Extensions.Unit.Unit[])
  commentId: M:H.Extensions.Unit.PhysicalQuantity.ToString(System.Int32,H.Extensions.Unit.Unit[])
  id: ToString(System.Int32,H.Extensions.Unit.Unit[])
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: ToString(int, params Unit[])
  nameWithType: PhysicalQuantity.ToString(int, params Unit[])
  fullName: H.Extensions.Unit.PhysicalQuantity.ToString(int, params H.Extensions.Unit.Unit[])
  type: Method
  source:
    id: ToString
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 41
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  example: []
  syntax:
    content: public string ToString(int precision, params Unit[] units)
    parameters:
    - id: precision
      type: System.Int32
    - id: units
      type: H.Extensions.Unit.Unit[]
    return:
      type: System.String
    content.vb: Public Function ToString(precision As Integer, ParamArray units As Unit()) As String
  overload: H.Extensions.Unit.PhysicalQuantity.ToString*
  implements:
  - H.Extensions.Unit.IPhysicalQuantity.ToString(System.Int32,H.Extensions.Unit.Unit[])
  nameWithType.vb: PhysicalQuantity.ToString(Integer, ParamArray Unit())
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.ToString(Integer, ParamArray H.Extensions.Unit.Unit())
  name.vb: ToString(Integer, ParamArray Unit())
- uid: H.Extensions.Unit.PhysicalQuantity.Compare(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.Compare(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: Compare(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: Compare(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.Compare(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.Compare(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Method
  source:
    id: Compare
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 48
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static int Compare(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: System.Int32
    content.vb: Public Shared Function Compare(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As Integer
  overload: H.Extensions.Unit.PhysicalQuantity.Compare*
- uid: H.Extensions.Unit.PhysicalQuantity.Equals(System.Object)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.Equals(System.Object)
  id: Equals(System.Object)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: PhysicalQuantity.Equals(object)
  fullName: H.Extensions.Unit.PhysicalQuantity.Equals(object)
  type: Method
  source:
    id: Equals
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 62
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: H.Extensions.Unit.PhysicalQuantity.Equals*
  nameWithType.vb: PhysicalQuantity.Equals(Object)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.Equals(Object)
  name.vb: Equals(Object)
- uid: H.Extensions.Unit.PhysicalQuantity.GetHashCode
  commentId: M:H.Extensions.Unit.PhysicalQuantity.GetHashCode
  id: GetHashCode
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PhysicalQuantity.GetHashCode()
  fullName: H.Extensions.Unit.PhysicalQuantity.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 73
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: H.Extensions.Unit.PhysicalQuantity.GetHashCode*
- uid: H.Extensions.Unit.PhysicalQuantity.op_Equality(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Equality(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_Equality(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator ==(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator ==(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator ==(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_Equality
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 78
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static bool operator ==(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As Boolean
  overload: H.Extensions.Unit.PhysicalQuantity.op_Equality*
  nameWithType.vb: PhysicalQuantity.=(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.=(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: =(PhysicalQuantity, IPhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Inequality(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Inequality(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_Inequality(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator !=(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator !=(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator !=(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_Inequality
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 83
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static bool operator !=(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As Boolean
  overload: H.Extensions.Unit.PhysicalQuantity.op_Inequality*
  nameWithType.vb: PhysicalQuantity.<>(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.<>(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: <>(PhysicalQuantity, IPhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_GreaterThan(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_GreaterThan(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_GreaterThan(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator >(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator >(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator >(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_GreaterThan
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 88
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static bool operator >(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As Boolean
  overload: H.Extensions.Unit.PhysicalQuantity.op_GreaterThan*
  nameWithType.vb: PhysicalQuantity.>(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.>(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: '>(PhysicalQuantity, IPhysicalQuantity)'
- uid: H.Extensions.Unit.PhysicalQuantity.op_GreaterThanOrEqual(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_GreaterThanOrEqual(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_GreaterThanOrEqual(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator >=(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator >=(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator >=(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_GreaterThanOrEqual
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 93
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static bool operator >=(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As Boolean
  overload: H.Extensions.Unit.PhysicalQuantity.op_GreaterThanOrEqual*
  nameWithType.vb: PhysicalQuantity.>=(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.>=(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: '>=(PhysicalQuantity, IPhysicalQuantity)'
- uid: H.Extensions.Unit.PhysicalQuantity.op_LessThanOrEqual(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_LessThanOrEqual(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_LessThanOrEqual(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator <=(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator <=(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator <=(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_LessThanOrEqual
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 98
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static bool operator <=(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As Boolean
  overload: H.Extensions.Unit.PhysicalQuantity.op_LessThanOrEqual*
  nameWithType.vb: PhysicalQuantity.<=(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.<=(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: <=(PhysicalQuantity, IPhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_LessThan(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_LessThan(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_LessThan(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator <(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator <(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator <(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_LessThan
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 103
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static bool operator <(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As Boolean
  overload: H.Extensions.Unit.PhysicalQuantity.op_LessThan*
  nameWithType.vb: PhysicalQuantity.<(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.<(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: <(PhysicalQuantity, IPhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Addition(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Addition(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_Addition(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator +(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator +(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator +(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_Addition
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 112
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static PhysicalQuantity operator +(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: H.Extensions.Unit.PhysicalQuantity
    content.vb: Public Shared Operator +(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As PhysicalQuantity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Addition*
  nameWithType.vb: PhysicalQuantity.+(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.+(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: +(PhysicalQuantity, IPhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Subtraction(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Subtraction(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_Subtraction(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator -(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator -(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator -(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_Subtraction
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 119
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static PhysicalQuantity operator -(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: H.Extensions.Unit.PhysicalQuantity
    content.vb: Public Shared Operator -(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As PhysicalQuantity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Subtraction*
  nameWithType.vb: PhysicalQuantity.-(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.-(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: -(PhysicalQuantity, IPhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Multiply(H.Extensions.Unit.PhysicalQuantity,System.Double)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Multiply(H.Extensions.Unit.PhysicalQuantity,System.Double)
  id: op_Multiply(H.Extensions.Unit.PhysicalQuantity,System.Double)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator *(PhysicalQuantity, double)
  nameWithType: PhysicalQuantity.operator *(PhysicalQuantity, double)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator *(H.Extensions.Unit.PhysicalQuantity, double)
  type: Operator
  source:
    id: op_Multiply
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 126
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static PhysicalQuantity operator *(PhysicalQuantity v1, double v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: System.Double
    return:
      type: H.Extensions.Unit.PhysicalQuantity
    content.vb: Public Shared Operator *(v1 As PhysicalQuantity, v2 As Double) As PhysicalQuantity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Multiply*
  nameWithType.vb: PhysicalQuantity.*(PhysicalQuantity, Double)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.*(H.Extensions.Unit.PhysicalQuantity, Double)
  name.vb: '*(PhysicalQuantity, Double)'
- uid: H.Extensions.Unit.PhysicalQuantity.op_Multiply(System.Double,H.Extensions.Unit.PhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Multiply(System.Double,H.Extensions.Unit.PhysicalQuantity)
  id: op_Multiply(System.Double,H.Extensions.Unit.PhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator *(double, PhysicalQuantity)
  nameWithType: PhysicalQuantity.operator *(double, PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator *(double, H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Multiply
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 131
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static PhysicalQuantity operator *(double v1, PhysicalQuantity v2)
    parameters:
    - id: v1
      type: System.Double
    - id: v2
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.PhysicalQuantity
    content.vb: Public Shared Operator *(v1 As Double, v2 As PhysicalQuantity) As PhysicalQuantity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Multiply*
  nameWithType.vb: PhysicalQuantity.*(Double, PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.*(Double, H.Extensions.Unit.PhysicalQuantity)
  name.vb: '*(Double, PhysicalQuantity)'
- uid: H.Extensions.Unit.PhysicalQuantity.op_Multiply(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Multiply(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_Multiply(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator *(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator *(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator *(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_Multiply
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 136
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static PhysicalQuantity operator *(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: H.Extensions.Unit.PhysicalQuantity
    content.vb: Public Shared Operator *(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As PhysicalQuantity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Multiply*
  nameWithType.vb: PhysicalQuantity.*(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.*(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: '*(PhysicalQuantity, IPhysicalQuantity)'
- uid: H.Extensions.Unit.PhysicalQuantity.op_Division(H.Extensions.Unit.PhysicalQuantity,System.Double)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Division(H.Extensions.Unit.PhysicalQuantity,System.Double)
  id: op_Division(H.Extensions.Unit.PhysicalQuantity,System.Double)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator /(PhysicalQuantity, double)
  nameWithType: PhysicalQuantity.operator /(PhysicalQuantity, double)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator /(H.Extensions.Unit.PhysicalQuantity, double)
  type: Operator
  source:
    id: op_Division
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 141
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static PhysicalQuantity operator /(PhysicalQuantity v1, double v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: System.Double
    return:
      type: H.Extensions.Unit.PhysicalQuantity
    content.vb: Public Shared Operator /(v1 As PhysicalQuantity, v2 As Double) As PhysicalQuantity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Division*
  nameWithType.vb: PhysicalQuantity./(PhysicalQuantity, Double)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity./(H.Extensions.Unit.PhysicalQuantity, Double)
  name.vb: /(PhysicalQuantity, Double)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Division(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Division(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  id: op_Division(H.Extensions.Unit.PhysicalQuantity,H.Extensions.Unit.IPhysicalQuantity)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator /(PhysicalQuantity, IPhysicalQuantity)
  nameWithType: PhysicalQuantity.operator /(PhysicalQuantity, IPhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator /(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  type: Operator
  source:
    id: op_Division
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 146
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static PhysicalQuantity operator /(PhysicalQuantity v1, IPhysicalQuantity v2)
    parameters:
    - id: v1
      type: H.Extensions.Unit.PhysicalQuantity
    - id: v2
      type: H.Extensions.Unit.IPhysicalQuantity
    return:
      type: H.Extensions.Unit.PhysicalQuantity
    content.vb: Public Shared Operator /(v1 As PhysicalQuantity, v2 As IPhysicalQuantity) As PhysicalQuantity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Division*
  nameWithType.vb: PhysicalQuantity./(PhysicalQuantity, IPhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity./(H.Extensions.Unit.PhysicalQuantity, H.Extensions.Unit.IPhysicalQuantity)
  name.vb: /(PhysicalQuantity, IPhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_ExclusiveOr(H.Extensions.Unit.PhysicalQuantity,System.Int16)
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_ExclusiveOr(H.Extensions.Unit.PhysicalQuantity,System.Int16)
  id: op_ExclusiveOr(H.Extensions.Unit.PhysicalQuantity,System.Int16)
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: operator ^(PhysicalQuantity, short)
  nameWithType: PhysicalQuantity.operator ^(PhysicalQuantity, short)
  fullName: H.Extensions.Unit.PhysicalQuantity.operator ^(H.Extensions.Unit.PhysicalQuantity, short)
  type: Operator
  source:
    id: op_ExclusiveOr
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\PhysicalQuantity.cs
    startLine: 151
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static PhysicalQuantity operator ^(PhysicalQuantity v, short p)
    parameters:
    - id: v
      type: H.Extensions.Unit.PhysicalQuantity
    - id: p
      type: System.Int16
    return:
      type: H.Extensions.Unit.PhysicalQuantity
    content.vb: Public Shared Operator Xor(v As PhysicalQuantity, p As Short) As PhysicalQuantity
  overload: H.Extensions.Unit.PhysicalQuantity.op_ExclusiveOr*
  nameWithType.vb: PhysicalQuantity.Xor(PhysicalQuantity, Short)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.Xor(H.Extensions.Unit.PhysicalQuantity, Short)
  name.vb: Xor(PhysicalQuantity, Short)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Dimensionless
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Dimensionless
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Dimensionless
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Dimensionless(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Dimensionless(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Dimensionless(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17236
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Dimensionless(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Dimensionless
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Dimensionless
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Mass
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Mass
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Mass
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Mass(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Mass(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Mass(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17237
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Mass(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Mass
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Mass
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Length
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Length
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Length
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Length(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Length(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Length(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17238
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Length(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Length
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Length
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Time
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Time
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Time
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Time(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Time(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Time(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17239
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Time(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Time
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Time
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Current
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Current
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Current
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Current(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Current(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Current(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17240
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Current(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Current
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Current
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TemperatureChange
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TemperatureChange
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TemperatureChange
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator TemperatureChange(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator TemperatureChange(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.TemperatureChange(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17241
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator TemperatureChange(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.TemperatureChange
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As TemperatureChange
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstance
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstance
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstance
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator AmountOfSubstance(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator AmountOfSubstance(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.AmountOfSubstance(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17242
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator AmountOfSubstance(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.AmountOfSubstance
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As AmountOfSubstance
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.LuminousIntensity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.LuminousIntensity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.LuminousIntensity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator LuminousIntensity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator LuminousIntensity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.LuminousIntensity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17243
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator LuminousIntensity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.LuminousIntensity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As LuminousIntensity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Angle
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Angle
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Angle
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Angle(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Angle(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Angle(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17244
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Angle(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Angle
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Angle
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Area
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Area
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Area
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Area(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Area(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Area(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17245
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Area(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Area
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Area
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Volume
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Volume
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Volume
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Volume(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Volume(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Volume(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17246
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Volume(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Volume
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Volume
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Density
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Density
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Density
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Density(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Density(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Density(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17247
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Density(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Density
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Density
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarMass
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarMass
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarMass
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MolarMass(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MolarMass(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MolarMass(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17248
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MolarMass(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MolarMass
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MolarMass
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentration
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentration
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentration
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MolarConcentration(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MolarConcentration(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MolarConcentration(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17249
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MolarConcentration(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MolarConcentration
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MolarConcentration
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Velocity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Velocity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Velocity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Velocity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Velocity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Velocity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17250
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Velocity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Velocity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Velocity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TangentialVelocity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TangentialVelocity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TangentialVelocity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator TangentialVelocity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator TangentialVelocity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.TangentialVelocity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17251
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator TangentialVelocity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.TangentialVelocity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As TangentialVelocity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularVelocity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularVelocity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularVelocity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator AngularVelocity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator AngularVelocity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.AngularVelocity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17252
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator AngularVelocity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.AngularVelocity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As AngularVelocity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SolidAngle
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SolidAngle
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SolidAngle
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator SolidAngle(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator SolidAngle(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.SolidAngle(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17253
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator SolidAngle(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.SolidAngle
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As SolidAngle
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TimeSquared
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TimeSquared
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TimeSquared
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator TimeSquared(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator TimeSquared(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.TimeSquared(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17254
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator TimeSquared(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.TimeSquared
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As TimeSquared
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocitySquared
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocitySquared
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocitySquared
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator VelocitySquared(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator VelocitySquared(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.VelocitySquared(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17255
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator VelocitySquared(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.VelocitySquared
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As VelocitySquared
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularVelocitySquared
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularVelocitySquared
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularVelocitySquared
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator AngularVelocitySquared(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator AngularVelocitySquared(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.AngularVelocitySquared(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17256
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator AngularVelocitySquared(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.AngularVelocitySquared
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As AngularVelocitySquared
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ByLength
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ByLength
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ByLength
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ByLength(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ByLength(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ByLength(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17257
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ByLength(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ByLength
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ByLength
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ByArea
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ByArea
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ByArea
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ByArea(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ByArea(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ByArea(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17258
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ByArea(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ByArea
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ByArea
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByLength
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByLength
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByLength
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MassByLength(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MassByLength(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MassByLength(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17259
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MassByLength(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MassByLength
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MassByLength
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByArea
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByArea
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByArea
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MassByArea(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MassByArea(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MassByArea(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17260
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MassByArea(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MassByArea
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MassByArea
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.FourDimensionalVolume
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.FourDimensionalVolume
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.FourDimensionalVolume
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator FourDimensionalVolume(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator FourDimensionalVolume(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.FourDimensionalVolume(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17261
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator FourDimensionalVolume(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.FourDimensionalVolume
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As FourDimensionalVolume
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentrationGradient
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentrationGradient
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentrationGradient
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MolarConcentrationGradient(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MolarConcentrationGradient(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MolarConcentrationGradient(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17262
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MolarConcentrationGradient(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MolarConcentrationGradient
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MolarConcentrationGradient
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstanceByArea
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstanceByArea
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstanceByArea
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator AmountOfSubstanceByArea(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator AmountOfSubstanceByArea(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.AmountOfSubstanceByArea(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17263
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator AmountOfSubstanceByArea(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.AmountOfSubstanceByArea
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As AmountOfSubstanceByArea
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstanceByTime
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstanceByTime
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AmountOfSubstanceByTime
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator AmountOfSubstanceByTime(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator AmountOfSubstanceByTime(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.AmountOfSubstanceByTime(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17264
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator AmountOfSubstanceByTime(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.AmountOfSubstanceByTime
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As AmountOfSubstanceByTime
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.DiffusionFlux
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.DiffusionFlux
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.DiffusionFlux
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator DiffusionFlux(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator DiffusionFlux(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.DiffusionFlux(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17265
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator DiffusionFlux(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.DiffusionFlux
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As DiffusionFlux
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.KinematicViscosity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.KinematicViscosity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.KinematicViscosity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator KinematicViscosity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator KinematicViscosity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.KinematicViscosity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17266
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator KinematicViscosity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.KinematicViscosity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As KinematicViscosity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Acceleration
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Acceleration
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Acceleration
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Acceleration(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Acceleration(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Acceleration(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17267
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Acceleration(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Acceleration
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Acceleration
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Momentum
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Momentum
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Momentum
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Momentum(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Momentum(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Momentum(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17268
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Momentum(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Momentum
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Momentum
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Force
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Force
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Force
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Force(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Force(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Force(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17269
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Force(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Force
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Force
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassFlowRate
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassFlowRate
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassFlowRate
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MassFlowRate(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MassFlowRate(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MassFlowRate(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17270
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MassFlowRate(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MassFlowRate
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MassFlowRate
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MomentOfInertia
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MomentOfInertia
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MomentOfInertia
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MomentOfInertia(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MomentOfInertia(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MomentOfInertia(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17271
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MomentOfInertia(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MomentOfInertia
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MomentOfInertia
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularMomentum
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularMomentum
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AngularMomentum
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator AngularMomentum(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator AngularMomentum(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.AngularMomentum(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17272
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator AngularMomentum(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.AngularMomentum
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As AngularMomentum
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Energy
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Energy
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Energy
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Energy(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Energy(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Energy(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17273
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Energy(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Energy
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Energy
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SurfaceTension
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SurfaceTension
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SurfaceTension
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator SurfaceTension(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator SurfaceTension(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.SurfaceTension(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17274
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator SurfaceTension(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.SurfaceTension
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As SurfaceTension
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricCharge
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricCharge
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricCharge
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ElectricCharge(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ElectricCharge(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ElectricCharge(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17275
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ElectricCharge(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ElectricCharge
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ElectricCharge
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricPotential
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricPotential
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricPotential
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ElectricPotential(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ElectricPotential(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ElectricPotential(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17276
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ElectricPotential(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ElectricPotential
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ElectricPotential
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricPotentialSquared
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricPotentialSquared
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ElectricPotentialSquared
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ElectricPotentialSquared(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ElectricPotentialSquared(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ElectricPotentialSquared(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17277
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ElectricPotentialSquared(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ElectricPotentialSquared
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ElectricPotentialSquared
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Power
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Power
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Power
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Power(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Power(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Power(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17278
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Power(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Power
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Power
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Resistance
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Resistance
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Resistance
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Resistance(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Resistance(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Resistance(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17279
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Resistance(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Resistance
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Resistance
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Pressure
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Pressure
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Pressure
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Pressure(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Pressure(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Pressure(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17280
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Pressure(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Pressure
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Pressure
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Frequency
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Frequency
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Frequency
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Frequency(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Frequency(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Frequency(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17281
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Frequency(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Frequency
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Frequency
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocityGradient
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocityGradient
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocityGradient
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator VelocityGradient(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator VelocityGradient(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.VelocityGradient(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17282
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator VelocityGradient(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.VelocityGradient
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As VelocityGradient
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.CoefficientOfViscosity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.CoefficientOfViscosity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.CoefficientOfViscosity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator CoefficientOfViscosity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator CoefficientOfViscosity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.CoefficientOfViscosity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17283
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator CoefficientOfViscosity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.CoefficientOfViscosity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As CoefficientOfViscosity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VolumeFlowRate
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VolumeFlowRate
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VolumeFlowRate
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator VolumeFlowRate(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator VolumeFlowRate(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.VolumeFlowRate(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17284
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator VolumeFlowRate(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.VolumeFlowRate
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As VolumeFlowRate
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ResistanceToFlow
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ResistanceToFlow
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ResistanceToFlow
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ResistanceToFlow(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ResistanceToFlow(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ResistanceToFlow(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17285
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ResistanceToFlow(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ResistanceToFlow
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ResistanceToFlow
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByAreaByTimeSquared
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByAreaByTimeSquared
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MassByAreaByTimeSquared
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MassByAreaByTimeSquared(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MassByAreaByTimeSquared(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MassByAreaByTimeSquared(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17286
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MassByAreaByTimeSquared(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MassByAreaByTimeSquared
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MassByAreaByTimeSquared
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocityByDensity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocityByDensity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.VelocityByDensity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator VelocityByDensity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator VelocityByDensity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.VelocityByDensity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17287
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator VelocityByDensity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.VelocityByDensity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As VelocityByDensity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalCapacity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalCapacity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalCapacity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ThermalCapacity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ThermalCapacity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ThermalCapacity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17288
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ThermalCapacity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ThermalCapacity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ThermalCapacity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SpecificHeat
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SpecificHeat
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.SpecificHeat
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator SpecificHeat(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator SpecificHeat(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.SpecificHeat(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17289
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator SpecificHeat(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.SpecificHeat
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As SpecificHeat
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarSpecificHeat
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarSpecificHeat
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarSpecificHeat
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MolarSpecificHeat(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MolarSpecificHeat(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MolarSpecificHeat(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17290
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MolarSpecificHeat(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MolarSpecificHeat
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MolarSpecificHeat
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator MolarConcentrationTimesAbsoluteTemperature(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator MolarConcentrationTimesAbsoluteTemperature(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17291
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator MolarConcentrationTimesAbsoluteTemperature(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As MolarConcentrationTimesAbsoluteTemperature
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.CoefficientOfThermalExpansion
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.CoefficientOfThermalExpansion
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.CoefficientOfThermalExpansion
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator CoefficientOfThermalExpansion(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator CoefficientOfThermalExpansion(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.CoefficientOfThermalExpansion(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17292
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator CoefficientOfThermalExpansion(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.CoefficientOfThermalExpansion
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As CoefficientOfThermalExpansion
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalCapacityByVolume
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalCapacityByVolume
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalCapacityByVolume
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ThermalCapacityByVolume(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ThermalCapacityByVolume(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ThermalCapacityByVolume(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17293
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ThermalCapacityByVolume(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ThermalCapacityByVolume
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ThermalCapacityByVolume
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AbsoluteTemperature
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AbsoluteTemperature
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.AbsoluteTemperature
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator AbsoluteTemperature(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator AbsoluteTemperature(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.AbsoluteTemperature(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17294
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator AbsoluteTemperature(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.AbsoluteTemperature
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As AbsoluteTemperature
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.EnergyFlux
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.EnergyFlux
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.EnergyFlux
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator EnergyFlux(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator EnergyFlux(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.EnergyFlux(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17295
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator EnergyFlux(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.EnergyFlux
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As EnergyFlux
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.PowerGradient
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.PowerGradient
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.PowerGradient
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator PowerGradient(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator PowerGradient(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.PowerGradient(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17296
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator PowerGradient(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.PowerGradient
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As PowerGradient
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TemperatureGradient
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TemperatureGradient
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.TemperatureGradient
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator TemperatureGradient(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator TemperatureGradient(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.TemperatureGradient(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17297
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator TemperatureGradient(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.TemperatureGradient
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As TemperatureGradient
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalConductivity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalConductivity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ThermalConductivity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ThermalConductivity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ThermalConductivity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ThermalConductivity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17298
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ThermalConductivity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ThermalConductivity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ThermalConductivity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ResistanceTimesArea
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ResistanceTimesArea
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.ResistanceTimesArea
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator ResistanceTimesArea(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator ResistanceTimesArea(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.ResistanceTimesArea(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17299
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator ResistanceTimesArea(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.ResistanceTimesArea
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As ResistanceTimesArea
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Resistivity
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Resistivity
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Resistivity
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Resistivity(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Resistivity(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Resistivity(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17300
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Resistivity(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Resistivity
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Resistivity
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.LuminousFlux
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.LuminousFlux
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.LuminousFlux
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator LuminousFlux(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator LuminousFlux(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.LuminousFlux(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17301
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator LuminousFlux(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.LuminousFlux
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As LuminousFlux
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Illuminance
  commentId: M:H.Extensions.Unit.PhysicalQuantity.op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Illuminance
  id: op_Implicit(H.Extensions.Unit.PhysicalQuantity)~H.Extensions.Unit.Illuminance
  parent: H.Extensions.Unit.PhysicalQuantity
  langs:
  - csharp
  - vb
  name: implicit operator Illuminance(PhysicalQuantity)
  nameWithType: PhysicalQuantity.implicit operator Illuminance(PhysicalQuantity)
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator H.Extensions.Unit.Illuminance(H.Extensions.Unit.PhysicalQuantity)
  type: Operator
  source:
    id: op_Implicit
    path: H:\Github\WPF-VisionMaster-Doc\Source\WPF-VisionMaster\Source\WPF-Control\Source\Extensions\H.Extensions.Unit\PhysicalUnits\Provider\Quantities.cs
    startLine: 17302
  assemblies:
  - H.Extensions.Unit
  namespace: H.Extensions.Unit
  syntax:
    content: public static implicit operator Illuminance(PhysicalQuantity q)
    parameters:
    - id: q
      type: H.Extensions.Unit.PhysicalQuantity
    return:
      type: H.Extensions.Unit.Illuminance
    content.vb: Public Shared Widening Operator CType(q As PhysicalQuantity) As Illuminance
  overload: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  nameWithType.vb: PhysicalQuantity.CType(PhysicalQuantity)
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CType(PhysicalQuantity)
references:
- uid: H.Extensions.Unit
  commentId: N:H.Extensions.Unit
  href: H.html
  name: H.Extensions.Unit
  nameWithType: H.Extensions.Unit
  fullName: H.Extensions.Unit
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Unit
    name: Unit
    href: H.Extensions.Unit.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Unit
    name: Unit
    href: H.Extensions.Unit.html
- uid: H.Extensions.Unit.IPhysicalQuantity
  commentId: T:H.Extensions.Unit.IPhysicalQuantity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.IPhysicalQuantity.html
  name: IPhysicalQuantity
  nameWithType: IPhysicalQuantity
  fullName: H.Extensions.Unit.IPhysicalQuantity
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.Unit.PhysicalQuantity.H.Extensions.Common.ObjectExtension.ToEnumerable``1
  commentId: M:H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  name: ToEnumerable<PhysicalQuantity>(PhysicalQuantity)
  nameWithType: ObjectExtension.ToEnumerable<PhysicalQuantity>(PhysicalQuantity)
  fullName: H.Extensions.Common.ObjectExtension.ToEnumerable<H.Extensions.Unit.PhysicalQuantity>(H.Extensions.Unit.PhysicalQuantity)
  nameWithType.vb: ObjectExtension.ToEnumerable(Of PhysicalQuantity)(PhysicalQuantity)
  fullName.vb: H.Extensions.Common.ObjectExtension.ToEnumerable(Of H.Extensions.Unit.PhysicalQuantity)(H.Extensions.Unit.PhysicalQuantity)
  name.vb: ToEnumerable(Of PhysicalQuantity)(PhysicalQuantity)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(H.Extensions.Unit.PhysicalQuantity)
    name: ToEnumerable
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  - name: <
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: '>'
  - name: (
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(H.Extensions.Unit.PhysicalQuantity)
    name: ToEnumerable
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: )
  - name: (
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: )
- uid: H.Extensions.Unit.PhysicalQuantity.H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1
  commentId: M:H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
  parent: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension
  definition: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
  href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  name: CloneByNewtonsoftJson<PhysicalQuantity>(PhysicalQuantity)
  nameWithType: NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson<PhysicalQuantity>(PhysicalQuantity)
  fullName: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson<H.Extensions.Unit.PhysicalQuantity>(H.Extensions.Unit.PhysicalQuantity)
  nameWithType.vb: NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson(Of PhysicalQuantity)(PhysicalQuantity)
  fullName.vb: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson(Of H.Extensions.Unit.PhysicalQuantity)(H.Extensions.Unit.PhysicalQuantity)
  name.vb: CloneByNewtonsoftJson(Of PhysicalQuantity)(PhysicalQuantity)
  spec.csharp:
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(H.Extensions.Unit.PhysicalQuantity)
    name: CloneByNewtonsoftJson
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  - name: <
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: '>'
  - name: (
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: )
  spec.vb:
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(H.Extensions.Unit.PhysicalQuantity)
    name: CloneByNewtonsoftJson
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: )
  - name: (
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: )
- uid: H.Extensions.Unit.PhysicalQuantity.H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1
  commentId: M:H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
  parent: H.VisionMaster.ResultPresenter.ResultPresenterExtension
  definition: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
  href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  name: ToValueResultPresenter<PhysicalQuantity>(PhysicalQuantity)
  nameWithType: ResultPresenterExtension.ToValueResultPresenter<PhysicalQuantity>(PhysicalQuantity)
  fullName: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter<H.Extensions.Unit.PhysicalQuantity>(H.Extensions.Unit.PhysicalQuantity)
  nameWithType.vb: ResultPresenterExtension.ToValueResultPresenter(Of PhysicalQuantity)(PhysicalQuantity)
  fullName.vb: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter(Of H.Extensions.Unit.PhysicalQuantity)(H.Extensions.Unit.PhysicalQuantity)
  name.vb: ToValueResultPresenter(Of PhysicalQuantity)(PhysicalQuantity)
  spec.csharp:
  - uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(H.Extensions.Unit.PhysicalQuantity)
    name: ToValueResultPresenter
    href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  - name: <
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: '>'
  - name: (
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: )
  spec.vb:
  - uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(H.Extensions.Unit.PhysicalQuantity)
    name: ToValueResultPresenter
    href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: )
  - name: (
  - uid: H.Extensions.Unit.PhysicalQuantity
    name: PhysicalQuantity
    href: H.Extensions.Unit.PhysicalQuantity.html
  - name: )
- uid: System.Object.H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.String)
  commentId: M:H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
  parent: H.Controls.FilterColumnDataGrid.Extensions
  definition: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
  href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  name: GetPropertyValue(object, string)
  nameWithType: Extensions.GetPropertyValue(object, string)
  fullName: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(object, string)
  nameWithType.vb: Extensions.GetPropertyValue(Object, String)
  fullName.vb: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(Object, String)
  name.vb: GetPropertyValue(Object, String)
  spec.csharp:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.String)
  commentId: M:H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
  parent: H.Controls.FilterColumnDataGrid.Extensions
  definition: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
  href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  name: GetPropertyValue<T>(object, string)
  nameWithType: Extensions.GetPropertyValue<T>(object, string)
  fullName: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue<T>(object, string)
  nameWithType.vb: Extensions.GetPropertyValue(Of T)(Object, String)
  fullName.vb: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(Of T)(Object, String)
  name.vb: GetPropertyValue(Of T)(Object, String)
  spec.csharp:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1
  commentId: M:H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
  parent: H.Controls.Form.Provider.PropertyInfoExtention
  definition: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
  href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  name: ChangeType<T>(object)
  nameWithType: PropertyInfoExtention.ChangeType<T>(object)
  fullName: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType<T>(object)
  nameWithType.vb: PropertyInfoExtention.ChangeType(Of T)(Object)
  fullName.vb: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType(Of T)(Object)
  name.vb: ChangeType(Of T)(Object)
  spec.csharp:
  - uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
    name: ChangeType
    href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
    name: ChangeType
    href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.CloneBy(System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  name: CloneBy(object, Predicate<PropertyInfo>)
  nameWithType: ObjectExtension.CloneBy(object, Predicate<PropertyInfo>)
  fullName: H.Extensions.Common.ObjectExtension.CloneBy(object, System.Predicate<System.Reflection.PropertyInfo>)
  nameWithType.vb: ObjectExtension.CloneBy(Object, Predicate(Of PropertyInfo))
  fullName.vb: H.Extensions.Common.ObjectExtension.CloneBy(Object, System.Predicate(Of System.Reflection.PropertyInfo))
  name.vb: CloneBy(Object, Predicate(Of PropertyInfo))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneBy
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneBy
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  name: CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  nameWithType: ObjectExtension.CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  fullName: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(object, object, System.Predicate<System.Reflection.PropertyInfo>, System.Func<System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, bool>)
  nameWithType.vb: ObjectExtension.CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(Object, Object, System.Predicate(Of System.Reflection.PropertyInfo), System.Func(Of System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, Boolean))
  name.vb: CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
    name: CopyPropertyValueFrom
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
    name: CopyPropertyValueFrom
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.IsMacth(System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  name: IsMacth(object, Func<PropertyInfo, object, bool>)
  nameWithType: ObjectExtension.IsMacth(object, Func<PropertyInfo, object, bool>)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, System.Func<System.Reflection.PropertyInfo, object, bool>)
  nameWithType.vb: ObjectExtension.IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, System.Func(Of System.Reflection.PropertyInfo, Object, Boolean))
  name.vb: IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.IsMacth(System.String)
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  name: IsMacth(object, string)
  nameWithType: ObjectExtension.IsMacth(object, string)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, string)
  nameWithType.vb: ObjectExtension.IsMacth(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, String)
  name.vb: IsMacth(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.ModelState(System.Collections.Generic.List{System.String}@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  name: ModelState(object, out List<string>)
  nameWithType: ObjectExtension.ModelState(object, out List<string>)
  fullName: H.Extensions.Common.ObjectExtension.ModelState(object, out System.Collections.Generic.List<string>)
  nameWithType.vb: ObjectExtension.ModelState(Object, List(Of String))
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelState(Object, System.Collections.Generic.List(Of String))
  name.vb: ModelState(Object, List(Of String))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
    name: ModelState
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
    name: ModelState
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.ModelStateDeep(System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  name: ModelStateDeep(object, out string)
  nameWithType: ObjectExtension.ModelStateDeep(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.ModelStateDeep(object, out string)
  nameWithType.vb: ObjectExtension.ModelStateDeep(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelStateDeep(Object, String)
  name.vb: ModelStateDeep(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
    name: ModelStateDeep
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
    name: ModelStateDeep
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryChangeType(System.Type,System.Object@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  name: TryChangeType(object, Type, out object)
  nameWithType: ObjectExtension.TryChangeType(object, Type, out object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType(object, System.Type, out object)
  nameWithType.vb: ObjectExtension.TryChangeType(Object, Type, Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Object, System.Type, Object)
  name.vb: TryChangeType(Object, Type, Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryChangeType``1
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  name: TryChangeType<T>(object)
  nameWithType: ObjectExtension.TryChangeType<T>(object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object)
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object)
  name.vb: TryChangeType(Of T)(Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryChangeType``1({T}@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  name: TryChangeType<T>(object, out T)
  nameWithType: ObjectExtension.TryChangeType<T>(object, out T)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object, out T)
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object, T)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object, T)
  name.vb: TryChangeType(Of T)(Object, T)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryConvertToString
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  name: TryConvertToString(object)
  nameWithType: ObjectExtension.TryConvertToString(object)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object)
  nameWithType.vb: ObjectExtension.TryConvertToString(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object)
  name.vb: TryConvertToString(Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.Common.ObjectExtension.TryConvertToString(System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  parent: H.Extensions.Common.ObjectExtension
  definition: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  name: TryConvertToString(object, out string)
  nameWithType: ObjectExtension.TryConvertToString(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object, out string)
  nameWithType.vb: ObjectExtension.TryConvertToString(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object, String)
  name.vb: TryConvertToString(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
  parent: H.Extensions.TextJsonable.TextJsonableExtensions
  definition: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  name: GetJsonPropertyInfos(object)
  nameWithType: TextJsonableExtensions.GetJsonPropertyInfos(object)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(object)
  nameWithType.vb: TextJsonableExtensions.GetJsonPropertyInfos(Object)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(Object)
  name.vb: GetJsonPropertyInfos(Object)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
    name: GetJsonPropertyInfos
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
    name: GetJsonPropertyInfos
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  parent: H.Extensions.TextJsonable.TextJsonableExtensions
  definition: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  name: WriteJson(object, Utf8JsonWriter, JsonSerializerOptions, bool)
  nameWithType: TextJsonableExtensions.WriteJson(object, Utf8JsonWriter, JsonSerializerOptions, bool)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(object, System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions, bool)
  nameWithType.vb: TextJsonableExtensions.WriteJson(Object, Utf8JsonWriter, JsonSerializerOptions, Boolean)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(Object, System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions, Boolean)
  name.vb: WriteJson(Object, Utf8JsonWriter, JsonSerializerOptions, Boolean)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
    name: WriteJson
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
    name: WriteJson
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Text.Json.Utf8JsonWriter)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
  parent: H.Extensions.TextJsonable.TextJsonableExtensions
  definition: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  name: WriteType(object, Utf8JsonWriter)
  nameWithType: TextJsonableExtensions.WriteType(object, Utf8JsonWriter)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(object, System.Text.Json.Utf8JsonWriter)
  nameWithType.vb: TextJsonableExtensions.WriteType(Object, Utf8JsonWriter)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(Object, System.Text.Json.Utf8JsonWriter)
  name.vb: WriteType(Object, Utf8JsonWriter)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
    name: WriteType
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
    name: WriteType
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: )
- uid: System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.DispatcherExtension
  definition: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.DispatcherExtension
  definition: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, IList, Action<object>, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, IList, Action<object>, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Collections.IList, System.Action<object>, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, IList, Action(Of Object), Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Collections.IList, System.Action(Of Object), System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, IList, Action(Of Object), Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System.Object.System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.DispatcherExtension
  definition: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, IList, Func<IList>, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, IList, Func<IList>, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Collections.IList, System.Func<System.Collections.IList>, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, IList, Func(Of IList), Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Collections.IList, System.Func(Of System.Collections.IList), System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, IList, Func(Of IList), Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  commentId: M:H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  name: ToEnumerable<T>(T)
  nameWithType: ObjectExtension.ToEnumerable<T>(T)
  fullName: H.Extensions.Common.ObjectExtension.ToEnumerable<T>(T)
  nameWithType.vb: ObjectExtension.ToEnumerable(Of T)(T)
  fullName.vb: H.Extensions.Common.ObjectExtension.ToEnumerable(Of T)(T)
  name.vb: ToEnumerable(Of T)(T)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
    name: ToEnumerable
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ToEnumerable``1(``0)
    name: ToEnumerable
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ToEnumerable__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: H.Extensions.Common.ObjectExtension
  commentId: T:H.Extensions.Common.ObjectExtension
  parent: H.Extensions.Common
  href: H.Extensions.Common.ObjectExtension.html
  name: ObjectExtension
  nameWithType: ObjectExtension
  fullName: H.Extensions.Common.ObjectExtension
- uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
  commentId: M:H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
  href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  name: CloneByNewtonsoftJson<T>(T)
  nameWithType: NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson<T>(T)
  fullName: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson<T>(T)
  nameWithType.vb: NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson(Of T)(T)
  fullName.vb: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson(Of T)(T)
  name.vb: CloneByNewtonsoftJson(Of T)(T)
  spec.csharp:
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
    name: CloneByNewtonsoftJson
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.CloneByNewtonsoftJson``1(``0)
    name: CloneByNewtonsoftJson
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html#H_Extensions_NewtonsoftJson_NewtonsoftJsonSerializerServiceExtension_CloneByNewtonsoftJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension
  commentId: T:H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension
  parent: H.Extensions.NewtonsoftJson
  href: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension.html
  name: NewtonsoftJsonSerializerServiceExtension
  nameWithType: NewtonsoftJsonSerializerServiceExtension
  fullName: H.Extensions.NewtonsoftJson.NewtonsoftJsonSerializerServiceExtension
- uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
  commentId: M:H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
  href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  name: ToValueResultPresenter<T>(T)
  nameWithType: ResultPresenterExtension.ToValueResultPresenter<T>(T)
  fullName: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter<T>(T)
  nameWithType.vb: ResultPresenterExtension.ToValueResultPresenter(Of T)(T)
  fullName.vb: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter(Of T)(T)
  name.vb: ToValueResultPresenter(Of T)(T)
  spec.csharp:
  - uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
    name: ToValueResultPresenter
    href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension.ToValueResultPresenter``1(``0)
    name: ToValueResultPresenter
    href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html#H_VisionMaster_ResultPresenter_ResultPresenterExtension_ToValueResultPresenter__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: H.VisionMaster.ResultPresenter.ResultPresenterExtension
  commentId: T:H.VisionMaster.ResultPresenter.ResultPresenterExtension
  parent: H.VisionMaster.ResultPresenter
  href: H.VisionMaster.ResultPresenter.ResultPresenterExtension.html
  name: ResultPresenterExtension
  nameWithType: ResultPresenterExtension
  fullName: H.VisionMaster.ResultPresenter.ResultPresenterExtension
- uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
  commentId: M:H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
  isExternal: true
  href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  name: GetPropertyValue(object, string)
  nameWithType: Extensions.GetPropertyValue(object, string)
  fullName: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(object, string)
  nameWithType.vb: Extensions.GetPropertyValue(Object, String)
  fullName.vb: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(Object, String)
  name.vb: GetPropertyValue(Object, String)
  spec.csharp:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Controls.FilterColumnDataGrid.Extensions
  commentId: T:H.Controls.FilterColumnDataGrid.Extensions
  parent: H.Controls.FilterColumnDataGrid
  href: H.Controls.FilterColumnDataGrid.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: H.Controls.FilterColumnDataGrid.Extensions
- uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
  commentId: M:H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
  isExternal: true
  href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  name: GetPropertyValue<T>(object, string)
  nameWithType: Extensions.GetPropertyValue<T>(object, string)
  fullName: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue<T>(object, string)
  nameWithType.vb: Extensions.GetPropertyValue(Of T)(Object, String)
  fullName.vb: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue(Of T)(Object, String)
  name.vb: GetPropertyValue(Of T)(Object, String)
  spec.csharp:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Controls.FilterColumnDataGrid.Extensions.GetPropertyValue``1(System.Object,System.String)
    name: GetPropertyValue
    href: H.Controls.FilterColumnDataGrid.Extensions.html#H_Controls_FilterColumnDataGrid_Extensions_GetPropertyValue__1_System_Object_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
  commentId: M:H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
  isExternal: true
  href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  name: ChangeType<T>(object)
  nameWithType: PropertyInfoExtention.ChangeType<T>(object)
  fullName: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType<T>(object)
  nameWithType.vb: PropertyInfoExtention.ChangeType(Of T)(Object)
  fullName.vb: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType(Of T)(Object)
  name.vb: ChangeType(Of T)(Object)
  spec.csharp:
  - uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
    name: ChangeType
    href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Controls.Form.Provider.PropertyInfoExtention.ChangeType``1(System.Object)
    name: ChangeType
    href: H.Controls.Form.Provider.PropertyInfoExtention.html#H_Controls_Form_Provider_PropertyInfoExtention_ChangeType__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Controls.Form.Provider.PropertyInfoExtention
  commentId: T:H.Controls.Form.Provider.PropertyInfoExtention
  parent: H.Controls.Form.Provider
  href: H.Controls.Form.Provider.PropertyInfoExtention.html
  name: PropertyInfoExtention
  nameWithType: PropertyInfoExtention
  fullName: H.Controls.Form.Provider.PropertyInfoExtention
- uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  name: CloneBy(object, Predicate<PropertyInfo>)
  nameWithType: ObjectExtension.CloneBy(object, Predicate<PropertyInfo>)
  fullName: H.Extensions.Common.ObjectExtension.CloneBy(object, System.Predicate<System.Reflection.PropertyInfo>)
  nameWithType.vb: ObjectExtension.CloneBy(Object, Predicate(Of PropertyInfo))
  fullName.vb: H.Extensions.Common.ObjectExtension.CloneBy(Object, System.Predicate(Of System.Reflection.PropertyInfo))
  name.vb: CloneBy(Object, Predicate(Of PropertyInfo))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneBy
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CloneBy(System.Object,System.Predicate{System.Reflection.PropertyInfo})
    name: CloneBy
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CloneBy_System_Object_System_Predicate_System_Reflection_PropertyInfo__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: )
- uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  name: CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  nameWithType: ObjectExtension.CopyPropertyValueFrom(object, object, Predicate<PropertyInfo>, Func<PropertyInfo, PropertyInfo, bool>)
  fullName: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(object, object, System.Predicate<System.Reflection.PropertyInfo>, System.Func<System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, bool>)
  nameWithType.vb: ObjectExtension.CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(Object, Object, System.Predicate(Of System.Reflection.PropertyInfo), System.Func(Of System.Reflection.PropertyInfo, System.Reflection.PropertyInfo, Boolean))
  name.vb: CopyPropertyValueFrom(Object, Object, Predicate(Of PropertyInfo), Func(Of PropertyInfo, PropertyInfo, Boolean))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
    name: CopyPropertyValueFrom
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.CopyPropertyValueFrom(System.Object,System.Object,System.Predicate{System.Reflection.PropertyInfo},System.Func{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Boolean})
    name: CopyPropertyValueFrom
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_CopyPropertyValueFrom_System_Object_System_Object_System_Predicate_System_Reflection_PropertyInfo__System_Func_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_System_Boolean__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  name: IsMacth(object, Func<PropertyInfo, object, bool>)
  nameWithType: ObjectExtension.IsMacth(object, Func<PropertyInfo, object, bool>)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, System.Func<System.Reflection.PropertyInfo, object, bool>)
  nameWithType.vb: ObjectExtension.IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, System.Func(Of System.Reflection.PropertyInfo, Object, Boolean))
  name.vb: IsMacth(Object, Func(Of PropertyInfo, Object, Boolean))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean})
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_Func_System_Reflection_PropertyInfo_System_Object_System_Boolean__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  commentId: M:H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  name: IsMacth(object, string)
  nameWithType: ObjectExtension.IsMacth(object, string)
  fullName: H.Extensions.Common.ObjectExtension.IsMacth(object, string)
  nameWithType.vb: ObjectExtension.IsMacth(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.IsMacth(Object, String)
  name.vb: IsMacth(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.IsMacth(System.Object,System.String)
    name: IsMacth
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_IsMacth_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  name: ModelState(object, out List<string>)
  nameWithType: ObjectExtension.ModelState(object, out List<string>)
  fullName: H.Extensions.Common.ObjectExtension.ModelState(object, out System.Collections.Generic.List<string>)
  nameWithType.vb: ObjectExtension.ModelState(Object, List(Of String))
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelState(Object, System.Collections.Generic.List(Of String))
  name.vb: ModelState(Object, List(Of String))
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
    name: ModelState
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ModelState(System.Object,System.Collections.Generic.List{System.String}@)
    name: ModelState
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelState_System_Object_System_Collections_Generic_List_System_String___
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  name: ModelStateDeep(object, out string)
  nameWithType: ObjectExtension.ModelStateDeep(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.ModelStateDeep(object, out string)
  nameWithType.vb: ObjectExtension.ModelStateDeep(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.ModelStateDeep(Object, String)
  name.vb: ModelStateDeep(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
    name: ModelStateDeep
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.ModelStateDeep(System.Object,System.String@)
    name: ModelStateDeep
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_ModelStateDeep_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  name: TryChangeType(object, Type, out object)
  nameWithType: ObjectExtension.TryChangeType(object, Type, out object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType(object, System.Type, out object)
  nameWithType.vb: ObjectExtension.TryChangeType(Object, Type, Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Object, System.Type, Object)
  name.vb: TryChangeType(Object, Type, Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType(System.Object,System.Type,System.Object@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType_System_Object_System_Type_System_Object__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  name: TryChangeType<T>(object)
  nameWithType: ObjectExtension.TryChangeType<T>(object)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object)
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object)
  name.vb: TryChangeType(Of T)(Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  name: TryChangeType<T>(object, out T)
  nameWithType: ObjectExtension.TryChangeType<T>(object, out T)
  fullName: H.Extensions.Common.ObjectExtension.TryChangeType<T>(object, out T)
  nameWithType.vb: ObjectExtension.TryChangeType(Of T)(Object, T)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryChangeType(Of T)(Object, T)
  name.vb: TryChangeType(Of T)(Object, T)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryChangeType``1(System.Object,``0@)
    name: TryChangeType
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryChangeType__1_System_Object___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  name: TryConvertToString(object)
  nameWithType: ObjectExtension.TryConvertToString(object)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object)
  nameWithType.vb: ObjectExtension.TryConvertToString(Object)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object)
  name.vb: TryConvertToString(Object)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  commentId: M:H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
  isExternal: true
  href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  name: TryConvertToString(object, out string)
  nameWithType: ObjectExtension.TryConvertToString(object, out string)
  fullName: H.Extensions.Common.ObjectExtension.TryConvertToString(object, out string)
  nameWithType.vb: ObjectExtension.TryConvertToString(Object, String)
  fullName.vb: H.Extensions.Common.ObjectExtension.TryConvertToString(Object, String)
  name.vb: TryConvertToString(Object, String)
  spec.csharp:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: H.Extensions.Common.ObjectExtension.TryConvertToString(System.Object,System.String@)
    name: TryConvertToString
    href: H.Extensions.Common.ObjectExtension.html#H_Extensions_Common_ObjectExtension_TryConvertToString_System_Object_System_String__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
  isExternal: true
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  name: GetJsonPropertyInfos(object)
  nameWithType: TextJsonableExtensions.GetJsonPropertyInfos(object)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(object)
  nameWithType.vb: TextJsonableExtensions.GetJsonPropertyInfos(Object)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(Object)
  name.vb: GetJsonPropertyInfos(Object)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
    name: GetJsonPropertyInfos
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.GetJsonPropertyInfos(System.Object)
    name: GetJsonPropertyInfos
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_GetJsonPropertyInfos_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.TextJsonable.TextJsonableExtensions
  commentId: T:H.Extensions.TextJsonable.TextJsonableExtensions
  parent: H.Extensions.TextJsonable
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html
  name: TextJsonableExtensions
  nameWithType: TextJsonableExtensions
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions
- uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
  isExternal: true
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  name: WriteJson(object, Utf8JsonWriter, JsonSerializerOptions, bool)
  nameWithType: TextJsonableExtensions.WriteJson(object, Utf8JsonWriter, JsonSerializerOptions, bool)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(object, System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions, bool)
  nameWithType.vb: TextJsonableExtensions.WriteJson(Object, Utf8JsonWriter, JsonSerializerOptions, Boolean)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(Object, System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions, Boolean)
  name.vb: WriteJson(Object, Utf8JsonWriter, JsonSerializerOptions, Boolean)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
    name: WriteJson
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteJson(System.Object,System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions,System.Boolean)
    name: WriteJson
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteJson_System_Object_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_System_Boolean_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
  commentId: M:H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
  isExternal: true
  href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  name: WriteType(object, Utf8JsonWriter)
  nameWithType: TextJsonableExtensions.WriteType(object, Utf8JsonWriter)
  fullName: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(object, System.Text.Json.Utf8JsonWriter)
  nameWithType.vb: TextJsonableExtensions.WriteType(Object, Utf8JsonWriter)
  fullName.vb: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(Object, System.Text.Json.Utf8JsonWriter)
  name.vb: WriteType(Object, Utf8JsonWriter)
  spec.csharp:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
    name: WriteType
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: )
  spec.vb:
  - uid: H.Extensions.TextJsonable.TextJsonableExtensions.WriteType(System.Object,System.Text.Json.Utf8JsonWriter)
    name: WriteType
    href: H.Extensions.TextJsonable.TextJsonableExtensions.html#H_Extensions_TextJsonable_TextJsonableExtensions_WriteType_System_Object_System_Text_Json_Utf8JsonWriter_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.utf8jsonwriter
  - name: )
- uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
  isExternal: true
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System.Windows.Threading.DispatcherExtension
  commentId: T:System.Windows.Threading.DispatcherExtension
  parent: System.Windows.Threading
  href: System.Windows.Threading.DispatcherExtension.html
  name: DispatcherExtension
  nameWithType: DispatcherExtension
  fullName: System.Windows.Threading.DispatcherExtension
- uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
  isExternal: true
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, IList, Action<object>, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, IList, Action<object>, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Collections.IList, System.Action<object>, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, IList, Action(Of Object), Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Collections.IList, System.Action(Of Object), System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, IList, Action(Of Object), Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Action{System.Object},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Action_System_Object__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
  isExternal: true
  href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  name: DelayInvoke(object, IList, Func<IList>, Action, DispatcherPriority)
  nameWithType: DispatcherExtension.DelayInvoke(object, IList, Func<IList>, Action, DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherExtension.DelayInvoke(object, System.Collections.IList, System.Func<System.Collections.IList>, System.Action, System.Windows.Threading.DispatcherPriority)
  nameWithType.vb: DispatcherExtension.DelayInvoke(Object, IList, Func(Of IList), Action, DispatcherPriority)
  fullName.vb: System.Windows.Threading.DispatcherExtension.DelayInvoke(Object, System.Collections.IList, System.Func(Of System.Collections.IList), System.Action, System.Windows.Threading.DispatcherPriority)
  name.vb: DelayInvoke(Object, IList, Func(Of IList), Action, DispatcherPriority)
  spec.csharp:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
  spec.vb:
  - uid: System.Windows.Threading.DispatcherExtension.DelayInvoke(System.Object,System.Collections.IList,System.Func{System.Collections.IList},System.Action,System.Windows.Threading.DispatcherPriority)
    name: DelayInvoke
    href: System.Windows.Threading.DispatcherExtension.html#System_Windows_Threading_DispatcherExtension_DelayInvoke_System_Object_System_Collections_IList_System_Func_System_Collections_IList__System_Action_System_Windows_Threading_DispatcherPriority_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.IList
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Windows.Threading.DispatcherPriority
    name: DispatcherPriority
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: H.Extensions.Common
  commentId: N:H.Extensions.Common
  href: H.html
  name: H.Extensions.Common
  nameWithType: H.Extensions.Common
  fullName: H.Extensions.Common
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Common
    name: Common
    href: H.Extensions.Common.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.Common
    name: Common
    href: H.Extensions.Common.html
- uid: H.Extensions.NewtonsoftJson
  commentId: N:H.Extensions.NewtonsoftJson
  href: H.html
  name: H.Extensions.NewtonsoftJson
  nameWithType: H.Extensions.NewtonsoftJson
  fullName: H.Extensions.NewtonsoftJson
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.NewtonsoftJson
    name: NewtonsoftJson
    href: H.Extensions.NewtonsoftJson.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.NewtonsoftJson
    name: NewtonsoftJson
    href: H.Extensions.NewtonsoftJson.html
- uid: H.VisionMaster.ResultPresenter
  commentId: N:H.VisionMaster.ResultPresenter
  href: H.html
  name: H.VisionMaster.ResultPresenter
  nameWithType: H.VisionMaster.ResultPresenter
  fullName: H.VisionMaster.ResultPresenter
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.VisionMaster
    name: VisionMaster
    href: H.VisionMaster.html
  - name: .
  - uid: H.VisionMaster.ResultPresenter
    name: ResultPresenter
    href: H.VisionMaster.ResultPresenter.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.VisionMaster
    name: VisionMaster
    href: H.VisionMaster.html
  - name: .
  - uid: H.VisionMaster.ResultPresenter
    name: ResultPresenter
    href: H.VisionMaster.ResultPresenter.html
- uid: H.Controls.FilterColumnDataGrid
  commentId: N:H.Controls.FilterColumnDataGrid
  href: H.html
  name: H.Controls.FilterColumnDataGrid
  nameWithType: H.Controls.FilterColumnDataGrid
  fullName: H.Controls.FilterColumnDataGrid
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.FilterColumnDataGrid
    name: FilterColumnDataGrid
    href: H.Controls.FilterColumnDataGrid.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.FilterColumnDataGrid
    name: FilterColumnDataGrid
    href: H.Controls.FilterColumnDataGrid.html
- uid: H.Controls.Form.Provider
  commentId: N:H.Controls.Form.Provider
  href: H.html
  name: H.Controls.Form.Provider
  nameWithType: H.Controls.Form.Provider
  fullName: H.Controls.Form.Provider
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.Form
    name: Form
    href: H.Controls.Form.html
  - name: .
  - uid: H.Controls.Form.Provider
    name: Provider
    href: H.Controls.Form.Provider.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Controls
    name: Controls
    href: H.Controls.html
  - name: .
  - uid: H.Controls.Form
    name: Form
    href: H.Controls.Form.html
  - name: .
  - uid: H.Controls.Form.Provider
    name: Provider
    href: H.Controls.Form.Provider.html
- uid: H.Extensions.TextJsonable
  commentId: N:H.Extensions.TextJsonable
  href: H.html
  name: H.Extensions.TextJsonable
  nameWithType: H.Extensions.TextJsonable
  fullName: H.Extensions.TextJsonable
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.TextJsonable
    name: TextJsonable
    href: H.Extensions.TextJsonable.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.TextJsonable
    name: TextJsonable
    href: H.Extensions.TextJsonable.html
- uid: System.Windows.Threading
  commentId: N:System.Windows.Threading
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Threading
  nameWithType: System.Windows.Threading
  fullName: System.Windows.Threading
  spec.csharp:
  - uid: System
    name: System
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Threading
    name: Threading
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading
  spec.vb:
  - uid: System
    name: System
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Threading
    name: Threading
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading
- uid: H.Extensions.Unit.PhysicalQuantity.Value*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.Value
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_Value
  name: Value
  nameWithType: PhysicalQuantity.Value
  fullName: H.Extensions.Unit.PhysicalQuantity.Value
- uid: H.Extensions.Unit.IPhysicalQuantity.Value
  commentId: P:H.Extensions.Unit.IPhysicalQuantity.Value
  parent: H.Extensions.Unit.IPhysicalQuantity
  href: H.Extensions.Unit.IPhysicalQuantity.html#H_Extensions_Unit_IPhysicalQuantity_Value
  name: Value
  nameWithType: IPhysicalQuantity.Value
  fullName: H.Extensions.Unit.IPhysicalQuantity.Value
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: H.Extensions.Unit.PhysicalQuantity.Dimensions*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.Dimensions
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_Dimensions
  name: Dimensions
  nameWithType: PhysicalQuantity.Dimensions
  fullName: H.Extensions.Unit.PhysicalQuantity.Dimensions
- uid: H.Extensions.Unit.IPhysicalQuantity.Dimensions
  commentId: P:H.Extensions.Unit.IPhysicalQuantity.Dimensions
  parent: H.Extensions.Unit.IPhysicalQuantity
  href: H.Extensions.Unit.IPhysicalQuantity.html#H_Extensions_Unit_IPhysicalQuantity_Dimensions
  name: Dimensions
  nameWithType: IPhysicalQuantity.Dimensions
  fullName: H.Extensions.Unit.IPhysicalQuantity.Dimensions
- uid: H.Extensions.Unit.Dimensions
  commentId: T:H.Extensions.Unit.Dimensions
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Dimensions.html
  name: Dimensions
  nameWithType: Dimensions
  fullName: H.Extensions.Unit.Dimensions
- uid: H.Extensions.Unit.PhysicalQuantity.#ctor*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.#ctor
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity__ctor_System_Double_H_Extensions_Unit_Dimensions_
  name: PhysicalQuantity
  nameWithType: PhysicalQuantity.PhysicalQuantity
  fullName: H.Extensions.Unit.PhysicalQuantity.PhysicalQuantity
  nameWithType.vb: PhysicalQuantity.New
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.New
  name.vb: New
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: H.Extensions.Unit.PhysicalQuantity.ToString*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.ToString
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_ToString
  name: ToString
  nameWithType: PhysicalQuantity.ToString
  fullName: H.Extensions.Unit.PhysicalQuantity.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: H.Extensions.Unit.IPhysicalQuantity.ToString(System.Int32,H.Extensions.Unit.Unit[])
  commentId: M:H.Extensions.Unit.IPhysicalQuantity.ToString(System.Int32,H.Extensions.Unit.Unit[])
  parent: H.Extensions.Unit.IPhysicalQuantity
  isExternal: true
  href: H.Extensions.Unit.IPhysicalQuantity.html#H_Extensions_Unit_IPhysicalQuantity_ToString_System_Int32_H_Extensions_Unit_Unit___
  name: ToString(int, params Unit[])
  nameWithType: IPhysicalQuantity.ToString(int, params Unit[])
  fullName: H.Extensions.Unit.IPhysicalQuantity.ToString(int, params H.Extensions.Unit.Unit[])
  nameWithType.vb: IPhysicalQuantity.ToString(Integer, ParamArray Unit())
  fullName.vb: H.Extensions.Unit.IPhysicalQuantity.ToString(Integer, ParamArray H.Extensions.Unit.Unit())
  name.vb: ToString(Integer, ParamArray Unit())
  spec.csharp:
  - uid: H.Extensions.Unit.IPhysicalQuantity.ToString(System.Int32,H.Extensions.Unit.Unit[])
    name: ToString
    href: H.Extensions.Unit.IPhysicalQuantity.html#H_Extensions_Unit_IPhysicalQuantity_ToString_System_Int32_H_Extensions_Unit_Unit___
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: H.Extensions.Unit.Unit
    name: Unit
    href: H.Extensions.Unit.Unit.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: H.Extensions.Unit.IPhysicalQuantity.ToString(System.Int32,H.Extensions.Unit.Unit[])
    name: ToString
    href: H.Extensions.Unit.IPhysicalQuantity.html#H_Extensions_Unit_IPhysicalQuantity_ToString_System_Int32_H_Extensions_Unit_Unit___
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: H.Extensions.Unit.Unit
    name: Unit
    href: H.Extensions.Unit.Unit.html
  - name: (
  - name: )
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: H.Extensions.Unit.Unit[]
  isExternal: true
  href: H.Extensions.Unit.Unit.html
  name: Unit[]
  nameWithType: Unit[]
  fullName: H.Extensions.Unit.Unit[]
  nameWithType.vb: Unit()
  fullName.vb: H.Extensions.Unit.Unit()
  name.vb: Unit()
  spec.csharp:
  - uid: H.Extensions.Unit.Unit
    name: Unit
    href: H.Extensions.Unit.Unit.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: H.Extensions.Unit.Unit
    name: Unit
    href: H.Extensions.Unit.Unit.html
  - name: (
  - name: )
- uid: H.Extensions.Unit.PhysicalQuantity.Compare*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.Compare
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_Compare_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
  name: Compare
  nameWithType: PhysicalQuantity.Compare
  fullName: H.Extensions.Unit.PhysicalQuantity.Compare
- uid: H.Extensions.Unit.PhysicalQuantity
  commentId: T:H.Extensions.Unit.PhysicalQuantity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.PhysicalQuantity.html
  name: PhysicalQuantity
  nameWithType: PhysicalQuantity
  fullName: H.Extensions.Unit.PhysicalQuantity
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Extensions.Unit.PhysicalQuantity.Equals*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.Equals
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_Equals_System_Object_
  name: Equals
  nameWithType: PhysicalQuantity.Equals
  fullName: H.Extensions.Unit.PhysicalQuantity.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: H.Extensions.Unit.PhysicalQuantity.GetHashCode*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.GetHashCode
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_GetHashCode
  name: GetHashCode
  nameWithType: PhysicalQuantity.GetHashCode
  fullName: H.Extensions.Unit.PhysicalQuantity.GetHashCode
- uid: H.Extensions.Unit.PhysicalQuantity.op_Equality*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_Equality
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Equality_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
  name: operator ==
  nameWithType: PhysicalQuantity.operator ==
  fullName: H.Extensions.Unit.PhysicalQuantity.operator ==
  nameWithType.vb: PhysicalQuantity.=
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_Equality*
    name: ==
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Equality_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
- uid: H.Extensions.Unit.PhysicalQuantity.op_Inequality*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_Inequality
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Inequality_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
  name: operator !=
  nameWithType: PhysicalQuantity.operator !=
  fullName: H.Extensions.Unit.PhysicalQuantity.operator !=
  nameWithType.vb: PhysicalQuantity.<>
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_Inequality*
    name: '!='
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Inequality_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
- uid: H.Extensions.Unit.PhysicalQuantity.op_GreaterThan*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_GreaterThan
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_GreaterThan_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
  name: operator >
  nameWithType: PhysicalQuantity.operator >
  fullName: H.Extensions.Unit.PhysicalQuantity.operator >
  nameWithType.vb: PhysicalQuantity.>
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.>
  name.vb: '>'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_GreaterThan*
    name: '>'
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_GreaterThan_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
- uid: H.Extensions.Unit.PhysicalQuantity.op_GreaterThanOrEqual*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_GreaterThanOrEqual
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_GreaterThanOrEqual_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
  name: operator >=
  nameWithType: PhysicalQuantity.operator >=
  fullName: H.Extensions.Unit.PhysicalQuantity.operator >=
  nameWithType.vb: PhysicalQuantity.>=
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.>=
  name.vb: '>='
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_GreaterThanOrEqual*
    name: '>='
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_GreaterThanOrEqual_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
- uid: H.Extensions.Unit.PhysicalQuantity.op_LessThanOrEqual*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_LessThanOrEqual
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_LessThanOrEqual_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
  name: operator <=
  nameWithType: PhysicalQuantity.operator <=
  fullName: H.Extensions.Unit.PhysicalQuantity.operator <=
  nameWithType.vb: PhysicalQuantity.<=
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.<=
  name.vb: <=
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_LessThanOrEqual*
    name: <=
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_LessThanOrEqual_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
- uid: H.Extensions.Unit.PhysicalQuantity.op_LessThan*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_LessThan
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_LessThan_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
  name: operator <
  nameWithType: PhysicalQuantity.operator <
  fullName: H.Extensions.Unit.PhysicalQuantity.operator <
  nameWithType.vb: PhysicalQuantity.<
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.<
  name.vb: <
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_LessThan*
    name: <
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_LessThan_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
- uid: H.Extensions.Unit.PhysicalQuantity.op_Addition*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_Addition
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Addition_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
  name: operator +
  nameWithType: PhysicalQuantity.operator +
  fullName: H.Extensions.Unit.PhysicalQuantity.operator +
  nameWithType.vb: PhysicalQuantity.+
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_Addition*
    name: +
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Addition_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
- uid: H.Extensions.Unit.PhysicalQuantity.op_Subtraction*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_Subtraction
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Subtraction_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
  name: operator -
  nameWithType: PhysicalQuantity.operator -
  fullName: H.Extensions.Unit.PhysicalQuantity.operator -
  nameWithType.vb: PhysicalQuantity.-
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_Subtraction*
    name: '-'
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Subtraction_H_Extensions_Unit_PhysicalQuantity_H_Extensions_Unit_IPhysicalQuantity_
- uid: H.Extensions.Unit.PhysicalQuantity.op_Multiply*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_Multiply
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Multiply_H_Extensions_Unit_PhysicalQuantity_System_Double_
  name: operator *
  nameWithType: PhysicalQuantity.operator *
  fullName: H.Extensions.Unit.PhysicalQuantity.operator *
  nameWithType.vb: PhysicalQuantity.*
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_Multiply*
    name: '*'
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Multiply_H_Extensions_Unit_PhysicalQuantity_System_Double_
- uid: H.Extensions.Unit.PhysicalQuantity.op_Division*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_Division
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Division_H_Extensions_Unit_PhysicalQuantity_System_Double_
  name: operator /
  nameWithType: PhysicalQuantity.operator /
  fullName: H.Extensions.Unit.PhysicalQuantity.operator /
  nameWithType.vb: PhysicalQuantity./
  fullName.vb: H.Extensions.Unit.PhysicalQuantity./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_Division*
    name: /
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_Division_H_Extensions_Unit_PhysicalQuantity_System_Double_
- uid: H.Extensions.Unit.PhysicalQuantity.op_ExclusiveOr*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_ExclusiveOr
  href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_ExclusiveOr_H_Extensions_Unit_PhysicalQuantity_System_Int16_
  name: operator ^
  nameWithType: PhysicalQuantity.operator ^
  fullName: H.Extensions.Unit.PhysicalQuantity.operator ^
  nameWithType.vb: PhysicalQuantity.Xor
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.Xor
  name.vb: Xor
  spec.csharp:
  - name: operator
  - name: " "
  - uid: H.Extensions.Unit.PhysicalQuantity.op_ExclusiveOr*
    name: ^
    href: H.Extensions.Unit.PhysicalQuantity.html#H_Extensions_Unit_PhysicalQuantity_op_ExclusiveOr_H_Extensions_Unit_PhysicalQuantity_System_Int16_
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: H.Extensions.Unit.PhysicalQuantity.op_Implicit*
  commentId: Overload:H.Extensions.Unit.PhysicalQuantity.op_Implicit
  name: implicit operator
  nameWithType: PhysicalQuantity.implicit operator
  fullName: H.Extensions.Unit.PhysicalQuantity.implicit operator
  nameWithType.vb: PhysicalQuantity.CType
  fullName.vb: H.Extensions.Unit.PhysicalQuantity.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: H.Extensions.Unit.Dimensionless
  commentId: T:H.Extensions.Unit.Dimensionless
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Dimensionless.html
  name: Dimensionless
  nameWithType: Dimensionless
  fullName: H.Extensions.Unit.Dimensionless
- uid: H.Extensions.Unit.Mass
  commentId: T:H.Extensions.Unit.Mass
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Mass.html
  name: Mass
  nameWithType: Mass
  fullName: H.Extensions.Unit.Mass
- uid: H.Extensions.Unit.Length
  commentId: T:H.Extensions.Unit.Length
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Length.html
  name: Length
  nameWithType: Length
  fullName: H.Extensions.Unit.Length
- uid: H.Extensions.Unit.Time
  commentId: T:H.Extensions.Unit.Time
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Time.html
  name: Time
  nameWithType: Time
  fullName: H.Extensions.Unit.Time
- uid: H.Extensions.Unit.Current
  commentId: T:H.Extensions.Unit.Current
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Current.html
  name: Current
  nameWithType: Current
  fullName: H.Extensions.Unit.Current
- uid: H.Extensions.Unit.TemperatureChange
  commentId: T:H.Extensions.Unit.TemperatureChange
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.TemperatureChange.html
  name: TemperatureChange
  nameWithType: TemperatureChange
  fullName: H.Extensions.Unit.TemperatureChange
- uid: H.Extensions.Unit.AmountOfSubstance
  commentId: T:H.Extensions.Unit.AmountOfSubstance
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.AmountOfSubstance.html
  name: AmountOfSubstance
  nameWithType: AmountOfSubstance
  fullName: H.Extensions.Unit.AmountOfSubstance
- uid: H.Extensions.Unit.LuminousIntensity
  commentId: T:H.Extensions.Unit.LuminousIntensity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.LuminousIntensity.html
  name: LuminousIntensity
  nameWithType: LuminousIntensity
  fullName: H.Extensions.Unit.LuminousIntensity
- uid: H.Extensions.Unit.Angle
  commentId: T:H.Extensions.Unit.Angle
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Angle.html
  name: Angle
  nameWithType: Angle
  fullName: H.Extensions.Unit.Angle
- uid: H.Extensions.Unit.Area
  commentId: T:H.Extensions.Unit.Area
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Area.html
  name: Area
  nameWithType: Area
  fullName: H.Extensions.Unit.Area
- uid: H.Extensions.Unit.Volume
  commentId: T:H.Extensions.Unit.Volume
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Volume.html
  name: Volume
  nameWithType: Volume
  fullName: H.Extensions.Unit.Volume
- uid: H.Extensions.Unit.Density
  commentId: T:H.Extensions.Unit.Density
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Density.html
  name: Density
  nameWithType: Density
  fullName: H.Extensions.Unit.Density
- uid: H.Extensions.Unit.MolarMass
  commentId: T:H.Extensions.Unit.MolarMass
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MolarMass.html
  name: MolarMass
  nameWithType: MolarMass
  fullName: H.Extensions.Unit.MolarMass
- uid: H.Extensions.Unit.MolarConcentration
  commentId: T:H.Extensions.Unit.MolarConcentration
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MolarConcentration.html
  name: MolarConcentration
  nameWithType: MolarConcentration
  fullName: H.Extensions.Unit.MolarConcentration
- uid: H.Extensions.Unit.Velocity
  commentId: T:H.Extensions.Unit.Velocity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Velocity.html
  name: Velocity
  nameWithType: Velocity
  fullName: H.Extensions.Unit.Velocity
- uid: H.Extensions.Unit.TangentialVelocity
  commentId: T:H.Extensions.Unit.TangentialVelocity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.TangentialVelocity.html
  name: TangentialVelocity
  nameWithType: TangentialVelocity
  fullName: H.Extensions.Unit.TangentialVelocity
- uid: H.Extensions.Unit.AngularVelocity
  commentId: T:H.Extensions.Unit.AngularVelocity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.AngularVelocity.html
  name: AngularVelocity
  nameWithType: AngularVelocity
  fullName: H.Extensions.Unit.AngularVelocity
- uid: H.Extensions.Unit.SolidAngle
  commentId: T:H.Extensions.Unit.SolidAngle
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.SolidAngle.html
  name: SolidAngle
  nameWithType: SolidAngle
  fullName: H.Extensions.Unit.SolidAngle
- uid: H.Extensions.Unit.TimeSquared
  commentId: T:H.Extensions.Unit.TimeSquared
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.TimeSquared.html
  name: TimeSquared
  nameWithType: TimeSquared
  fullName: H.Extensions.Unit.TimeSquared
- uid: H.Extensions.Unit.VelocitySquared
  commentId: T:H.Extensions.Unit.VelocitySquared
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.VelocitySquared.html
  name: VelocitySquared
  nameWithType: VelocitySquared
  fullName: H.Extensions.Unit.VelocitySquared
- uid: H.Extensions.Unit.AngularVelocitySquared
  commentId: T:H.Extensions.Unit.AngularVelocitySquared
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.AngularVelocitySquared.html
  name: AngularVelocitySquared
  nameWithType: AngularVelocitySquared
  fullName: H.Extensions.Unit.AngularVelocitySquared
- uid: H.Extensions.Unit.ByLength
  commentId: T:H.Extensions.Unit.ByLength
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ByLength.html
  name: ByLength
  nameWithType: ByLength
  fullName: H.Extensions.Unit.ByLength
- uid: H.Extensions.Unit.ByArea
  commentId: T:H.Extensions.Unit.ByArea
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ByArea.html
  name: ByArea
  nameWithType: ByArea
  fullName: H.Extensions.Unit.ByArea
- uid: H.Extensions.Unit.MassByLength
  commentId: T:H.Extensions.Unit.MassByLength
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MassByLength.html
  name: MassByLength
  nameWithType: MassByLength
  fullName: H.Extensions.Unit.MassByLength
- uid: H.Extensions.Unit.MassByArea
  commentId: T:H.Extensions.Unit.MassByArea
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MassByArea.html
  name: MassByArea
  nameWithType: MassByArea
  fullName: H.Extensions.Unit.MassByArea
- uid: H.Extensions.Unit.FourDimensionalVolume
  commentId: T:H.Extensions.Unit.FourDimensionalVolume
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.FourDimensionalVolume.html
  name: FourDimensionalVolume
  nameWithType: FourDimensionalVolume
  fullName: H.Extensions.Unit.FourDimensionalVolume
- uid: H.Extensions.Unit.MolarConcentrationGradient
  commentId: T:H.Extensions.Unit.MolarConcentrationGradient
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MolarConcentrationGradient.html
  name: MolarConcentrationGradient
  nameWithType: MolarConcentrationGradient
  fullName: H.Extensions.Unit.MolarConcentrationGradient
- uid: H.Extensions.Unit.AmountOfSubstanceByArea
  commentId: T:H.Extensions.Unit.AmountOfSubstanceByArea
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.AmountOfSubstanceByArea.html
  name: AmountOfSubstanceByArea
  nameWithType: AmountOfSubstanceByArea
  fullName: H.Extensions.Unit.AmountOfSubstanceByArea
- uid: H.Extensions.Unit.AmountOfSubstanceByTime
  commentId: T:H.Extensions.Unit.AmountOfSubstanceByTime
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.AmountOfSubstanceByTime.html
  name: AmountOfSubstanceByTime
  nameWithType: AmountOfSubstanceByTime
  fullName: H.Extensions.Unit.AmountOfSubstanceByTime
- uid: H.Extensions.Unit.DiffusionFlux
  commentId: T:H.Extensions.Unit.DiffusionFlux
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.DiffusionFlux.html
  name: DiffusionFlux
  nameWithType: DiffusionFlux
  fullName: H.Extensions.Unit.DiffusionFlux
- uid: H.Extensions.Unit.KinematicViscosity
  commentId: T:H.Extensions.Unit.KinematicViscosity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.KinematicViscosity.html
  name: KinematicViscosity
  nameWithType: KinematicViscosity
  fullName: H.Extensions.Unit.KinematicViscosity
- uid: H.Extensions.Unit.Acceleration
  commentId: T:H.Extensions.Unit.Acceleration
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Acceleration.html
  name: Acceleration
  nameWithType: Acceleration
  fullName: H.Extensions.Unit.Acceleration
- uid: H.Extensions.Unit.Momentum
  commentId: T:H.Extensions.Unit.Momentum
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Momentum.html
  name: Momentum
  nameWithType: Momentum
  fullName: H.Extensions.Unit.Momentum
- uid: H.Extensions.Unit.Force
  commentId: T:H.Extensions.Unit.Force
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Force.html
  name: Force
  nameWithType: Force
  fullName: H.Extensions.Unit.Force
- uid: H.Extensions.Unit.MassFlowRate
  commentId: T:H.Extensions.Unit.MassFlowRate
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MassFlowRate.html
  name: MassFlowRate
  nameWithType: MassFlowRate
  fullName: H.Extensions.Unit.MassFlowRate
- uid: H.Extensions.Unit.MomentOfInertia
  commentId: T:H.Extensions.Unit.MomentOfInertia
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MomentOfInertia.html
  name: MomentOfInertia
  nameWithType: MomentOfInertia
  fullName: H.Extensions.Unit.MomentOfInertia
- uid: H.Extensions.Unit.AngularMomentum
  commentId: T:H.Extensions.Unit.AngularMomentum
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.AngularMomentum.html
  name: AngularMomentum
  nameWithType: AngularMomentum
  fullName: H.Extensions.Unit.AngularMomentum
- uid: H.Extensions.Unit.Energy
  commentId: T:H.Extensions.Unit.Energy
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Energy.html
  name: Energy
  nameWithType: Energy
  fullName: H.Extensions.Unit.Energy
- uid: H.Extensions.Unit.SurfaceTension
  commentId: T:H.Extensions.Unit.SurfaceTension
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.SurfaceTension.html
  name: SurfaceTension
  nameWithType: SurfaceTension
  fullName: H.Extensions.Unit.SurfaceTension
- uid: H.Extensions.Unit.ElectricCharge
  commentId: T:H.Extensions.Unit.ElectricCharge
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ElectricCharge.html
  name: ElectricCharge
  nameWithType: ElectricCharge
  fullName: H.Extensions.Unit.ElectricCharge
- uid: H.Extensions.Unit.ElectricPotential
  commentId: T:H.Extensions.Unit.ElectricPotential
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ElectricPotential.html
  name: ElectricPotential
  nameWithType: ElectricPotential
  fullName: H.Extensions.Unit.ElectricPotential
- uid: H.Extensions.Unit.ElectricPotentialSquared
  commentId: T:H.Extensions.Unit.ElectricPotentialSquared
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ElectricPotentialSquared.html
  name: ElectricPotentialSquared
  nameWithType: ElectricPotentialSquared
  fullName: H.Extensions.Unit.ElectricPotentialSquared
- uid: H.Extensions.Unit.Power
  commentId: T:H.Extensions.Unit.Power
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Power.html
  name: Power
  nameWithType: Power
  fullName: H.Extensions.Unit.Power
- uid: H.Extensions.Unit.Resistance
  commentId: T:H.Extensions.Unit.Resistance
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Resistance.html
  name: Resistance
  nameWithType: Resistance
  fullName: H.Extensions.Unit.Resistance
- uid: H.Extensions.Unit.Pressure
  commentId: T:H.Extensions.Unit.Pressure
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Pressure.html
  name: Pressure
  nameWithType: Pressure
  fullName: H.Extensions.Unit.Pressure
- uid: H.Extensions.Unit.Frequency
  commentId: T:H.Extensions.Unit.Frequency
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Frequency.html
  name: Frequency
  nameWithType: Frequency
  fullName: H.Extensions.Unit.Frequency
- uid: H.Extensions.Unit.VelocityGradient
  commentId: T:H.Extensions.Unit.VelocityGradient
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.VelocityGradient.html
  name: VelocityGradient
  nameWithType: VelocityGradient
  fullName: H.Extensions.Unit.VelocityGradient
- uid: H.Extensions.Unit.CoefficientOfViscosity
  commentId: T:H.Extensions.Unit.CoefficientOfViscosity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.CoefficientOfViscosity.html
  name: CoefficientOfViscosity
  nameWithType: CoefficientOfViscosity
  fullName: H.Extensions.Unit.CoefficientOfViscosity
- uid: H.Extensions.Unit.VolumeFlowRate
  commentId: T:H.Extensions.Unit.VolumeFlowRate
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.VolumeFlowRate.html
  name: VolumeFlowRate
  nameWithType: VolumeFlowRate
  fullName: H.Extensions.Unit.VolumeFlowRate
- uid: H.Extensions.Unit.ResistanceToFlow
  commentId: T:H.Extensions.Unit.ResistanceToFlow
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ResistanceToFlow.html
  name: ResistanceToFlow
  nameWithType: ResistanceToFlow
  fullName: H.Extensions.Unit.ResistanceToFlow
- uid: H.Extensions.Unit.MassByAreaByTimeSquared
  commentId: T:H.Extensions.Unit.MassByAreaByTimeSquared
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MassByAreaByTimeSquared.html
  name: MassByAreaByTimeSquared
  nameWithType: MassByAreaByTimeSquared
  fullName: H.Extensions.Unit.MassByAreaByTimeSquared
- uid: H.Extensions.Unit.VelocityByDensity
  commentId: T:H.Extensions.Unit.VelocityByDensity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.VelocityByDensity.html
  name: VelocityByDensity
  nameWithType: VelocityByDensity
  fullName: H.Extensions.Unit.VelocityByDensity
- uid: H.Extensions.Unit.ThermalCapacity
  commentId: T:H.Extensions.Unit.ThermalCapacity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ThermalCapacity.html
  name: ThermalCapacity
  nameWithType: ThermalCapacity
  fullName: H.Extensions.Unit.ThermalCapacity
- uid: H.Extensions.Unit.SpecificHeat
  commentId: T:H.Extensions.Unit.SpecificHeat
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.SpecificHeat.html
  name: SpecificHeat
  nameWithType: SpecificHeat
  fullName: H.Extensions.Unit.SpecificHeat
- uid: H.Extensions.Unit.MolarSpecificHeat
  commentId: T:H.Extensions.Unit.MolarSpecificHeat
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MolarSpecificHeat.html
  name: MolarSpecificHeat
  nameWithType: MolarSpecificHeat
  fullName: H.Extensions.Unit.MolarSpecificHeat
- uid: H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature
  commentId: T:H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature.html
  name: MolarConcentrationTimesAbsoluteTemperature
  nameWithType: MolarConcentrationTimesAbsoluteTemperature
  fullName: H.Extensions.Unit.MolarConcentrationTimesAbsoluteTemperature
- uid: H.Extensions.Unit.CoefficientOfThermalExpansion
  commentId: T:H.Extensions.Unit.CoefficientOfThermalExpansion
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.CoefficientOfThermalExpansion.html
  name: CoefficientOfThermalExpansion
  nameWithType: CoefficientOfThermalExpansion
  fullName: H.Extensions.Unit.CoefficientOfThermalExpansion
- uid: H.Extensions.Unit.ThermalCapacityByVolume
  commentId: T:H.Extensions.Unit.ThermalCapacityByVolume
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ThermalCapacityByVolume.html
  name: ThermalCapacityByVolume
  nameWithType: ThermalCapacityByVolume
  fullName: H.Extensions.Unit.ThermalCapacityByVolume
- uid: H.Extensions.Unit.AbsoluteTemperature
  commentId: T:H.Extensions.Unit.AbsoluteTemperature
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.AbsoluteTemperature.html
  name: AbsoluteTemperature
  nameWithType: AbsoluteTemperature
  fullName: H.Extensions.Unit.AbsoluteTemperature
- uid: H.Extensions.Unit.EnergyFlux
  commentId: T:H.Extensions.Unit.EnergyFlux
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.EnergyFlux.html
  name: EnergyFlux
  nameWithType: EnergyFlux
  fullName: H.Extensions.Unit.EnergyFlux
- uid: H.Extensions.Unit.PowerGradient
  commentId: T:H.Extensions.Unit.PowerGradient
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.PowerGradient.html
  name: PowerGradient
  nameWithType: PowerGradient
  fullName: H.Extensions.Unit.PowerGradient
- uid: H.Extensions.Unit.TemperatureGradient
  commentId: T:H.Extensions.Unit.TemperatureGradient
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.TemperatureGradient.html
  name: TemperatureGradient
  nameWithType: TemperatureGradient
  fullName: H.Extensions.Unit.TemperatureGradient
- uid: H.Extensions.Unit.ThermalConductivity
  commentId: T:H.Extensions.Unit.ThermalConductivity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ThermalConductivity.html
  name: ThermalConductivity
  nameWithType: ThermalConductivity
  fullName: H.Extensions.Unit.ThermalConductivity
- uid: H.Extensions.Unit.ResistanceTimesArea
  commentId: T:H.Extensions.Unit.ResistanceTimesArea
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.ResistanceTimesArea.html
  name: ResistanceTimesArea
  nameWithType: ResistanceTimesArea
  fullName: H.Extensions.Unit.ResistanceTimesArea
- uid: H.Extensions.Unit.Resistivity
  commentId: T:H.Extensions.Unit.Resistivity
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Resistivity.html
  name: Resistivity
  nameWithType: Resistivity
  fullName: H.Extensions.Unit.Resistivity
- uid: H.Extensions.Unit.LuminousFlux
  commentId: T:H.Extensions.Unit.LuminousFlux
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.LuminousFlux.html
  name: LuminousFlux
  nameWithType: LuminousFlux
  fullName: H.Extensions.Unit.LuminousFlux
- uid: H.Extensions.Unit.Illuminance
  commentId: T:H.Extensions.Unit.Illuminance
  parent: H.Extensions.Unit
  href: H.Extensions.Unit.Illuminance.html
  name: Illuminance
  nameWithType: Illuminance
  fullName: H.Extensions.Unit.Illuminance
